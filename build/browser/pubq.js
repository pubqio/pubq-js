/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["PUBQ"] = factory();
	else
		root["PUBQ"] = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/ag-channel/index.js":
/*!******************************************!*\
  !*** ./node_modules/ag-channel/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ConsumableStream = __webpack_require__(/*! consumable-stream */ \"./node_modules/consumable-stream/index.js\");\n\nclass AGChannel extends ConsumableStream {\n  constructor(name, client, eventDemux, dataDemux) {\n    super();\n    this.PENDING = AGChannel.PENDING;\n    this.SUBSCRIBED = AGChannel.SUBSCRIBED;\n    this.UNSUBSCRIBED = AGChannel.UNSUBSCRIBED;\n\n    this.name = name;\n    this.client = client;\n\n    this._eventDemux = eventDemux;\n    this._dataStream = dataDemux.stream(this.name);\n  }\n\n  createConsumer(timeout) {\n    return this._dataStream.createConsumer(timeout);\n  }\n\n  listener(eventName) {\n    return this._eventDemux.stream(`${this.name}/${eventName}`);\n  }\n\n  close() {\n    this.client.closeChannel(this.name);\n  }\n\n  kill() {\n    this.client.killChannel(this.name);\n  }\n\n  killOutputConsumer(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      this.client.killChannelOutputConsumer(consumerId);\n    }\n  }\n\n  killListenerConsumer(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      this.client.killChannelListenerConsumer(consumerId);\n    }\n  }\n\n  getOutputConsumerStats(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n\n  getListenerConsumerStats(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n\n  getBackpressure() {\n    return this.client.getChannelBackpressure(this.name);\n  }\n\n  getListenerConsumerBackpressure(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n\n  getOutputConsumerBackpressure(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n\n  closeOutput() {\n    this.client.channelCloseOutput(this.name);\n  }\n\n  closeListener(eventName) {\n    this.client.channelCloseListener(this.name, eventName);\n  }\n\n  closeAllListeners() {\n    this.client.channelCloseAllListeners(this.name);\n  }\n\n  killOutput() {\n    this.client.channelKillOutput(this.name);\n  }\n\n  killListener(eventName) {\n    this.client.channelKillListener(this.name, eventName);\n  }\n\n  killAllListeners() {\n    this.client.channelKillAllListeners(this.name);\n  }\n\n  getOutputConsumerStatsList() {\n    return this.client.channelGetOutputConsumerStatsList(this.name);\n  }\n\n  getListenerConsumerStatsList(eventName) {\n    return this.client.channelGetListenerConsumerStatsList(this.name, eventName);\n  }\n\n  getAllListenersConsumerStatsList() {\n    return this.client.channelGetAllListenersConsumerStatsList(this.name);\n  }\n\n  getOutputBackpressure() {\n    return this.client.channelGetOutputBackpressure(this.name);\n  }\n\n  getListenerBackpressure(eventName) {\n    return this.client.channelGetListenerBackpressure(this.name, eventName);\n  }\n\n  getAllListenersBackpressure() {\n    return this.client.channelGetAllListenersBackpressure(this.name);\n  }\n\n  hasOutputConsumer(consumerId) {\n    return this.client.channelHasOutputConsumer(this.name, consumerId);\n  }\n\n  hasListenerConsumer(eventName, consumerId) {\n    return this.client.channelHasListenerConsumer(this.name, eventName, consumerId);\n  }\n\n  hasAnyListenerConsumer(consumerId) {\n    return this.client.channelHasAnyListenerConsumer(this.name, consumerId);\n  }\n\n  get state() {\n    return this.client.getChannelState(this.name);\n  }\n\n  set state(value) {\n    throw new Error('Cannot directly set channel state');\n  }\n\n  get options() {\n    return this.client.getChannelOptions(this.name);\n  }\n\n  set options(value) {\n    throw new Error('Cannot directly set channel options');\n  }\n\n  subscribe(options) {\n    this.client.subscribe(this.name, options);\n  }\n\n  unsubscribe() {\n    this.client.unsubscribe(this.name);\n  }\n\n  isSubscribed(includePending) {\n    return this.client.isSubscribed(this.name, includePending);\n  }\n\n  transmitPublish(data) {\n    return this.client.transmitPublish(this.name, data);\n  }\n\n  invokePublish(data) {\n    return this.client.invokePublish(this.name, data);\n  }\n}\n\nAGChannel.PENDING = 'pending';\nAGChannel.SUBSCRIBED = 'subscribed';\nAGChannel.UNSUBSCRIBED = 'unsubscribed';\n\nmodule.exports = AGChannel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWctY2hhbm5lbC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUIsbUJBQU8sQ0FBQyxvRUFBbUI7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzQ0FBc0MsVUFBVSxHQUFHLFVBQVU7QUFDN0Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvYWctY2hhbm5lbC9pbmRleC5qcz81ZmE5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENvbnN1bWFibGVTdHJlYW0gPSByZXF1aXJlKCdjb25zdW1hYmxlLXN0cmVhbScpO1xuXG5jbGFzcyBBR0NoYW5uZWwgZXh0ZW5kcyBDb25zdW1hYmxlU3RyZWFtIHtcbiAgY29uc3RydWN0b3IobmFtZSwgY2xpZW50LCBldmVudERlbXV4LCBkYXRhRGVtdXgpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuUEVORElORyA9IEFHQ2hhbm5lbC5QRU5ESU5HO1xuICAgIHRoaXMuU1VCU0NSSUJFRCA9IEFHQ2hhbm5lbC5TVUJTQ1JJQkVEO1xuICAgIHRoaXMuVU5TVUJTQ1JJQkVEID0gQUdDaGFubmVsLlVOU1VCU0NSSUJFRDtcblxuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG5cbiAgICB0aGlzLl9ldmVudERlbXV4ID0gZXZlbnREZW11eDtcbiAgICB0aGlzLl9kYXRhU3RyZWFtID0gZGF0YURlbXV4LnN0cmVhbSh0aGlzLm5hbWUpO1xuICB9XG5cbiAgY3JlYXRlQ29uc3VtZXIodGltZW91dCkge1xuICAgIHJldHVybiB0aGlzLl9kYXRhU3RyZWFtLmNyZWF0ZUNvbnN1bWVyKHRpbWVvdXQpO1xuICB9XG5cbiAgbGlzdGVuZXIoZXZlbnROYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuX2V2ZW50RGVtdXguc3RyZWFtKGAke3RoaXMubmFtZX0vJHtldmVudE5hbWV9YCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmNsaWVudC5jbG9zZUNoYW5uZWwodGhpcy5uYW1lKTtcbiAgfVxuXG4gIGtpbGwoKSB7XG4gICAgdGhpcy5jbGllbnQua2lsbENoYW5uZWwodGhpcy5uYW1lKTtcbiAgfVxuXG4gIGtpbGxPdXRwdXRDb25zdW1lcihjb25zdW1lcklkKSB7XG4gICAgaWYgKHRoaXMuaGFzT3V0cHV0Q29uc3VtZXIoY29uc3VtZXJJZCkpIHtcbiAgICAgIHRoaXMuY2xpZW50LmtpbGxDaGFubmVsT3V0cHV0Q29uc3VtZXIoY29uc3VtZXJJZCk7XG4gICAgfVxuICB9XG5cbiAga2lsbExpc3RlbmVyQ29uc3VtZXIoY29uc3VtZXJJZCkge1xuICAgIGlmICh0aGlzLmhhc0FueUxpc3RlbmVyQ29uc3VtZXIoY29uc3VtZXJJZCkpIHtcbiAgICAgIHRoaXMuY2xpZW50LmtpbGxDaGFubmVsTGlzdGVuZXJDb25zdW1lcihjb25zdW1lcklkKTtcbiAgICB9XG4gIH1cblxuICBnZXRPdXRwdXRDb25zdW1lclN0YXRzKGNvbnN1bWVySWQpIHtcbiAgICBpZiAodGhpcy5oYXNPdXRwdXRDb25zdW1lcihjb25zdW1lcklkKSkge1xuICAgICAgcmV0dXJuIHRoaXMuY2xpZW50LmdldENoYW5uZWxPdXRwdXRDb25zdW1lclN0YXRzKGNvbnN1bWVySWQpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0TGlzdGVuZXJDb25zdW1lclN0YXRzKGNvbnN1bWVySWQpIHtcbiAgICBpZiAodGhpcy5oYXNBbnlMaXN0ZW5lckNvbnN1bWVyKGNvbnN1bWVySWQpKSB7XG4gICAgICByZXR1cm4gdGhpcy5jbGllbnQuZ2V0Q2hhbm5lbExpc3RlbmVyQ29uc3VtZXJTdGF0cyhjb25zdW1lcklkKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldEJhY2twcmVzc3VyZSgpIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZ2V0Q2hhbm5lbEJhY2twcmVzc3VyZSh0aGlzLm5hbWUpO1xuICB9XG5cbiAgZ2V0TGlzdGVuZXJDb25zdW1lckJhY2twcmVzc3VyZShjb25zdW1lcklkKSB7XG4gICAgaWYgKHRoaXMuaGFzQW55TGlzdGVuZXJDb25zdW1lcihjb25zdW1lcklkKSkge1xuICAgICAgcmV0dXJuIHRoaXMuY2xpZW50LmdldENoYW5uZWxMaXN0ZW5lckNvbnN1bWVyQmFja3ByZXNzdXJlKGNvbnN1bWVySWQpO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIGdldE91dHB1dENvbnN1bWVyQmFja3ByZXNzdXJlKGNvbnN1bWVySWQpIHtcbiAgICBpZiAodGhpcy5oYXNPdXRwdXRDb25zdW1lcihjb25zdW1lcklkKSkge1xuICAgICAgcmV0dXJuIHRoaXMuY2xpZW50LmdldENoYW5uZWxPdXRwdXRDb25zdW1lckJhY2twcmVzc3VyZShjb25zdW1lcklkKTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBjbG9zZU91dHB1dCgpIHtcbiAgICB0aGlzLmNsaWVudC5jaGFubmVsQ2xvc2VPdXRwdXQodGhpcy5uYW1lKTtcbiAgfVxuXG4gIGNsb3NlTGlzdGVuZXIoZXZlbnROYW1lKSB7XG4gICAgdGhpcy5jbGllbnQuY2hhbm5lbENsb3NlTGlzdGVuZXIodGhpcy5uYW1lLCBldmVudE5hbWUpO1xuICB9XG5cbiAgY2xvc2VBbGxMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5jbGllbnQuY2hhbm5lbENsb3NlQWxsTGlzdGVuZXJzKHRoaXMubmFtZSk7XG4gIH1cblxuICBraWxsT3V0cHV0KCkge1xuICAgIHRoaXMuY2xpZW50LmNoYW5uZWxLaWxsT3V0cHV0KHRoaXMubmFtZSk7XG4gIH1cblxuICBraWxsTGlzdGVuZXIoZXZlbnROYW1lKSB7XG4gICAgdGhpcy5jbGllbnQuY2hhbm5lbEtpbGxMaXN0ZW5lcih0aGlzLm5hbWUsIGV2ZW50TmFtZSk7XG4gIH1cblxuICBraWxsQWxsTGlzdGVuZXJzKCkge1xuICAgIHRoaXMuY2xpZW50LmNoYW5uZWxLaWxsQWxsTGlzdGVuZXJzKHRoaXMubmFtZSk7XG4gIH1cblxuICBnZXRPdXRwdXRDb25zdW1lclN0YXRzTGlzdCgpIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuY2hhbm5lbEdldE91dHB1dENvbnN1bWVyU3RhdHNMaXN0KHRoaXMubmFtZSk7XG4gIH1cblxuICBnZXRMaXN0ZW5lckNvbnN1bWVyU3RhdHNMaXN0KGV2ZW50TmFtZSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5jaGFubmVsR2V0TGlzdGVuZXJDb25zdW1lclN0YXRzTGlzdCh0aGlzLm5hbWUsIGV2ZW50TmFtZSk7XG4gIH1cblxuICBnZXRBbGxMaXN0ZW5lcnNDb25zdW1lclN0YXRzTGlzdCgpIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuY2hhbm5lbEdldEFsbExpc3RlbmVyc0NvbnN1bWVyU3RhdHNMaXN0KHRoaXMubmFtZSk7XG4gIH1cblxuICBnZXRPdXRwdXRCYWNrcHJlc3N1cmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xpZW50LmNoYW5uZWxHZXRPdXRwdXRCYWNrcHJlc3N1cmUodGhpcy5uYW1lKTtcbiAgfVxuXG4gIGdldExpc3RlbmVyQmFja3ByZXNzdXJlKGV2ZW50TmFtZSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5jaGFubmVsR2V0TGlzdGVuZXJCYWNrcHJlc3N1cmUodGhpcy5uYW1lLCBldmVudE5hbWUpO1xuICB9XG5cbiAgZ2V0QWxsTGlzdGVuZXJzQmFja3ByZXNzdXJlKCkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5jaGFubmVsR2V0QWxsTGlzdGVuZXJzQmFja3ByZXNzdXJlKHRoaXMubmFtZSk7XG4gIH1cblxuICBoYXNPdXRwdXRDb25zdW1lcihjb25zdW1lcklkKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xpZW50LmNoYW5uZWxIYXNPdXRwdXRDb25zdW1lcih0aGlzLm5hbWUsIGNvbnN1bWVySWQpO1xuICB9XG5cbiAgaGFzTGlzdGVuZXJDb25zdW1lcihldmVudE5hbWUsIGNvbnN1bWVySWQpIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuY2hhbm5lbEhhc0xpc3RlbmVyQ29uc3VtZXIodGhpcy5uYW1lLCBldmVudE5hbWUsIGNvbnN1bWVySWQpO1xuICB9XG5cbiAgaGFzQW55TGlzdGVuZXJDb25zdW1lcihjb25zdW1lcklkKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xpZW50LmNoYW5uZWxIYXNBbnlMaXN0ZW5lckNvbnN1bWVyKHRoaXMubmFtZSwgY29uc3VtZXJJZCk7XG4gIH1cblxuICBnZXQgc3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xpZW50LmdldENoYW5uZWxTdGF0ZSh0aGlzLm5hbWUpO1xuICB9XG5cbiAgc2V0IHN0YXRlKHZhbHVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgZGlyZWN0bHkgc2V0IGNoYW5uZWwgc3RhdGUnKTtcbiAgfVxuXG4gIGdldCBvcHRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5nZXRDaGFubmVsT3B0aW9ucyh0aGlzLm5hbWUpO1xuICB9XG5cbiAgc2V0IG9wdGlvbnModmFsdWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBkaXJlY3RseSBzZXQgY2hhbm5lbCBvcHRpb25zJyk7XG4gIH1cblxuICBzdWJzY3JpYmUob3B0aW9ucykge1xuICAgIHRoaXMuY2xpZW50LnN1YnNjcmliZSh0aGlzLm5hbWUsIG9wdGlvbnMpO1xuICB9XG5cbiAgdW5zdWJzY3JpYmUoKSB7XG4gICAgdGhpcy5jbGllbnQudW5zdWJzY3JpYmUodGhpcy5uYW1lKTtcbiAgfVxuXG4gIGlzU3Vic2NyaWJlZChpbmNsdWRlUGVuZGluZykge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5pc1N1YnNjcmliZWQodGhpcy5uYW1lLCBpbmNsdWRlUGVuZGluZyk7XG4gIH1cblxuICB0cmFuc21pdFB1Ymxpc2goZGF0YSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC50cmFuc21pdFB1Ymxpc2godGhpcy5uYW1lLCBkYXRhKTtcbiAgfVxuXG4gIGludm9rZVB1Ymxpc2goZGF0YSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5pbnZva2VQdWJsaXNoKHRoaXMubmFtZSwgZGF0YSk7XG4gIH1cbn1cblxuQUdDaGFubmVsLlBFTkRJTkcgPSAncGVuZGluZyc7XG5BR0NoYW5uZWwuU1VCU0NSSUJFRCA9ICdzdWJzY3JpYmVkJztcbkFHQ2hhbm5lbC5VTlNVQlNDUklCRUQgPSAndW5zdWJzY3JpYmVkJztcblxubW9kdWxlLmV4cG9ydHMgPSBBR0NoYW5uZWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ag-channel/index.js\n");

/***/ }),

/***/ "./node_modules/ag-request/index.js":
/*!******************************************!*\
  !*** ./node_modules/ag-request/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const scErrors = __webpack_require__(/*! sc-errors */ \"./node_modules/sc-errors/index.js\");\nconst InvalidActionError = scErrors.InvalidActionError;\n\nfunction AGRequest(socket, id, procedureName, data) {\n  this.socket = socket;\n  this.id = id;\n  this.procedure = procedureName;\n  this.data = data;\n  this.sent = false;\n\n  this._respond = (responseData, options) => {\n    if (this.sent) {\n      throw new InvalidActionError(`Response to request ${this.id} has already been sent`);\n    }\n    this.sent = true;\n    this.socket.sendObject(responseData, options);\n  };\n\n  this.end = (data, options) => {\n    let responseData = {\n      rid: this.id\n    };\n    if (data !== undefined) {\n      responseData.data = data;\n    }\n    this._respond(responseData, options);\n  };\n\n  this.error = (error, options) => {\n    let responseData = {\n      rid: this.id,\n      error: scErrors.dehydrateError(error)\n    };\n    this._respond(responseData, options);\n  };\n}\n\nmodule.exports = AGRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWctcmVxdWVzdC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxvREFBVztBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBEQUEwRCxTQUFTO0FBQ25FO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy9hZy1yZXF1ZXN0L2luZGV4LmpzP2M5ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2NFcnJvcnMgPSByZXF1aXJlKCdzYy1lcnJvcnMnKTtcbmNvbnN0IEludmFsaWRBY3Rpb25FcnJvciA9IHNjRXJyb3JzLkludmFsaWRBY3Rpb25FcnJvcjtcblxuZnVuY3Rpb24gQUdSZXF1ZXN0KHNvY2tldCwgaWQsIHByb2NlZHVyZU5hbWUsIGRhdGEpIHtcbiAgdGhpcy5zb2NrZXQgPSBzb2NrZXQ7XG4gIHRoaXMuaWQgPSBpZDtcbiAgdGhpcy5wcm9jZWR1cmUgPSBwcm9jZWR1cmVOYW1lO1xuICB0aGlzLmRhdGEgPSBkYXRhO1xuICB0aGlzLnNlbnQgPSBmYWxzZTtcblxuICB0aGlzLl9yZXNwb25kID0gKHJlc3BvbnNlRGF0YSwgb3B0aW9ucykgPT4ge1xuICAgIGlmICh0aGlzLnNlbnQpIHtcbiAgICAgIHRocm93IG5ldyBJbnZhbGlkQWN0aW9uRXJyb3IoYFJlc3BvbnNlIHRvIHJlcXVlc3QgJHt0aGlzLmlkfSBoYXMgYWxyZWFkeSBiZWVuIHNlbnRgKTtcbiAgICB9XG4gICAgdGhpcy5zZW50ID0gdHJ1ZTtcbiAgICB0aGlzLnNvY2tldC5zZW5kT2JqZWN0KHJlc3BvbnNlRGF0YSwgb3B0aW9ucyk7XG4gIH07XG5cbiAgdGhpcy5lbmQgPSAoZGF0YSwgb3B0aW9ucykgPT4ge1xuICAgIGxldCByZXNwb25zZURhdGEgPSB7XG4gICAgICByaWQ6IHRoaXMuaWRcbiAgICB9O1xuICAgIGlmIChkYXRhICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlc3BvbnNlRGF0YS5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgdGhpcy5fcmVzcG9uZChyZXNwb25zZURhdGEsIG9wdGlvbnMpO1xuICB9O1xuXG4gIHRoaXMuZXJyb3IgPSAoZXJyb3IsIG9wdGlvbnMpID0+IHtcbiAgICBsZXQgcmVzcG9uc2VEYXRhID0ge1xuICAgICAgcmlkOiB0aGlzLmlkLFxuICAgICAgZXJyb3I6IHNjRXJyb3JzLmRlaHlkcmF0ZUVycm9yKGVycm9yKVxuICAgIH07XG4gICAgdGhpcy5fcmVzcG9uZChyZXNwb25zZURhdGEsIG9wdGlvbnMpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFHUmVxdWVzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ag-request/index.js\n");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzPzFmYjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgdmFyIGlcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/buffer/index.js\n");

/***/ }),

/***/ "./node_modules/clone-deep/index.js":
/*!******************************************!*\
  !*** ./node_modules/clone-deep/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/**\n * Module dependenices\n */\n\nconst clone = __webpack_require__(/*! shallow-clone */ \"./node_modules/shallow-clone/index.js\");\nconst typeOf = __webpack_require__(/*! kind-of */ \"./node_modules/kind-of/index.js\");\nconst isPlainObject = __webpack_require__(/*! is-plain-object */ \"./node_modules/is-plain-object/index.js\");\n\nfunction cloneDeep(val, instanceClone) {\n  switch (typeOf(val)) {\n    case 'object':\n      return cloneObjectDeep(val, instanceClone);\n    case 'array':\n      return cloneArrayDeep(val, instanceClone);\n    default: {\n      return clone(val);\n    }\n  }\n}\n\nfunction cloneObjectDeep(val, instanceClone) {\n  if (typeof instanceClone === 'function') {\n    return instanceClone(val);\n  }\n  if (instanceClone || isPlainObject(val)) {\n    const res = new val.constructor();\n    for (let key in val) {\n      res[key] = cloneDeep(val[key], instanceClone);\n    }\n    return res;\n  }\n  return val;\n}\n\nfunction cloneArrayDeep(val, instanceClone) {\n  const res = new val.constructor(val.length);\n  for (let i = 0; i < val.length; i++) {\n    res[i] = cloneDeep(val[i], instanceClone);\n  }\n  return res;\n}\n\n/**\n * Expose `cloneDeep`\n */\n\nmodule.exports = cloneDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2xvbmUtZGVlcC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLDREQUFlO0FBQ3JDLGVBQWUsbUJBQU8sQ0FBQyxnREFBUztBQUNoQyxzQkFBc0IsbUJBQU8sQ0FBQyxnRUFBaUI7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy9jbG9uZS1kZWVwL2luZGV4LmpzPzk2NzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmljZXNcbiAqL1xuXG5jb25zdCBjbG9uZSA9IHJlcXVpcmUoJ3NoYWxsb3ctY2xvbmUnKTtcbmNvbnN0IHR5cGVPZiA9IHJlcXVpcmUoJ2tpbmQtb2YnKTtcbmNvbnN0IGlzUGxhaW5PYmplY3QgPSByZXF1aXJlKCdpcy1wbGFpbi1vYmplY3QnKTtcblxuZnVuY3Rpb24gY2xvbmVEZWVwKHZhbCwgaW5zdGFuY2VDbG9uZSkge1xuICBzd2l0Y2ggKHR5cGVPZih2YWwpKSB7XG4gICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgIHJldHVybiBjbG9uZU9iamVjdERlZXAodmFsLCBpbnN0YW5jZUNsb25lKTtcbiAgICBjYXNlICdhcnJheSc6XG4gICAgICByZXR1cm4gY2xvbmVBcnJheURlZXAodmFsLCBpbnN0YW5jZUNsb25lKTtcbiAgICBkZWZhdWx0OiB7XG4gICAgICByZXR1cm4gY2xvbmUodmFsKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xvbmVPYmplY3REZWVwKHZhbCwgaW5zdGFuY2VDbG9uZSkge1xuICBpZiAodHlwZW9mIGluc3RhbmNlQ2xvbmUgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gaW5zdGFuY2VDbG9uZSh2YWwpO1xuICB9XG4gIGlmIChpbnN0YW5jZUNsb25lIHx8IGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgIGNvbnN0IHJlcyA9IG5ldyB2YWwuY29uc3RydWN0b3IoKTtcbiAgICBmb3IgKGxldCBrZXkgaW4gdmFsKSB7XG4gICAgICByZXNba2V5XSA9IGNsb25lRGVlcCh2YWxba2V5XSwgaW5zdGFuY2VDbG9uZSk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG4gIH1cbiAgcmV0dXJuIHZhbDtcbn1cblxuZnVuY3Rpb24gY2xvbmVBcnJheURlZXAodmFsLCBpbnN0YW5jZUNsb25lKSB7XG4gIGNvbnN0IHJlcyA9IG5ldyB2YWwuY29uc3RydWN0b3IodmFsLmxlbmd0aCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzW2ldID0gY2xvbmVEZWVwKHZhbFtpXSwgaW5zdGFuY2VDbG9uZSk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxuLyoqXG4gKiBFeHBvc2UgYGNsb25lRGVlcGBcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsb25lRGVlcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/clone-deep/index.js\n");

/***/ }),

/***/ "./node_modules/consumable-stream/index.js":
/*!*************************************************!*\
  !*** ./node_modules/consumable-stream/index.js ***!
  \*************************************************/
/***/ ((module) => {

eval("class ConsumableStream {\n  async next(timeout) {\n    let asyncIterator = this.createConsumer(timeout);\n    let result = await asyncIterator.next();\n    asyncIterator.return();\n    return result;\n  }\n\n  async once(timeout) {\n    let result = await this.next(timeout);\n    if (result.done) {\n      // If stream was ended, this function should never resolve.\n      await new Promise(() => {});\n    }\n    return result.value;\n  }\n\n  createConsumer() {\n    throw new TypeError('Method must be overriden by subclass');\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.createConsumer();\n  }\n}\n\nmodule.exports = ConsumableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29uc3VtYWJsZS1zdHJlYW0vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvY29uc3VtYWJsZS1zdHJlYW0vaW5kZXguanM/OTkyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDb25zdW1hYmxlU3RyZWFtIHtcbiAgYXN5bmMgbmV4dCh0aW1lb3V0KSB7XG4gICAgbGV0IGFzeW5jSXRlcmF0b3IgPSB0aGlzLmNyZWF0ZUNvbnN1bWVyKHRpbWVvdXQpO1xuICAgIGxldCByZXN1bHQgPSBhd2FpdCBhc3luY0l0ZXJhdG9yLm5leHQoKTtcbiAgICBhc3luY0l0ZXJhdG9yLnJldHVybigpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBhc3luYyBvbmNlKHRpbWVvdXQpIHtcbiAgICBsZXQgcmVzdWx0ID0gYXdhaXQgdGhpcy5uZXh0KHRpbWVvdXQpO1xuICAgIGlmIChyZXN1bHQuZG9uZSkge1xuICAgICAgLy8gSWYgc3RyZWFtIHdhcyBlbmRlZCwgdGhpcyBmdW5jdGlvbiBzaG91bGQgbmV2ZXIgcmVzb2x2ZS5cbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKCgpID0+IHt9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdC52YWx1ZTtcbiAgfVxuXG4gIGNyZWF0ZUNvbnN1bWVyKCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ01ldGhvZCBtdXN0IGJlIG92ZXJyaWRlbiBieSBzdWJjbGFzcycpO1xuICB9XG5cbiAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gdGhpcy5jcmVhdGVDb25zdW1lcigpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ29uc3VtYWJsZVN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/consumable-stream/index.js\n");

/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/eventemitter3/index.js\n");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxTQUFTLFVBQVU7O0FBRW5CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanM/OTE1MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgaWVlZTc1NC4gQlNELTMtQ2xhdXNlIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xuZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n");

/***/ }),

/***/ "./node_modules/is-plain-object/index.js":
/*!***********************************************!*\
  !*** ./node_modules/is-plain-object/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nvar isObject = __webpack_require__(/*! isobject */ \"./node_modules/isobject/index.js\");\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqZWN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixlQUFlLG1CQUFPLENBQUMsa0RBQVU7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL2lzLXBsYWluLW9iamVjdC9pbmRleC5qcz9mYjQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogaXMtcGxhaW4tb2JqZWN0IDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9pcy1wbGFpbi1vYmplY3Q+XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTcsIEpvbiBTY2hsaW5rZXJ0LlxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnaXNvYmplY3QnKTtcblxuZnVuY3Rpb24gaXNPYmplY3RPYmplY3Qobykge1xuICByZXR1cm4gaXNPYmplY3QobykgPT09IHRydWVcbiAgICAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykgPT09ICdbb2JqZWN0IE9iamVjdF0nO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qobykge1xuICB2YXIgY3Rvcixwcm90O1xuXG4gIGlmIChpc09iamVjdE9iamVjdChvKSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcblxuICAvLyBJZiBoYXMgbW9kaWZpZWQgY29uc3RydWN0b3JcbiAgY3RvciA9IG8uY29uc3RydWN0b3I7XG4gIGlmICh0eXBlb2YgY3RvciAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGZhbHNlO1xuXG4gIC8vIElmIGhhcyBtb2RpZmllZCBwcm90b3R5cGVcbiAgcHJvdCA9IGN0b3IucHJvdG90eXBlO1xuICBpZiAoaXNPYmplY3RPYmplY3QocHJvdCkgPT09IGZhbHNlKSByZXR1cm4gZmFsc2U7XG5cbiAgLy8gSWYgY29uc3RydWN0b3IgZG9lcyBub3QgaGF2ZSBhbiBPYmplY3Qtc3BlY2lmaWMgbWV0aG9kXG4gIGlmIChwcm90Lmhhc093blByb3BlcnR5KCdpc1Byb3RvdHlwZU9mJykgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gTW9zdCBsaWtlbHkgYSBwbGFpbiBPYmplY3RcbiAgcmV0dXJuIHRydWU7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/is-plain-object/index.js\n");

/***/ }),

/***/ "./node_modules/isobject/index.js":
/*!****************************************!*\
  !*** ./node_modules/isobject/index.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXNvYmplY3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvaXNvYmplY3QvaW5kZXguanM/YTgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGlzb2JqZWN0IDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9pc29iamVjdD5cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNywgSm9uIFNjaGxpbmtlcnQuXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9IG51bGwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiYgQXJyYXkuaXNBcnJheSh2YWwpID09PSBmYWxzZTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/isobject/index.js\n");

/***/ }),

/***/ "./node_modules/kind-of/index.js":
/*!***************************************!*\
  !*** ./node_modules/kind-of/index.js ***!
  \***************************************/
/***/ ((module) => {

eval("var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMva2luZC1vZi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMva2luZC1vZi9pbmRleC5qcz9lZjVkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ga2luZE9mKHZhbCkge1xuICBpZiAodmFsID09PSB2b2lkIDApIHJldHVybiAndW5kZWZpbmVkJztcbiAgaWYgKHZhbCA9PT0gbnVsbCkgcmV0dXJuICdudWxsJztcblxuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWw7XG4gIGlmICh0eXBlID09PSAnYm9vbGVhbicpIHJldHVybiAnYm9vbGVhbic7XG4gIGlmICh0eXBlID09PSAnc3RyaW5nJykgcmV0dXJuICdzdHJpbmcnO1xuICBpZiAodHlwZSA9PT0gJ251bWJlcicpIHJldHVybiAnbnVtYmVyJztcbiAgaWYgKHR5cGUgPT09ICdzeW1ib2wnKSByZXR1cm4gJ3N5bWJvbCc7XG4gIGlmICh0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGlzR2VuZXJhdG9yRm4odmFsKSA/ICdnZW5lcmF0b3JmdW5jdGlvbicgOiAnZnVuY3Rpb24nO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkodmFsKSkgcmV0dXJuICdhcnJheSc7XG4gIGlmIChpc0J1ZmZlcih2YWwpKSByZXR1cm4gJ2J1ZmZlcic7XG4gIGlmIChpc0FyZ3VtZW50cyh2YWwpKSByZXR1cm4gJ2FyZ3VtZW50cyc7XG4gIGlmIChpc0RhdGUodmFsKSkgcmV0dXJuICdkYXRlJztcbiAgaWYgKGlzRXJyb3IodmFsKSkgcmV0dXJuICdlcnJvcic7XG4gIGlmIChpc1JlZ2V4cCh2YWwpKSByZXR1cm4gJ3JlZ2V4cCc7XG5cbiAgc3dpdGNoIChjdG9yTmFtZSh2YWwpKSB7XG4gICAgY2FzZSAnU3ltYm9sJzogcmV0dXJuICdzeW1ib2wnO1xuICAgIGNhc2UgJ1Byb21pc2UnOiByZXR1cm4gJ3Byb21pc2UnO1xuXG4gICAgLy8gU2V0LCBNYXAsIFdlYWtTZXQsIFdlYWtNYXBcbiAgICBjYXNlICdXZWFrTWFwJzogcmV0dXJuICd3ZWFrbWFwJztcbiAgICBjYXNlICdXZWFrU2V0JzogcmV0dXJuICd3ZWFrc2V0JztcbiAgICBjYXNlICdNYXAnOiByZXR1cm4gJ21hcCc7XG4gICAgY2FzZSAnU2V0JzogcmV0dXJuICdzZXQnO1xuXG4gICAgLy8gOC1iaXQgdHlwZWQgYXJyYXlzXG4gICAgY2FzZSAnSW50OEFycmF5JzogcmV0dXJuICdpbnQ4YXJyYXknO1xuICAgIGNhc2UgJ1VpbnQ4QXJyYXknOiByZXR1cm4gJ3VpbnQ4YXJyYXknO1xuICAgIGNhc2UgJ1VpbnQ4Q2xhbXBlZEFycmF5JzogcmV0dXJuICd1aW50OGNsYW1wZWRhcnJheSc7XG5cbiAgICAvLyAxNi1iaXQgdHlwZWQgYXJyYXlzXG4gICAgY2FzZSAnSW50MTZBcnJheSc6IHJldHVybiAnaW50MTZhcnJheSc7XG4gICAgY2FzZSAnVWludDE2QXJyYXknOiByZXR1cm4gJ3VpbnQxNmFycmF5JztcblxuICAgIC8vIDMyLWJpdCB0eXBlZCBhcnJheXNcbiAgICBjYXNlICdJbnQzMkFycmF5JzogcmV0dXJuICdpbnQzMmFycmF5JztcbiAgICBjYXNlICdVaW50MzJBcnJheSc6IHJldHVybiAndWludDMyYXJyYXknO1xuICAgIGNhc2UgJ0Zsb2F0MzJBcnJheSc6IHJldHVybiAnZmxvYXQzMmFycmF5JztcbiAgICBjYXNlICdGbG9hdDY0QXJyYXknOiByZXR1cm4gJ2Zsb2F0NjRhcnJheSc7XG4gIH1cblxuICBpZiAoaXNHZW5lcmF0b3JPYmoodmFsKSkge1xuICAgIHJldHVybiAnZ2VuZXJhdG9yJztcbiAgfVxuXG4gIC8vIE5vbi1wbGFpbiBvYmplY3RzXG4gIHR5cGUgPSB0b1N0cmluZy5jYWxsKHZhbCk7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ1tvYmplY3QgT2JqZWN0XSc6IHJldHVybiAnb2JqZWN0JztcbiAgICAvLyBpdGVyYXRvcnNcbiAgICBjYXNlICdbb2JqZWN0IE1hcCBJdGVyYXRvcl0nOiByZXR1cm4gJ21hcGl0ZXJhdG9yJztcbiAgICBjYXNlICdbb2JqZWN0IFNldCBJdGVyYXRvcl0nOiByZXR1cm4gJ3NldGl0ZXJhdG9yJztcbiAgICBjYXNlICdbb2JqZWN0IFN0cmluZyBJdGVyYXRvcl0nOiByZXR1cm4gJ3N0cmluZ2l0ZXJhdG9yJztcbiAgICBjYXNlICdbb2JqZWN0IEFycmF5IEl0ZXJhdG9yXSc6IHJldHVybiAnYXJyYXlpdGVyYXRvcic7XG4gIH1cblxuICAvLyBvdGhlclxuICByZXR1cm4gdHlwZS5zbGljZSg4LCAtMSkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMvZywgJycpO1xufTtcblxuZnVuY3Rpb24gY3Rvck5hbWUodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsLmNvbnN0cnVjdG9yID09PSAnZnVuY3Rpb24nID8gdmFsLmNvbnN0cnVjdG9yLm5hbWUgOiBudWxsO1xufVxuXG5mdW5jdGlvbiBpc0FycmF5KHZhbCkge1xuICBpZiAoQXJyYXkuaXNBcnJheSkgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsKTtcbiAgcmV0dXJuIHZhbCBpbnN0YW5jZW9mIEFycmF5O1xufVxuXG5mdW5jdGlvbiBpc0Vycm9yKHZhbCkge1xuICByZXR1cm4gdmFsIGluc3RhbmNlb2YgRXJyb3IgfHwgKHR5cGVvZiB2YWwubWVzc2FnZSA9PT0gJ3N0cmluZycgJiYgdmFsLmNvbnN0cnVjdG9yICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3Iuc3RhY2tUcmFjZUxpbWl0ID09PSAnbnVtYmVyJyk7XG59XG5cbmZ1bmN0aW9uIGlzRGF0ZSh2YWwpIHtcbiAgaWYgKHZhbCBpbnN0YW5jZW9mIERhdGUpIHJldHVybiB0cnVlO1xuICByZXR1cm4gdHlwZW9mIHZhbC50b0RhdGVTdHJpbmcgPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgdmFsLmdldERhdGUgPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgdmFsLnNldERhdGUgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGlzUmVnZXhwKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgUmVnRXhwKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIHR5cGVvZiB2YWwuZmxhZ3MgPT09ICdzdHJpbmcnXG4gICAgJiYgdHlwZW9mIHZhbC5pZ25vcmVDYXNlID09PSAnYm9vbGVhbidcbiAgICAmJiB0eXBlb2YgdmFsLm11bHRpbGluZSA9PT0gJ2Jvb2xlYW4nXG4gICAgJiYgdHlwZW9mIHZhbC5nbG9iYWwgPT09ICdib29sZWFuJztcbn1cblxuZnVuY3Rpb24gaXNHZW5lcmF0b3JGbihuYW1lLCB2YWwpIHtcbiAgcmV0dXJuIGN0b3JOYW1lKG5hbWUpID09PSAnR2VuZXJhdG9yRnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBpc0dlbmVyYXRvck9iaih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwudGhyb3cgPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgdmFsLnJldHVybiA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiB2YWwubmV4dCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gaXNBcmd1bWVudHModmFsKSB7XG4gIHRyeSB7XG4gICAgaWYgKHR5cGVvZiB2YWwubGVuZ3RoID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgdmFsLmNhbGxlZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpZiAoZXJyLm1lc3NhZ2UuaW5kZXhPZignY2FsbGVlJykgIT09IC0xKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIElmIHlvdSBuZWVkIHRvIHN1cHBvcnQgU2FmYXJpIDUtNyAoOC0xMCB5ci1vbGQgYnJvd3NlciksXG4gKiB0YWtlIGEgbG9vayBhdCBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2lzLWJ1ZmZlclxuICovXG5cbmZ1bmN0aW9uIGlzQnVmZmVyKHZhbCkge1xuICBpZiAodmFsLmNvbnN0cnVjdG9yICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gdmFsLmNvbnN0cnVjdG9yLmlzQnVmZmVyKHZhbCk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/kind-of/index.js\n");

/***/ }),

/***/ "./node_modules/linked-list/_source/linked-list.js":
/*!*********************************************************!*\
  !*** ./node_modules/linked-list/_source/linked-list.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Constants.\n */\n\nvar errorMessage;\n\nerrorMessage = 'An argument without append, prepend, ' +\n    'or detach methods was given to `List';\n\n/**\n * Creates a new List: A linked list is a bit like an Array, but\n * knows nothing about how many items are in it, and knows only about its\n * first (`head`) and last (`tail`) items. Each item (e.g. `head`, `tail`,\n * &c.) knows which item comes before or after it (its more like the\n * implementation of the DOM in JavaScript).\n * @global\n * @private\n * @constructor\n * @class Represents an instance of List.\n */\n\nfunction List(/*items...*/) {\n    if (arguments.length) {\n        return List.from(arguments);\n    }\n}\n\nvar ListPrototype;\n\nListPrototype = List.prototype;\n\n/**\n * Creates a new list from the arguments (each a list item) passed in.\n * @name List.of\n * @param {...ListItem} [items] - Zero or more items to attach.\n * @returns {list} - A new instance of List.\n */\n\nList.of = function (/*items...*/) {\n    return List.from.call(this, arguments);\n};\n\n/**\n * Creates a new list from the given array-like object (each a list item)\n * passed in.\n * @name List.from\n * @param {ListItem[]} [items] - The items to append.\n * @returns {list} - A new instance of List.\n */\nList.from = function (items) {\n    var list = new this(), length, iterator, item;\n\n    if (items && (length = items.length)) {\n        iterator = -1;\n\n        while (++iterator < length) {\n            item = items[iterator];\n\n            if (item !== null && item !== undefined) {\n                list.append(item);\n            }\n        }\n    }\n\n    return list;\n};\n\n/**\n * List#head\n * Default to `null`.\n */\nListPrototype.head = null;\n\n/**\n * List#tail\n * Default to `null`.\n */\nListPrototype.tail = null;\n\n/**\n * Returns the list's items as an array. This does *not* detach the items.\n * @name List#toArray\n * @returns {ListItem[]} - An array of (still attached) ListItems.\n */\nListPrototype.toArray = function () {\n    var item = this.head,\n        result = [];\n\n    while (item) {\n        result.push(item);\n        item = item.next;\n    }\n\n    return result;\n};\n\n/**\n * Prepends the given item to the list: Item will be the new first item\n * (`head`).\n * @name List#prepend\n * @param {ListItem} item - The item to prepend.\n * @returns {ListItem} - An instance of ListItem (the given item).\n */\nListPrototype.prepend = function (item) {\n    if (!item) {\n        return false;\n    }\n\n    if (!item.append || !item.prepend || !item.detach) {\n        throw new Error(errorMessage + '#prepend`.');\n    }\n\n    var self, head;\n\n    // Cache self.\n    self = this;\n\n    // If self has a first item, defer prepend to the first items prepend\n    // method, and return the result.\n    head = self.head;\n\n    if (head) {\n        return head.prepend(item);\n    }\n\n    // ...otherwise, there is no `head` (or `tail`) item yet.\n\n    // Detach the prependee.\n    item.detach();\n\n    // Set the prependees parent list to reference self.\n    item.list = self;\n\n    // Set self's first item to the prependee, and return the item.\n    self.head = item;\n\n    return item;\n};\n\n/**\n * Appends the given item to the list: Item will be the new last item (`tail`)\n * if the list had a first item, and its first item (`head`) otherwise.\n * @name List#append\n * @param {ListItem} item - The item to append.\n * @returns {ListItem} - An instance of ListItem (the given item).\n */\n\nListPrototype.append = function (item) {\n    if (!item) {\n        return false;\n    }\n\n    if (!item.append || !item.prepend || !item.detach) {\n        throw new Error(errorMessage + '#append`.');\n    }\n\n    var self, head, tail;\n\n    // Cache self.\n    self = this;\n\n    // If self has a last item, defer appending to the last items append\n    // method, and return the result.\n    tail = self.tail;\n\n    if (tail) {\n        return tail.append(item);\n    }\n\n    // If self has a first item, defer appending to the first items append\n    // method, and return the result.\n    head = self.head;\n\n    if (head) {\n        return head.append(item);\n    }\n\n    // ...otherwise, there is no `tail` or `head` item yet.\n\n    // Detach the appendee.\n    item.detach();\n\n    // Set the appendees parent list to reference self.\n    item.list = self;\n\n    // Set self's first item to the appendee, and return the item.\n    self.head = item;\n\n    return item;\n};\n\n/**\n * Creates a new ListItem: A linked list item is a bit like DOM node:\n * It knows only about its \"parent\" (`list`), the item before it (`prev`),\n * and the item after it (`next`).\n * @global\n * @private\n * @constructor\n * @class Represents an instance of ListItem.\n */\n\nfunction ListItem() {}\n\nList.Item = ListItem;\n\nvar ListItemPrototype = ListItem.prototype;\n\nListItemPrototype.next = null;\n\nListItemPrototype.prev = null;\n\nListItemPrototype.list = null;\n\n/**\n * Detaches the item operated on from its parent list.\n * @name ListItem#detach\n * @returns {ListItem} - The item operated on.\n */\nListItemPrototype.detach = function () {\n    // Cache self, the parent list, and the previous and next items.\n    var self = this,\n        list = self.list,\n        prev = self.prev,\n        next = self.next;\n\n    // If the item is already detached, return self.\n    if (!list) {\n        return self;\n    }\n\n    // If self is the last item in the parent list, link the lists last item\n    // to the previous item.\n    if (list.tail === self) {\n        list.tail = prev;\n    }\n\n    // If self is the first item in the parent list, link the lists first item\n    // to the next item.\n    if (list.head === self) {\n        list.head = next;\n    }\n\n    // If both the last and first items in the parent list are the same,\n    // remove the link to the last item.\n    if (list.tail === list.head) {\n        list.tail = null;\n    }\n\n    // If a previous item exists, link its next item to selfs next item.\n    if (prev) {\n        prev.next = next;\n    }\n\n    // If a next item exists, link its previous item to selfs previous item.\n    if (next) {\n        next.prev = prev;\n    }\n\n    // Remove links from self to both the next and previous items, and to the\n    // parent list.\n    self.prev = self.next = self.list = null;\n\n    // Return self.\n    return self;\n};\n\n/**\n * Prepends the given item *before* the item operated on.\n * @name ListItem#prepend\n * @param {ListItem} item - The item to prepend.\n * @returns {ListItem} - The item operated on, or false when that item is not\n * attached.\n */\nListItemPrototype.prepend = function (item) {\n    if (!item || !item.append || !item.prepend || !item.detach) {\n        throw new Error(errorMessage + 'Item#prepend`.');\n    }\n\n    // Cache self, the parent list, and the previous item.\n    var self = this,\n        list = self.list,\n        prev = self.prev;\n\n    // If self is detached, return false.\n    if (!list) {\n        return false;\n    }\n\n    // Detach the prependee.\n    item.detach();\n\n    // If self has a previous item...\n    if (prev) {\n        // ...link the prependees previous item, to selfs previous item.\n        item.prev = prev;\n\n        // ...link the previous items next item, to self.\n        prev.next = item;\n    }\n\n    // Set the prependees next item to self.\n    item.next = self;\n\n    // Set the prependees parent list to selfs parent list.\n    item.list = list;\n\n    // Set the previous item of self to the prependee.\n    self.prev = item;\n\n    // If self is the first item in the parent list, link the lists first item\n    // to the prependee.\n    if (self === list.head) {\n        list.head = item;\n    }\n\n    // If the the parent list has no last item, link the lists last item to\n    // self.\n    if (!list.tail) {\n        list.tail = self;\n    }\n\n    // Return the prependee.\n    return item;\n};\n\n/**\n * Appends the given item *after* the item operated on.\n * @name ListItem#append\n * @param {ListItem} item - The item to append.\n * @returns {ListItem} - The item operated on, or false when that item is not\n * attached.\n */\nListItemPrototype.append = function (item) {\n    // If item is falsey, return false.\n    if (!item || !item.append || !item.prepend || !item.detach) {\n        throw new Error(errorMessage + 'Item#append`.');\n    }\n\n    // Cache self, the parent list, and the next item.\n    var self = this,\n        list = self.list,\n        next = self.next;\n\n    // If self is detached, return false.\n    if (!list) {\n        return false;\n    }\n\n    // Detach the appendee.\n    item.detach();\n\n    // If self has a next item...\n    if (next) {\n        // ...link the appendees next item, to selfs next item.\n        item.next = next;\n\n        // ...link the next items previous item, to the appendee.\n        next.prev = item;\n    }\n\n    // Set the appendees previous item to self.\n    item.prev = self;\n\n    // Set the appendees parent list to selfs parent list.\n    item.list = list;\n\n    // Set the next item of self to the appendee.\n    self.next = item;\n\n    // If the the parent list has no last item or if self is the parent lists\n    // last item, link the lists last item to the appendee.\n    if (self === list.tail || !list.tail) {\n        list.tail = item;\n    }\n\n    // Return the appendee.\n    return item;\n};\n\n/**\n * Expose `List`.\n */\n\nmodule.exports = List;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/linked-list/_source/linked-list.js\n");

/***/ }),

/***/ "./node_modules/linked-list/index.js":
/*!*******************************************!*\
  !*** ./node_modules/linked-list/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./_source/linked-list.js */ \"./node_modules/linked-list/_source/linked-list.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGlua2VkLWxpc3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIseUhBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy9saW5rZWQtbGlzdC9pbmRleC5qcz80OGY5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19zb3VyY2UvbGlua2VkLWxpc3QuanMnKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/linked-list/index.js\n");

/***/ }),

/***/ "./node_modules/sc-errors/decycle.js":
/*!*******************************************!*\
  !*** ./node_modules/sc-errors/decycle.js ***!
  \*******************************************/
/***/ ((module) => {

eval("// Based on https://github.com/dscape/cycle/blob/master/cycle.js\n\nmodule.exports = function decycle(object) {\n// Make a deep copy of an object or array, assuring that there is at most\n// one instance of each object or array in the resulting structure. The\n// duplicate references (which might be forming cycles) are replaced with\n// an object of the form\n//      {$ref: PATH}\n// where the PATH is a JSONPath string that locates the first occurance.\n// So,\n//      var a = [];\n//      a[0] = a;\n//      return JSON.stringify(JSON.decycle(a));\n// produces the string '[{\"$ref\":\"$\"}]'.\n\n// JSONPath is used to locate the unique object. $ indicates the top level of\n// the object or array. [NUMBER] or [STRING] indicates a child member or\n// property.\n\n    var objects = [],   // Keep a reference to each unique object or array\n        paths = [];     // Keep the path to each unique object or array\n\n    return (function derez(value, path) {\n\n// The derez recurses through the object, producing the deep copy.\n\n        var i,          // The loop counter\n            name,       // Property name\n            nu;         // The new object or array\n\n// typeof null === 'object', so go on if this value is really an object but not\n// one of the weird builtin objects.\n\n        if (typeof value === 'object' && value !== null &&\n                !(value instanceof Boolean) &&\n                !(value instanceof Date)    &&\n                !(value instanceof Number)  &&\n                !(value instanceof RegExp)  &&\n                !(value instanceof String)) {\n\n// If the value is an object or array, look to see if we have already\n// encountered it. If so, return a $ref/path object. This is a hard way,\n// linear search that will get slower as the number of unique objects grows.\n\n            for (i = 0; i < objects.length; i += 1) {\n                if (objects[i] === value) {\n                    return {$ref: paths[i]};\n                }\n            }\n\n// Otherwise, accumulate the unique value and its path.\n\n            objects.push(value);\n            paths.push(path);\n\n// If it is an array, replicate the array.\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                nu = [];\n                for (i = 0; i < value.length; i += 1) {\n                    nu[i] = derez(value[i], path + '[' + i + ']');\n                }\n            } else {\n\n// If it is an object, replicate the object.\n\n                nu = {};\n                for (name in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, name)) {\n                        nu[name] = derez(value[name],\n                            path + '[' + JSON.stringify(name) + ']');\n                    }\n                }\n            }\n            return nu;\n        }\n        return value;\n    }(object, '$'));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2MtZXJyb3JzL2RlY3ljbGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFdBQVc7O0FBRXJDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3Qjs7QUFFeEI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLHdCQUF3Qjs7QUFFeEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHdCQUF3QixvQkFBb0I7QUFDNUM7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEIsa0JBQWtCO0FBQzlDO0FBQ0E7QUFDQSxjQUFjOztBQUVkOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL3NjLWVycm9ycy9kZWN5Y2xlLmpzPzhkNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2RzY2FwZS9jeWNsZS9ibG9iL21hc3Rlci9jeWNsZS5qc1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRlY3ljbGUob2JqZWN0KSB7XG4vLyBNYWtlIGEgZGVlcCBjb3B5IG9mIGFuIG9iamVjdCBvciBhcnJheSwgYXNzdXJpbmcgdGhhdCB0aGVyZSBpcyBhdCBtb3N0XG4vLyBvbmUgaW5zdGFuY2Ugb2YgZWFjaCBvYmplY3Qgb3IgYXJyYXkgaW4gdGhlIHJlc3VsdGluZyBzdHJ1Y3R1cmUuIFRoZVxuLy8gZHVwbGljYXRlIHJlZmVyZW5jZXMgKHdoaWNoIG1pZ2h0IGJlIGZvcm1pbmcgY3ljbGVzKSBhcmUgcmVwbGFjZWQgd2l0aFxuLy8gYW4gb2JqZWN0IG9mIHRoZSBmb3JtXG4vLyAgICAgIHskcmVmOiBQQVRIfVxuLy8gd2hlcmUgdGhlIFBBVEggaXMgYSBKU09OUGF0aCBzdHJpbmcgdGhhdCBsb2NhdGVzIHRoZSBmaXJzdCBvY2N1cmFuY2UuXG4vLyBTbyxcbi8vICAgICAgdmFyIGEgPSBbXTtcbi8vICAgICAgYVswXSA9IGE7XG4vLyAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShKU09OLmRlY3ljbGUoYSkpO1xuLy8gcHJvZHVjZXMgdGhlIHN0cmluZyAnW3tcIiRyZWZcIjpcIiRcIn1dJy5cblxuLy8gSlNPTlBhdGggaXMgdXNlZCB0byBsb2NhdGUgdGhlIHVuaXF1ZSBvYmplY3QuICQgaW5kaWNhdGVzIHRoZSB0b3AgbGV2ZWwgb2Zcbi8vIHRoZSBvYmplY3Qgb3IgYXJyYXkuIFtOVU1CRVJdIG9yIFtTVFJJTkddIGluZGljYXRlcyBhIGNoaWxkIG1lbWJlciBvclxuLy8gcHJvcGVydHkuXG5cbiAgICB2YXIgb2JqZWN0cyA9IFtdLCAgIC8vIEtlZXAgYSByZWZlcmVuY2UgdG8gZWFjaCB1bmlxdWUgb2JqZWN0IG9yIGFycmF5XG4gICAgICAgIHBhdGhzID0gW107ICAgICAvLyBLZWVwIHRoZSBwYXRoIHRvIGVhY2ggdW5pcXVlIG9iamVjdCBvciBhcnJheVxuXG4gICAgcmV0dXJuIChmdW5jdGlvbiBkZXJleih2YWx1ZSwgcGF0aCkge1xuXG4vLyBUaGUgZGVyZXogcmVjdXJzZXMgdGhyb3VnaCB0aGUgb2JqZWN0LCBwcm9kdWNpbmcgdGhlIGRlZXAgY29weS5cblxuICAgICAgICB2YXIgaSwgICAgICAgICAgLy8gVGhlIGxvb3AgY291bnRlclxuICAgICAgICAgICAgbmFtZSwgICAgICAgLy8gUHJvcGVydHkgbmFtZVxuICAgICAgICAgICAgbnU7ICAgICAgICAgLy8gVGhlIG5ldyBvYmplY3Qgb3IgYXJyYXlcblxuLy8gdHlwZW9mIG51bGwgPT09ICdvYmplY3QnLCBzbyBnbyBvbiBpZiB0aGlzIHZhbHVlIGlzIHJlYWxseSBhbiBvYmplY3QgYnV0IG5vdFxuLy8gb25lIG9mIHRoZSB3ZWlyZCBidWlsdGluIG9iamVjdHMuXG5cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGwgJiZcbiAgICAgICAgICAgICAgICAhKHZhbHVlIGluc3RhbmNlb2YgQm9vbGVhbikgJiZcbiAgICAgICAgICAgICAgICAhKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkgICAgJiZcbiAgICAgICAgICAgICAgICAhKHZhbHVlIGluc3RhbmNlb2YgTnVtYmVyKSAgJiZcbiAgICAgICAgICAgICAgICAhKHZhbHVlIGluc3RhbmNlb2YgUmVnRXhwKSAgJiZcbiAgICAgICAgICAgICAgICAhKHZhbHVlIGluc3RhbmNlb2YgU3RyaW5nKSkge1xuXG4vLyBJZiB0aGUgdmFsdWUgaXMgYW4gb2JqZWN0IG9yIGFycmF5LCBsb29rIHRvIHNlZSBpZiB3ZSBoYXZlIGFscmVhZHlcbi8vIGVuY291bnRlcmVkIGl0LiBJZiBzbywgcmV0dXJuIGEgJHJlZi9wYXRoIG9iamVjdC4gVGhpcyBpcyBhIGhhcmQgd2F5LFxuLy8gbGluZWFyIHNlYXJjaCB0aGF0IHdpbGwgZ2V0IHNsb3dlciBhcyB0aGUgbnVtYmVyIG9mIHVuaXF1ZSBvYmplY3RzIGdyb3dzLlxuXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgb2JqZWN0cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgIGlmIChvYmplY3RzW2ldID09PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyRyZWY6IHBhdGhzW2ldfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbi8vIE90aGVyd2lzZSwgYWNjdW11bGF0ZSB0aGUgdW5pcXVlIHZhbHVlIGFuZCBpdHMgcGF0aC5cblxuICAgICAgICAgICAgb2JqZWN0cy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIHBhdGhzLnB1c2gocGF0aCk7XG5cbi8vIElmIGl0IGlzIGFuIGFycmF5LCByZXBsaWNhdGUgdGhlIGFycmF5LlxuXG4gICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseSh2YWx1ZSkgPT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgICAgICAgICAgICBudSA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgICAgICBudVtpXSA9IGRlcmV6KHZhbHVlW2ldLCBwYXRoICsgJ1snICsgaSArICddJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcblxuLy8gSWYgaXQgaXMgYW4gb2JqZWN0LCByZXBsaWNhdGUgdGhlIG9iamVjdC5cblxuICAgICAgICAgICAgICAgIG51ID0ge307XG4gICAgICAgICAgICAgICAgZm9yIChuYW1lIGluIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBudVtuYW1lXSA9IGRlcmV6KHZhbHVlW25hbWVdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggKyAnWycgKyBKU09OLnN0cmluZ2lmeShuYW1lKSArICddJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0ob2JqZWN0LCAnJCcpKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sc-errors/decycle.js\n");

/***/ }),

/***/ "./node_modules/sc-errors/index.js":
/*!*****************************************!*\
  !*** ./node_modules/sc-errors/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var decycle = __webpack_require__(/*! ./decycle */ \"./node_modules/sc-errors/decycle.js\");\n\nvar isStrict = (function () { return !this; })();\n\nfunction AuthTokenExpiredError(message, expiry) {\n  this.name = 'AuthTokenExpiredError';\n  this.message = message;\n  this.expiry = expiry;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nAuthTokenExpiredError.prototype = Object.create(Error.prototype);\n\n\nfunction AuthTokenInvalidError(message) {\n  this.name = 'AuthTokenInvalidError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nAuthTokenInvalidError.prototype = Object.create(Error.prototype);\n\n\nfunction AuthTokenNotBeforeError(message, date) {\n  this.name = 'AuthTokenNotBeforeError';\n  this.message = message;\n  this.date = date;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nAuthTokenNotBeforeError.prototype = Object.create(Error.prototype);\n\n\n// For any other auth token error.\nfunction AuthTokenError(message) {\n  this.name = 'AuthTokenError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nAuthTokenError.prototype = Object.create(Error.prototype);\n\n// For any other auth error; not specifically related to the auth token itself.\nfunction AuthError(message) {\n  this.name = 'AuthError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nAuthError.prototype = Object.create(Error.prototype);\n\n\nfunction SilentMiddlewareBlockedError(message, type) {\n  this.name = 'SilentMiddlewareBlockedError';\n  this.message = message;\n  this.type = type;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nSilentMiddlewareBlockedError.prototype = Object.create(Error.prototype);\n\n\nfunction InvalidActionError(message) {\n  this.name = 'InvalidActionError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nInvalidActionError.prototype = Object.create(Error.prototype);\n\nfunction InvalidArgumentsError(message) {\n  this.name = 'InvalidArgumentsError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nInvalidArgumentsError.prototype = Object.create(Error.prototype);\n\nfunction InvalidOptionsError(message) {\n  this.name = 'InvalidOptionsError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nInvalidOptionsError.prototype = Object.create(Error.prototype);\n\n\nfunction InvalidMessageError(message) {\n  this.name = 'InvalidMessageError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nInvalidMessageError.prototype = Object.create(Error.prototype);\n\n\nfunction SocketProtocolError(message, code) {\n  this.name = 'SocketProtocolError';\n  this.message = message;\n  this.code = code;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nSocketProtocolError.prototype = Object.create(Error.prototype);\n\n\nfunction ServerProtocolError(message) {\n  this.name = 'ServerProtocolError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nServerProtocolError.prototype = Object.create(Error.prototype);\n\nfunction HTTPServerError(message) {\n  this.name = 'HTTPServerError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nHTTPServerError.prototype = Object.create(Error.prototype);\n\n\nfunction ResourceLimitError(message) {\n  this.name = 'ResourceLimitError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nResourceLimitError.prototype = Object.create(Error.prototype);\n\n\nfunction TimeoutError(message) {\n  this.name = 'TimeoutError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nTimeoutError.prototype = Object.create(Error.prototype);\n\n\nfunction BadConnectionError(message, type) {\n  this.name = 'BadConnectionError';\n  this.message = message;\n  this.type = type;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nBadConnectionError.prototype = Object.create(Error.prototype);\n\n\nfunction BrokerError(message) {\n  this.name = 'BrokerError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nBrokerError.prototype = Object.create(Error.prototype);\n\n\nfunction ProcessExitError(message, code) {\n  this.name = 'ProcessExitError';\n  this.message = message;\n  this.code = code;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nProcessExitError.prototype = Object.create(Error.prototype);\n\n\nfunction UnknownError(message) {\n  this.name = 'UnknownError';\n  this.message = message;\n  if (Error.captureStackTrace && !isStrict) {\n    Error.captureStackTrace(this, arguments.callee);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n}\nUnknownError.prototype = Object.create(Error.prototype);\n\n\n// Expose all error types.\n\nmodule.exports = {\n  AuthTokenExpiredError: AuthTokenExpiredError,\n  AuthTokenInvalidError: AuthTokenInvalidError,\n  AuthTokenNotBeforeError: AuthTokenNotBeforeError,\n  AuthTokenError: AuthTokenError,\n  AuthError: AuthError,\n  SilentMiddlewareBlockedError: SilentMiddlewareBlockedError,\n  InvalidActionError: InvalidActionError,\n  InvalidArgumentsError: InvalidArgumentsError,\n  InvalidOptionsError: InvalidOptionsError,\n  InvalidMessageError: InvalidMessageError,\n  SocketProtocolError: SocketProtocolError,\n  ServerProtocolError: ServerProtocolError,\n  HTTPServerError: HTTPServerError,\n  ResourceLimitError: ResourceLimitError,\n  TimeoutError: TimeoutError,\n  BadConnectionError: BadConnectionError,\n  BrokerError: BrokerError,\n  ProcessExitError: ProcessExitError,\n  UnknownError: UnknownError\n};\n\nmodule.exports.socketProtocolErrorStatuses = {\n  1001: 'Socket was disconnected',\n  1002: 'A WebSocket protocol error was encountered',\n  1003: 'Server terminated socket because it received invalid data',\n  1005: 'Socket closed without status code',\n  1006: 'Socket hung up',\n  1007: 'Message format was incorrect',\n  1008: 'Encountered a policy violation',\n  1009: 'Message was too big to process',\n  1010: 'Client ended the connection because the server did not comply with extension requirements',\n  1011: 'Server encountered an unexpected fatal condition',\n  4000: 'Server ping timed out',\n  4001: 'Client pong timed out',\n  4002: 'Server failed to sign auth token',\n  4003: 'Failed to complete handshake',\n  4004: 'Client failed to save auth token',\n  4005: 'Did not receive #handshake from client before timeout',\n  4006: 'Failed to bind socket to message broker',\n  4007: 'Client connection establishment timed out',\n  4008: 'Server rejected handshake from client',\n  4009: 'Server received a message before the client handshake'\n};\n\nmodule.exports.socketProtocolIgnoreStatuses = {\n  1000: 'Socket closed normally',\n  1001: 'Socket hung up'\n};\n\n// Properties related to error domains cannot be serialized.\nvar unserializableErrorProperties = {\n  domain: 1,\n  domainEmitter: 1,\n  domainThrown: 1\n};\n\n// Convert an error into a JSON-compatible type which can later be hydrated\n// back to its *original* form.\nmodule.exports.dehydrateError = function dehydrateError(error, includeStackTrace) {\n  var dehydratedError;\n\n  if (error && typeof error === 'object') {\n    dehydratedError = {\n      message: error.message\n    };\n    if (includeStackTrace) {\n      dehydratedError.stack = error.stack;\n    }\n    for (var i in error) {\n      if (!unserializableErrorProperties[i]) {\n        dehydratedError[i] = error[i];\n      }\n    }\n  } else if (typeof error === 'function') {\n    dehydratedError = '[function ' + (error.name || 'anonymous') + ']';\n  } else {\n    dehydratedError = error;\n  }\n\n  return decycle(dehydratedError);\n};\n\n// Convert a dehydrated error back to its *original* form.\nmodule.exports.hydrateError = function hydrateError(error) {\n  var hydratedError = null;\n  if (error != null) {\n    if (typeof error === 'object') {\n      hydratedError = new Error(error.message);\n      for (var i in error) {\n        if (error.hasOwnProperty(i)) {\n          hydratedError[i] = error[i];\n        }\n      }\n    } else {\n      hydratedError = error;\n    }\n  }\n  return hydratedError;\n};\n\nmodule.exports.decycle = decycle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sc-errors/index.js\n");

/***/ }),

/***/ "./node_modules/sc-formatter/index.js":
/*!********************************************!*\
  !*** ./node_modules/sc-formatter/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst validJSONStartRegex = /^[ \\n\\r\\t]*[{\\[]/;\n\nlet arrayBufferToBase64 = function (arraybuffer) {\n  let bytes = new Uint8Array(arraybuffer);\n  let len = bytes.length;\n  let base64 = '';\n\n  for (let i = 0; i < len; i += 3) {\n    base64 += base64Chars[bytes[i] >> 2];\n    base64 += base64Chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n    base64 += base64Chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n    base64 += base64Chars[bytes[i + 2] & 63];\n  }\n\n  if ((len % 3) === 2) {\n    base64 = base64.substring(0, base64.length - 1) + '=';\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + '==';\n  }\n\n  return base64;\n};\n\nlet binaryToBase64Replacer = function (key, value) {\n  if (__webpack_require__.g.ArrayBuffer && value instanceof __webpack_require__.g.ArrayBuffer) {\n    return {\n      base64: true,\n      data: arrayBufferToBase64(value)\n    };\n  } else if (__webpack_require__.g.Buffer) {\n    if (value instanceof __webpack_require__.g.Buffer){\n      return {\n        base64: true,\n        data: value.toString('base64')\n      };\n    }\n    // Some versions of Node.js convert Buffers to Objects before they are passed to\n    // the replacer function - Because of this, we need to rehydrate Buffers\n    // before we can convert them to base64 strings.\n    if (value && value.type === 'Buffer' && Array.isArray(value.data)) {\n      let rehydratedBuffer;\n      if (__webpack_require__.g.Buffer.from) {\n        rehydratedBuffer = __webpack_require__.g.Buffer.from(value.data);\n      } else {\n        rehydratedBuffer = new __webpack_require__.g.Buffer(value.data);\n      }\n      return {\n        base64: true,\n        data: rehydratedBuffer.toString('base64')\n      };\n    }\n  }\n  return value;\n};\n\n// Decode the data which was transmitted over the wire to a JavaScript Object in a format which SC understands.\n// See encode function below for more details.\nmodule.exports.decode = function (encodedMessage) {\n  if (encodedMessage == null) {\n   return null;\n  }\n  // Leave ping or pong message as is\n  if (encodedMessage === '#1' || encodedMessage === '#2') {\n    return encodedMessage;\n  }\n  let message = encodedMessage.toString();\n\n  // Performance optimization to detect invalid JSON packet sooner.\n  if (!validJSONStartRegex.test(message)) {\n    return message;\n  }\n\n  try {\n    return JSON.parse(message);\n  } catch (err) {}\n  return message;\n};\n\n// Encode raw data (which is in the SC protocol format) into a format for\n// transfering it over the wire. In this case, we just convert it into a simple JSON string.\n// If you want to create your own custom codec, you can encode the object into any format\n// (e.g. binary ArrayBuffer or string with any kind of compression) so long as your decode\n// function is able to rehydrate that object back into its original JavaScript Object format\n// (which adheres to the SC protocol).\n// See https://github.com/SocketCluster/socketcluster/blob/master/socketcluster-protocol.md\n// for details about the SC protocol.\nmodule.exports.encode = function (rawData) {\n  // Leave ping or pong message as is\n  if (rawData === '#1' || rawData === '#2') {\n    return rawData;\n  }\n  return JSON.stringify(rawData, binaryToBase64Replacer);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2MtZm9ybWF0dGVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsMENBQTBDOztBQUUxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxxQkFBTSxpQ0FBaUMscUJBQU07QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLFNBQVMscUJBQU07QUFDbkIseUJBQXlCLHFCQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQkFBTTtBQUNoQiwyQkFBMkIscUJBQU07QUFDakMsUUFBUTtBQUNSLCtCQUErQixxQkFBTTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvc2MtZm9ybWF0dGVyL2luZGV4LmpzPzUxM2YiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFzZTY0Q2hhcnMgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIjtcbmNvbnN0IHZhbGlkSlNPTlN0YXJ0UmVnZXggPSAvXlsgXFxuXFxyXFx0XSpbe1xcW10vO1xuXG5sZXQgYXJyYXlCdWZmZXJUb0Jhc2U2NCA9IGZ1bmN0aW9uIChhcnJheWJ1ZmZlcikge1xuICBsZXQgYnl0ZXMgPSBuZXcgVWludDhBcnJheShhcnJheWJ1ZmZlcik7XG4gIGxldCBsZW4gPSBieXRlcy5sZW5ndGg7XG4gIGxldCBiYXNlNjQgPSAnJztcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSArPSAzKSB7XG4gICAgYmFzZTY0ICs9IGJhc2U2NENoYXJzW2J5dGVzW2ldID4+IDJdO1xuICAgIGJhc2U2NCArPSBiYXNlNjRDaGFyc1soKGJ5dGVzW2ldICYgMykgPDwgNCkgfCAoYnl0ZXNbaSArIDFdID4+IDQpXTtcbiAgICBiYXNlNjQgKz0gYmFzZTY0Q2hhcnNbKChieXRlc1tpICsgMV0gJiAxNSkgPDwgMikgfCAoYnl0ZXNbaSArIDJdID4+IDYpXTtcbiAgICBiYXNlNjQgKz0gYmFzZTY0Q2hhcnNbYnl0ZXNbaSArIDJdICYgNjNdO1xuICB9XG5cbiAgaWYgKChsZW4gJSAzKSA9PT0gMikge1xuICAgIGJhc2U2NCA9IGJhc2U2NC5zdWJzdHJpbmcoMCwgYmFzZTY0Lmxlbmd0aCAtIDEpICsgJz0nO1xuICB9IGVsc2UgaWYgKGxlbiAlIDMgPT09IDEpIHtcbiAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAyKSArICc9PSc7XG4gIH1cblxuICByZXR1cm4gYmFzZTY0O1xufTtcblxubGV0IGJpbmFyeVRvQmFzZTY0UmVwbGFjZXIgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICBpZiAoZ2xvYmFsLkFycmF5QnVmZmVyICYmIHZhbHVlIGluc3RhbmNlb2YgZ2xvYmFsLkFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJhc2U2NDogdHJ1ZSxcbiAgICAgIGRhdGE6IGFycmF5QnVmZmVyVG9CYXNlNjQodmFsdWUpXG4gICAgfTtcbiAgfSBlbHNlIGlmIChnbG9iYWwuQnVmZmVyKSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgZ2xvYmFsLkJ1ZmZlcil7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBiYXNlNjQ6IHRydWUsXG4gICAgICAgIGRhdGE6IHZhbHVlLnRvU3RyaW5nKCdiYXNlNjQnKVxuICAgICAgfTtcbiAgICB9XG4gICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBOb2RlLmpzIGNvbnZlcnQgQnVmZmVycyB0byBPYmplY3RzIGJlZm9yZSB0aGV5IGFyZSBwYXNzZWQgdG9cbiAgICAvLyB0aGUgcmVwbGFjZXIgZnVuY3Rpb24gLSBCZWNhdXNlIG9mIHRoaXMsIHdlIG5lZWQgdG8gcmVoeWRyYXRlIEJ1ZmZlcnNcbiAgICAvLyBiZWZvcmUgd2UgY2FuIGNvbnZlcnQgdGhlbSB0byBiYXNlNjQgc3RyaW5ncy5cbiAgICBpZiAodmFsdWUgJiYgdmFsdWUudHlwZSA9PT0gJ0J1ZmZlcicgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZS5kYXRhKSkge1xuICAgICAgbGV0IHJlaHlkcmF0ZWRCdWZmZXI7XG4gICAgICBpZiAoZ2xvYmFsLkJ1ZmZlci5mcm9tKSB7XG4gICAgICAgIHJlaHlkcmF0ZWRCdWZmZXIgPSBnbG9iYWwuQnVmZmVyLmZyb20odmFsdWUuZGF0YSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZWh5ZHJhdGVkQnVmZmVyID0gbmV3IGdsb2JhbC5CdWZmZXIodmFsdWUuZGF0YSk7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBiYXNlNjQ6IHRydWUsXG4gICAgICAgIGRhdGE6IHJlaHlkcmF0ZWRCdWZmZXIudG9TdHJpbmcoJ2Jhc2U2NCcpXG4gICAgICB9O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWU7XG59O1xuXG4vLyBEZWNvZGUgdGhlIGRhdGEgd2hpY2ggd2FzIHRyYW5zbWl0dGVkIG92ZXIgdGhlIHdpcmUgdG8gYSBKYXZhU2NyaXB0IE9iamVjdCBpbiBhIGZvcm1hdCB3aGljaCBTQyB1bmRlcnN0YW5kcy5cbi8vIFNlZSBlbmNvZGUgZnVuY3Rpb24gYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbm1vZHVsZS5leHBvcnRzLmRlY29kZSA9IGZ1bmN0aW9uIChlbmNvZGVkTWVzc2FnZSkge1xuICBpZiAoZW5jb2RlZE1lc3NhZ2UgPT0gbnVsbCkge1xuICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgLy8gTGVhdmUgcGluZyBvciBwb25nIG1lc3NhZ2UgYXMgaXNcbiAgaWYgKGVuY29kZWRNZXNzYWdlID09PSAnIzEnIHx8IGVuY29kZWRNZXNzYWdlID09PSAnIzInKSB7XG4gICAgcmV0dXJuIGVuY29kZWRNZXNzYWdlO1xuICB9XG4gIGxldCBtZXNzYWdlID0gZW5jb2RlZE1lc3NhZ2UudG9TdHJpbmcoKTtcblxuICAvLyBQZXJmb3JtYW5jZSBvcHRpbWl6YXRpb24gdG8gZGV0ZWN0IGludmFsaWQgSlNPTiBwYWNrZXQgc29vbmVyLlxuICBpZiAoIXZhbGlkSlNPTlN0YXJ0UmVnZXgudGVzdChtZXNzYWdlKSkge1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShtZXNzYWdlKTtcbiAgfSBjYXRjaCAoZXJyKSB7fVxuICByZXR1cm4gbWVzc2FnZTtcbn07XG5cbi8vIEVuY29kZSByYXcgZGF0YSAod2hpY2ggaXMgaW4gdGhlIFNDIHByb3RvY29sIGZvcm1hdCkgaW50byBhIGZvcm1hdCBmb3Jcbi8vIHRyYW5zZmVyaW5nIGl0IG92ZXIgdGhlIHdpcmUuIEluIHRoaXMgY2FzZSwgd2UganVzdCBjb252ZXJ0IGl0IGludG8gYSBzaW1wbGUgSlNPTiBzdHJpbmcuXG4vLyBJZiB5b3Ugd2FudCB0byBjcmVhdGUgeW91ciBvd24gY3VzdG9tIGNvZGVjLCB5b3UgY2FuIGVuY29kZSB0aGUgb2JqZWN0IGludG8gYW55IGZvcm1hdFxuLy8gKGUuZy4gYmluYXJ5IEFycmF5QnVmZmVyIG9yIHN0cmluZyB3aXRoIGFueSBraW5kIG9mIGNvbXByZXNzaW9uKSBzbyBsb25nIGFzIHlvdXIgZGVjb2RlXG4vLyBmdW5jdGlvbiBpcyBhYmxlIHRvIHJlaHlkcmF0ZSB0aGF0IG9iamVjdCBiYWNrIGludG8gaXRzIG9yaWdpbmFsIEphdmFTY3JpcHQgT2JqZWN0IGZvcm1hdFxuLy8gKHdoaWNoIGFkaGVyZXMgdG8gdGhlIFNDIHByb3RvY29sKS5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vU29ja2V0Q2x1c3Rlci9zb2NrZXRjbHVzdGVyL2Jsb2IvbWFzdGVyL3NvY2tldGNsdXN0ZXItcHJvdG9jb2wubWRcbi8vIGZvciBkZXRhaWxzIGFib3V0IHRoZSBTQyBwcm90b2NvbC5cbm1vZHVsZS5leHBvcnRzLmVuY29kZSA9IGZ1bmN0aW9uIChyYXdEYXRhKSB7XG4gIC8vIExlYXZlIHBpbmcgb3IgcG9uZyBtZXNzYWdlIGFzIGlzXG4gIGlmIChyYXdEYXRhID09PSAnIzEnIHx8IHJhd0RhdGEgPT09ICcjMicpIHtcbiAgICByZXR1cm4gcmF3RGF0YTtcbiAgfVxuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocmF3RGF0YSwgYmluYXJ5VG9CYXNlNjRSZXBsYWNlcik7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sc-formatter/index.js\n");

/***/ }),

/***/ "./node_modules/shallow-clone/index.js":
/*!*********************************************!*\
  !*** ./node_modules/shallow-clone/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*!\n * shallow-clone <https://github.com/jonschlinkert/shallow-clone>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nconst valueOf = Symbol.prototype.valueOf;\nconst typeOf = __webpack_require__(/*! kind-of */ \"./node_modules/kind-of/index.js\");\n\nfunction clone(val, deep) {\n  switch (typeOf(val)) {\n    case 'array':\n      return val.slice();\n    case 'object':\n      return Object.assign({}, val);\n    case 'date':\n      return new val.constructor(Number(val));\n    case 'map':\n      return new Map(val);\n    case 'set':\n      return new Set(val);\n    case 'buffer':\n      return cloneBuffer(val);\n    case 'symbol':\n      return cloneSymbol(val);\n    case 'arraybuffer':\n      return cloneArrayBuffer(val);\n    case 'float32array':\n    case 'float64array':\n    case 'int16array':\n    case 'int32array':\n    case 'int8array':\n    case 'uint16array':\n    case 'uint32array':\n    case 'uint8clampedarray':\n    case 'uint8array':\n      return cloneTypedArray(val);\n    case 'regexp':\n      return cloneRegExp(val);\n    case 'error':\n      return Object.create(val);\n    default: {\n      return val;\n    }\n  }\n}\n\nfunction cloneRegExp(val) {\n  const flags = val.flags !== void 0 ? val.flags : (/\\w+$/.exec(val) || void 0);\n  const re = new val.constructor(val.source, flags);\n  re.lastIndex = val.lastIndex;\n  return re;\n}\n\nfunction cloneArrayBuffer(val) {\n  const res = new val.constructor(val.byteLength);\n  new Uint8Array(res).set(new Uint8Array(val));\n  return res;\n}\n\nfunction cloneTypedArray(val, deep) {\n  return new val.constructor(val.buffer, val.byteOffset, val.length);\n}\n\nfunction cloneBuffer(val) {\n  const len = val.length;\n  const buf = Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : Buffer.from(len);\n  val.copy(buf);\n  return buf;\n}\n\nfunction cloneSymbol(val) {\n  return valueOf ? Object(valueOf.call(val)) : {};\n}\n\n/**\n * Expose `clone`\n */\n\nmodule.exports = clone;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhbGxvdy1jbG9uZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQSxlQUFlLG1CQUFPLENBQUMsZ0RBQVM7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy9zaGFsbG93LWNsb25lL2luZGV4LmpzPzUyZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBzaGFsbG93LWNsb25lIDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9zaGFsbG93LWNsb25lPlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBKb24gU2NobGlua2VydC5cbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IHZhbHVlT2YgPSBTeW1ib2wucHJvdG90eXBlLnZhbHVlT2Y7XG5jb25zdCB0eXBlT2YgPSByZXF1aXJlKCdraW5kLW9mJyk7XG5cbmZ1bmN0aW9uIGNsb25lKHZhbCwgZGVlcCkge1xuICBzd2l0Y2ggKHR5cGVPZih2YWwpKSB7XG4gICAgY2FzZSAnYXJyYXknOlxuICAgICAgcmV0dXJuIHZhbC5zbGljZSgpO1xuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgdmFsKTtcbiAgICBjYXNlICdkYXRlJzpcbiAgICAgIHJldHVybiBuZXcgdmFsLmNvbnN0cnVjdG9yKE51bWJlcih2YWwpKTtcbiAgICBjYXNlICdtYXAnOlxuICAgICAgcmV0dXJuIG5ldyBNYXAodmFsKTtcbiAgICBjYXNlICdzZXQnOlxuICAgICAgcmV0dXJuIG5ldyBTZXQodmFsKTtcbiAgICBjYXNlICdidWZmZXInOlxuICAgICAgcmV0dXJuIGNsb25lQnVmZmVyKHZhbCk7XG4gICAgY2FzZSAnc3ltYm9sJzpcbiAgICAgIHJldHVybiBjbG9uZVN5bWJvbCh2YWwpO1xuICAgIGNhc2UgJ2FycmF5YnVmZmVyJzpcbiAgICAgIHJldHVybiBjbG9uZUFycmF5QnVmZmVyKHZhbCk7XG4gICAgY2FzZSAnZmxvYXQzMmFycmF5JzpcbiAgICBjYXNlICdmbG9hdDY0YXJyYXknOlxuICAgIGNhc2UgJ2ludDE2YXJyYXknOlxuICAgIGNhc2UgJ2ludDMyYXJyYXknOlxuICAgIGNhc2UgJ2ludDhhcnJheSc6XG4gICAgY2FzZSAndWludDE2YXJyYXknOlxuICAgIGNhc2UgJ3VpbnQzMmFycmF5JzpcbiAgICBjYXNlICd1aW50OGNsYW1wZWRhcnJheSc6XG4gICAgY2FzZSAndWludDhhcnJheSc6XG4gICAgICByZXR1cm4gY2xvbmVUeXBlZEFycmF5KHZhbCk7XG4gICAgY2FzZSAncmVnZXhwJzpcbiAgICAgIHJldHVybiBjbG9uZVJlZ0V4cCh2YWwpO1xuICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHZhbCk7XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xvbmVSZWdFeHAodmFsKSB7XG4gIGNvbnN0IGZsYWdzID0gdmFsLmZsYWdzICE9PSB2b2lkIDAgPyB2YWwuZmxhZ3MgOiAoL1xcdyskLy5leGVjKHZhbCkgfHwgdm9pZCAwKTtcbiAgY29uc3QgcmUgPSBuZXcgdmFsLmNvbnN0cnVjdG9yKHZhbC5zb3VyY2UsIGZsYWdzKTtcbiAgcmUubGFzdEluZGV4ID0gdmFsLmxhc3RJbmRleDtcbiAgcmV0dXJuIHJlO1xufVxuXG5mdW5jdGlvbiBjbG9uZUFycmF5QnVmZmVyKHZhbCkge1xuICBjb25zdCByZXMgPSBuZXcgdmFsLmNvbnN0cnVjdG9yKHZhbC5ieXRlTGVuZ3RoKTtcbiAgbmV3IFVpbnQ4QXJyYXkocmVzKS5zZXQobmV3IFVpbnQ4QXJyYXkodmFsKSk7XG4gIHJldHVybiByZXM7XG59XG5cbmZ1bmN0aW9uIGNsb25lVHlwZWRBcnJheSh2YWwsIGRlZXApIHtcbiAgcmV0dXJuIG5ldyB2YWwuY29uc3RydWN0b3IodmFsLmJ1ZmZlciwgdmFsLmJ5dGVPZmZzZXQsIHZhbC5sZW5ndGgpO1xufVxuXG5mdW5jdGlvbiBjbG9uZUJ1ZmZlcih2YWwpIHtcbiAgY29uc3QgbGVuID0gdmFsLmxlbmd0aDtcbiAgY29uc3QgYnVmID0gQnVmZmVyLmFsbG9jVW5zYWZlID8gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbikgOiBCdWZmZXIuZnJvbShsZW4pO1xuICB2YWwuY29weShidWYpO1xuICByZXR1cm4gYnVmO1xufVxuXG5mdW5jdGlvbiBjbG9uZVN5bWJvbCh2YWwpIHtcbiAgcmV0dXJuIHZhbHVlT2YgPyBPYmplY3QodmFsdWVPZi5jYWxsKHZhbCkpIDoge307XG59XG5cbi8qKlxuICogRXhwb3NlIGBjbG9uZWBcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsb25lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/shallow-clone/index.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/index.js":
/*!****************************************************!*\
  !*** ./node_modules/socketcluster-client/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AGClientSocket = __webpack_require__(/*! ./lib/clientsocket */ \"./node_modules/socketcluster-client/lib/clientsocket.js\");\nconst factory = __webpack_require__(/*! ./lib/factory */ \"./node_modules/socketcluster-client/lib/factory.js\");\nconst version = '17.1.1';\n\nmodule.exports.factory = factory;\nmodule.exports.AGClientSocket = AGClientSocket;\n\nmodule.exports.create = function (options) {\n  return factory.create({...options, version});\n};\n\nmodule.exports.version = version;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCLG1CQUFPLENBQUMsbUZBQW9CO0FBQ25ELGdCQUFnQixtQkFBTyxDQUFDLHlFQUFlO0FBQ3ZDOztBQUVBLHNCQUFzQjtBQUN0Qiw2QkFBNkI7O0FBRTdCLHFCQUFxQjtBQUNyQix5QkFBeUIsb0JBQW9CO0FBQzdDOztBQUVBLHNCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvaW5kZXguanM/NzgxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBR0NsaWVudFNvY2tldCA9IHJlcXVpcmUoJy4vbGliL2NsaWVudHNvY2tldCcpO1xuY29uc3QgZmFjdG9yeSA9IHJlcXVpcmUoJy4vbGliL2ZhY3RvcnknKTtcbmNvbnN0IHZlcnNpb24gPSAnMTcuMS4xJztcblxubW9kdWxlLmV4cG9ydHMuZmFjdG9yeSA9IGZhY3Rvcnk7XG5tb2R1bGUuZXhwb3J0cy5BR0NsaWVudFNvY2tldCA9IEFHQ2xpZW50U29ja2V0O1xuXG5tb2R1bGUuZXhwb3J0cy5jcmVhdGUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICByZXR1cm4gZmFjdG9yeS5jcmVhdGUoey4uLm9wdGlvbnMsIHZlcnNpb259KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLnZlcnNpb24gPSB2ZXJzaW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/index.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/lib/auth.js":
/*!*******************************************************!*\
  !*** ./node_modules/socketcluster-client/lib/auth.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function AuthEngine() {\r\n  this._internalStorage = {};\r\n  this.isLocalStorageEnabled = this._checkLocalStorageEnabled();\r\n}\r\n\r\nAuthEngine.prototype._checkLocalStorageEnabled = function () {\r\n  let err;\r\n  try {\r\n    // Some browsers will throw an error here if localStorage is disabled.\r\n    __webpack_require__.g.localStorage;\r\n\r\n    // Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem\r\n    // throw QuotaExceededError. We're going to detect this and avoid hard to debug edge cases.\r\n    __webpack_require__.g.localStorage.setItem('__scLocalStorageTest', 1);\r\n    __webpack_require__.g.localStorage.removeItem('__scLocalStorageTest');\r\n  } catch (e) {\r\n    err = e;\r\n  }\r\n  return !err;\r\n};\r\n\r\nAuthEngine.prototype.saveToken = function (name, token, options) {\r\n  if (this.isLocalStorageEnabled && __webpack_require__.g.localStorage) {\r\n    __webpack_require__.g.localStorage.setItem(name, token);\r\n  } else {\r\n    this._internalStorage[name] = token;\r\n  }\r\n  return Promise.resolve(token);\r\n};\r\n\r\nAuthEngine.prototype.removeToken = function (name) {\r\n  let loadPromise = this.loadToken(name);\r\n\r\n  if (this.isLocalStorageEnabled && __webpack_require__.g.localStorage) {\r\n    __webpack_require__.g.localStorage.removeItem(name);\r\n  } else {\r\n    delete this._internalStorage[name];\r\n  }\r\n\r\n  return loadPromise;\r\n};\r\n\r\nAuthEngine.prototype.loadToken = function (name) {\r\n  let token;\r\n\r\n  if (this.isLocalStorageEnabled && __webpack_require__.g.localStorage) {\r\n    token = __webpack_require__.g.localStorage.getItem(name);\r\n  } else {\r\n    token = this._internalStorage[name] || null;\r\n  }\r\n\r\n  return Promise.resolve(token);\r\n};\r\n\r\nmodule.exports = AuthEngine;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbGliL2F1dGguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxQkFBTTtBQUNWO0FBQ0E7QUFDQTtBQUNBLElBQUkscUJBQU07QUFDVixJQUFJLHFCQUFNO0FBQ1YsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxxQkFBTTtBQUMxQyxJQUFJLHFCQUFNO0FBQ1YsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MscUJBQU07QUFDMUMsSUFBSSxxQkFBTTtBQUNWLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MscUJBQU07QUFDMUMsWUFBWSxxQkFBTTtBQUNsQixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL3NvY2tldGNsdXN0ZXItY2xpZW50L2xpYi9hdXRoLmpzPzRjZWIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gQXV0aEVuZ2luZSgpIHtcclxuICB0aGlzLl9pbnRlcm5hbFN0b3JhZ2UgPSB7fTtcclxuICB0aGlzLmlzTG9jYWxTdG9yYWdlRW5hYmxlZCA9IHRoaXMuX2NoZWNrTG9jYWxTdG9yYWdlRW5hYmxlZCgpO1xyXG59XHJcblxyXG5BdXRoRW5naW5lLnByb3RvdHlwZS5fY2hlY2tMb2NhbFN0b3JhZ2VFbmFibGVkID0gZnVuY3Rpb24gKCkge1xyXG4gIGxldCBlcnI7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFNvbWUgYnJvd3NlcnMgd2lsbCB0aHJvdyBhbiBlcnJvciBoZXJlIGlmIGxvY2FsU3RvcmFnZSBpcyBkaXNhYmxlZC5cclxuICAgIGdsb2JhbC5sb2NhbFN0b3JhZ2U7XHJcblxyXG4gICAgLy8gU2FmYXJpLCBpbiBQcml2YXRlIEJyb3dzaW5nIE1vZGUsIGxvb2tzIGxpa2UgaXQgc3VwcG9ydHMgbG9jYWxTdG9yYWdlIGJ1dCBhbGwgY2FsbHMgdG8gc2V0SXRlbVxyXG4gICAgLy8gdGhyb3cgUXVvdGFFeGNlZWRlZEVycm9yLiBXZSdyZSBnb2luZyB0byBkZXRlY3QgdGhpcyBhbmQgYXZvaWQgaGFyZCB0byBkZWJ1ZyBlZGdlIGNhc2VzLlxyXG4gICAgZ2xvYmFsLmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdfX3NjTG9jYWxTdG9yYWdlVGVzdCcsIDEpO1xyXG4gICAgZ2xvYmFsLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdfX3NjTG9jYWxTdG9yYWdlVGVzdCcpO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIGVyciA9IGU7XHJcbiAgfVxyXG4gIHJldHVybiAhZXJyO1xyXG59O1xyXG5cclxuQXV0aEVuZ2luZS5wcm90b3R5cGUuc2F2ZVRva2VuID0gZnVuY3Rpb24gKG5hbWUsIHRva2VuLCBvcHRpb25zKSB7XHJcbiAgaWYgKHRoaXMuaXNMb2NhbFN0b3JhZ2VFbmFibGVkICYmIGdsb2JhbC5sb2NhbFN0b3JhZ2UpIHtcclxuICAgIGdsb2JhbC5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShuYW1lLCB0b2tlbik7XHJcbiAgfSBlbHNlIHtcclxuICAgIHRoaXMuX2ludGVybmFsU3RvcmFnZVtuYW1lXSA9IHRva2VuO1xyXG4gIH1cclxuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRva2VuKTtcclxufTtcclxuXHJcbkF1dGhFbmdpbmUucHJvdG90eXBlLnJlbW92ZVRva2VuID0gZnVuY3Rpb24gKG5hbWUpIHtcclxuICBsZXQgbG9hZFByb21pc2UgPSB0aGlzLmxvYWRUb2tlbihuYW1lKTtcclxuXHJcbiAgaWYgKHRoaXMuaXNMb2NhbFN0b3JhZ2VFbmFibGVkICYmIGdsb2JhbC5sb2NhbFN0b3JhZ2UpIHtcclxuICAgIGdsb2JhbC5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShuYW1lKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZGVsZXRlIHRoaXMuX2ludGVybmFsU3RvcmFnZVtuYW1lXTtcclxuICB9XHJcblxyXG4gIHJldHVybiBsb2FkUHJvbWlzZTtcclxufTtcclxuXHJcbkF1dGhFbmdpbmUucHJvdG90eXBlLmxvYWRUb2tlbiA9IGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgbGV0IHRva2VuO1xyXG5cclxuICBpZiAodGhpcy5pc0xvY2FsU3RvcmFnZUVuYWJsZWQgJiYgZ2xvYmFsLmxvY2FsU3RvcmFnZSkge1xyXG4gICAgdG9rZW4gPSBnbG9iYWwubG9jYWxTdG9yYWdlLmdldEl0ZW0obmFtZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHRva2VuID0gdGhpcy5faW50ZXJuYWxTdG9yYWdlW25hbWVdIHx8IG51bGw7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRva2VuKTtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQXV0aEVuZ2luZTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/lib/auth.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/lib/clientsocket.js":
/*!***************************************************************!*\
  !*** ./node_modules/socketcluster-client/lib/clientsocket.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const StreamDemux = __webpack_require__(/*! stream-demux */ \"./node_modules/stream-demux/index.js\");\r\nconst AsyncStreamEmitter = __webpack_require__(/*! async-stream-emitter */ \"./node_modules/socketcluster-client/node_modules/async-stream-emitter/index.js\");\r\nconst AGChannel = __webpack_require__(/*! ag-channel */ \"./node_modules/ag-channel/index.js\");\r\nconst AuthEngine = __webpack_require__(/*! ./auth */ \"./node_modules/socketcluster-client/lib/auth.js\");\r\nconst formatter = __webpack_require__(/*! sc-formatter */ \"./node_modules/sc-formatter/index.js\");\r\nconst AGTransport = __webpack_require__(/*! ./transport */ \"./node_modules/socketcluster-client/lib/transport.js\");\r\nconst LinkedList = __webpack_require__(/*! linked-list */ \"./node_modules/linked-list/index.js\");\r\nconst cloneDeep = __webpack_require__(/*! clone-deep */ \"./node_modules/clone-deep/index.js\");\r\nconst Buffer = (__webpack_require__(/*! buffer/ */ \"./node_modules/buffer/index.js\").Buffer);\r\nconst wait = __webpack_require__(/*! ./wait */ \"./node_modules/socketcluster-client/lib/wait.js\");\r\n\r\nconst scErrors = __webpack_require__(/*! sc-errors */ \"./node_modules/sc-errors/index.js\");\r\nconst InvalidArgumentsError = scErrors.InvalidArgumentsError;\r\nconst InvalidMessageError = scErrors.InvalidMessageError;\r\nconst InvalidActionError = scErrors.InvalidActionError;\r\nconst SocketProtocolError = scErrors.SocketProtocolError;\r\nconst TimeoutError = scErrors.TimeoutError;\r\nconst BadConnectionError = scErrors.BadConnectionError;\r\n\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\nfunction AGClientSocket(socketOptions) {\r\n  AsyncStreamEmitter.call(this);\r\n\r\n  let defaultOptions = {\r\n    path: '/socketcluster/',\r\n    secure: false,\r\n    protocolScheme: null,\r\n    socketPath: null,\r\n    autoConnect: true,\r\n    autoReconnect: true,\r\n    autoSubscribeOnConnect: true,\r\n    connectTimeout: 20000,\r\n    ackTimeout: 10000,\r\n    timestampRequests: false,\r\n    timestampParam: 't',\r\n    authTokenName: 'socketcluster.authToken',\r\n    binaryType: 'arraybuffer',\r\n    batchOnHandshake: false,\r\n    batchOnHandshakeDuration: 100,\r\n    batchInterval: 50,\r\n    protocolVersion: 2,\r\n    wsOptions: {},\r\n    cloneData: false\r\n  };\r\n  let opts = Object.assign(defaultOptions, socketOptions);\r\n\r\n  this.id = null;\r\n  this.version = opts.version || null;\r\n  this.protocolVersion = opts.protocolVersion;\r\n  this.state = this.CLOSED;\r\n  this.authState = this.UNAUTHENTICATED;\r\n  this.signedAuthToken = null;\r\n  this.authToken = null;\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  this.preparingPendingSubscriptions = false;\r\n  this.clientId = opts.clientId;\r\n  this.wsOptions = opts.wsOptions;\r\n\r\n  this.connectTimeout = opts.connectTimeout;\r\n  this.ackTimeout = opts.ackTimeout;\r\n  this.channelPrefix = opts.channelPrefix || null;\r\n  this.disconnectOnUnload = opts.disconnectOnUnload == null ? true : opts.disconnectOnUnload;\r\n  this.authTokenName = opts.authTokenName;\r\n\r\n  // pingTimeout will be connectTimeout at the start, but it will\r\n  // be updated with values provided by the 'connect' event\r\n  opts.pingTimeout = opts.connectTimeout;\r\n  this.pingTimeout = opts.pingTimeout;\r\n  this.pingTimeoutDisabled = !!opts.pingTimeoutDisabled;\r\n\r\n  let maxTimeout = Math.pow(2, 31) - 1;\r\n\r\n  let verifyDuration = (propertyName) => {\r\n    if (this[propertyName] > maxTimeout) {\r\n      throw new InvalidArgumentsError(\r\n        `The ${propertyName} value provided exceeded the maximum amount allowed`\r\n      );\r\n    }\r\n  };\r\n\r\n  verifyDuration('connectTimeout');\r\n  verifyDuration('ackTimeout');\r\n  verifyDuration('pingTimeout');\r\n\r\n  this.connectAttempts = 0;\r\n\r\n  this.isBatching = false;\r\n  this.batchOnHandshake = opts.batchOnHandshake;\r\n  this.batchOnHandshakeDuration = opts.batchOnHandshakeDuration;\r\n\r\n  this._batchingIntervalId = null;\r\n  this._outboundBuffer = new LinkedList();\r\n  this._channelMap = {};\r\n\r\n  this._channelEventDemux = new StreamDemux();\r\n  this._channelDataDemux = new StreamDemux();\r\n\r\n  this._receiverDemux = new StreamDemux();\r\n  this._procedureDemux = new StreamDemux();\r\n\r\n  this.options = opts;\r\n\r\n  this._cid = 1;\r\n\r\n  this.options.callIdGenerator = () => {\r\n    return this._cid++;\r\n  };\r\n\r\n  if (this.options.autoReconnect) {\r\n    if (this.options.autoReconnectOptions == null) {\r\n      this.options.autoReconnectOptions = {};\r\n    }\r\n\r\n    // Add properties to the this.options.autoReconnectOptions object.\r\n    // We assign the reference to a reconnectOptions variable to avoid repetition.\r\n    let reconnectOptions = this.options.autoReconnectOptions;\r\n    if (reconnectOptions.initialDelay == null) {\r\n      reconnectOptions.initialDelay = 10000;\r\n    }\r\n    if (reconnectOptions.randomness == null) {\r\n      reconnectOptions.randomness = 10000;\r\n    }\r\n    if (reconnectOptions.multiplier == null) {\r\n      reconnectOptions.multiplier = 1.5;\r\n    }\r\n    if (reconnectOptions.maxDelay == null) {\r\n      reconnectOptions.maxDelay = 60000;\r\n    }\r\n  }\r\n\r\n  if (this.options.subscriptionRetryOptions == null) {\r\n    this.options.subscriptionRetryOptions = {};\r\n  }\r\n\r\n  if (this.options.authEngine) {\r\n    this.auth = this.options.authEngine;\r\n  } else {\r\n    this.auth = new AuthEngine();\r\n  }\r\n\r\n  if (this.options.codecEngine) {\r\n    this.codec = this.options.codecEngine;\r\n  } else {\r\n    // Default codec engine\r\n    this.codec = formatter;\r\n  }\r\n\r\n  if (this.options.protocol) {\r\n    let protocolOptionError = new InvalidArgumentsError(\r\n      'The \"protocol\" option does not affect socketcluster-client - ' +\r\n      'If you want to utilize SSL/TLS, use \"secure\" option instead'\r\n    );\r\n    this._onError(protocolOptionError);\r\n  }\r\n\r\n  this.options.query = opts.query || {};\r\n  if (typeof this.options.query === 'string') {\r\n    let searchParams = new URLSearchParams(this.options.query);\r\n    let queryObject = {};\r\n    for (let [key, value] of searchParams.entries()) {\r\n      let currentValue = queryObject[key];\r\n      if (currentValue == null) {\r\n        queryObject[key] = value;\r\n      } else {\r\n        if (!Array.isArray(currentValue)) {\r\n          queryObject[key] = [currentValue];\r\n        }\r\n        queryObject[key].push(value);\r\n      }\r\n    }\r\n    this.options.query = queryObject;\r\n  }\r\n\r\n  if (isBrowser && this.disconnectOnUnload && __webpack_require__.g.addEventListener && __webpack_require__.g.removeEventListener) {\r\n    this._handleBrowserUnload();\r\n  }\r\n\r\n  if (this.options.autoConnect) {\r\n    this.connect();\r\n  }\r\n}\r\n\r\nAGClientSocket.prototype = Object.create(AsyncStreamEmitter.prototype);\r\n\r\nAGClientSocket.CONNECTING = AGClientSocket.prototype.CONNECTING = AGTransport.prototype.CONNECTING;\r\nAGClientSocket.OPEN = AGClientSocket.prototype.OPEN = AGTransport.prototype.OPEN;\r\nAGClientSocket.CLOSED = AGClientSocket.prototype.CLOSED = AGTransport.prototype.CLOSED;\r\n\r\nAGClientSocket.AUTHENTICATED = AGClientSocket.prototype.AUTHENTICATED = 'authenticated';\r\nAGClientSocket.UNAUTHENTICATED = AGClientSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\r\n\r\nAGClientSocket.SUBSCRIBED = AGClientSocket.prototype.SUBSCRIBED = AGChannel.SUBSCRIBED;\r\nAGClientSocket.PENDING = AGClientSocket.prototype.PENDING = AGChannel.PENDING;\r\nAGClientSocket.UNSUBSCRIBED = AGClientSocket.prototype.UNSUBSCRIBED = AGChannel.UNSUBSCRIBED;\r\n\r\nAGClientSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\r\nAGClientSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\r\n\r\nObject.defineProperty(AGClientSocket.prototype, 'isBufferingBatch', {\r\n  get: function () {\r\n    return this.transport.isBufferingBatch;\r\n  }\r\n});\r\n\r\nAGClientSocket.prototype.getBackpressure = function () {\r\n  return Math.max(\r\n    this.getAllListenersBackpressure(),\r\n    this.getAllReceiversBackpressure(),\r\n    this.getAllProceduresBackpressure(),\r\n    this.getAllChannelsBackpressure()\r\n  );\r\n};\r\n\r\nAGClientSocket.prototype._handleBrowserUnload = async function () {\r\n  let unloadHandler = () => {\r\n    this.disconnect();\r\n  };\r\n  let isUnloadHandlerAttached = false;\r\n\r\n  let attachUnloadHandler = () => {\r\n    if (!isUnloadHandlerAttached) {\r\n      isUnloadHandlerAttached = true;\r\n      __webpack_require__.g.addEventListener('beforeunload', unloadHandler, false);\r\n    }\r\n  };\r\n\r\n  let detachUnloadHandler = () => {\r\n    if (isUnloadHandlerAttached) {\r\n      isUnloadHandlerAttached = false;\r\n      __webpack_require__.g.removeEventListener('beforeunload', unloadHandler, false);\r\n    }\r\n  };\r\n\r\n  (async () => {\r\n    let consumer = this.listener('connecting').createConsumer();\r\n    while (true) {\r\n      let packet = await consumer.next();\r\n      if (packet.done) break;\r\n      attachUnloadHandler();\r\n    }\r\n  })();\r\n\r\n  (async () => {\r\n    let consumer = this.listener('close').createConsumer();\r\n    while (true) {\r\n      let packet = await consumer.next();\r\n      if (packet.done) break;\r\n      detachUnloadHandler();\r\n    }\r\n  })();\r\n};\r\n\r\nAGClientSocket.prototype._setAuthToken = function (data) {\r\n  this._changeToAuthenticatedState(data.token);\r\n\r\n  (async () => {\r\n    try {\r\n      await this.auth.saveToken(this.authTokenName, data.token, {});\r\n    } catch (err) {\r\n      this._onError(err);\r\n    }\r\n  })();\r\n};\r\n\r\nAGClientSocket.prototype._removeAuthToken = function (data) {\r\n  (async () => {\r\n    let oldAuthToken;\r\n    try {\r\n      oldAuthToken = await this.auth.removeToken(this.authTokenName);\r\n    } catch (err) {\r\n      // Non-fatal error - Do not close the connection\r\n      this._onError(err);\r\n      return;\r\n    }\r\n    this.emit('removeAuthToken', {oldAuthToken});\r\n  })();\r\n\r\n  this._changeToUnauthenticatedStateAndClearTokens();\r\n};\r\n\r\nAGClientSocket.prototype._privateDataHandlerMap = {\r\n  '#publish': function (data) {\r\n    let undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    let isSubscribed = this.isSubscribed(undecoratedChannelName, true);\r\n\r\n    if (isSubscribed) {\r\n      this._channelDataDemux.write(undecoratedChannelName, data.data);\r\n    }\r\n  },\r\n  '#kickOut': function (data) {\r\n    let undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    let channel = this._channelMap[undecoratedChannelName];\r\n    if (channel) {\r\n      this.emit('kickOut', {\r\n        channel: undecoratedChannelName,\r\n        message: data.message\r\n      });\r\n      this._channelEventDemux.write(`${undecoratedChannelName}/kickOut`, {message: data.message});\r\n      this._triggerChannelUnsubscribe(channel);\r\n    }\r\n  },\r\n  '#setAuthToken': function (data) {\r\n    if (data) {\r\n      this._setAuthToken(data);\r\n    }\r\n  },\r\n  '#removeAuthToken': function (data) {\r\n    this._removeAuthToken(data);\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._privateRPCHandlerMap = {\r\n  '#setAuthToken': function (data, request) {\r\n    if (data) {\r\n      this._setAuthToken(data);\r\n\r\n      request.end();\r\n    } else {\r\n      request.error(new InvalidMessageError('No token data provided by #setAuthToken event'));\r\n    }\r\n  },\r\n  '#removeAuthToken': function (data, request) {\r\n    this._removeAuthToken(data);\r\n    request.end();\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype.getState = function () {\r\n  return this.state;\r\n};\r\n\r\nAGClientSocket.prototype.getBytesReceived = function () {\r\n  return this.transport.getBytesReceived();\r\n};\r\n\r\nAGClientSocket.prototype.deauthenticate = async function () {\r\n  (async () => {\r\n    let oldAuthToken;\r\n    try {\r\n      oldAuthToken = await this.auth.removeToken(this.authTokenName);\r\n    } catch (err) {\r\n      this._onError(err);\r\n      return;\r\n    }\r\n    this.emit('removeAuthToken', {oldAuthToken});\r\n  })();\r\n\r\n  if (this.state !== this.CLOSED) {\r\n    this.transmit('#removeAuthToken');\r\n  }\r\n  this._changeToUnauthenticatedStateAndClearTokens();\r\n  await wait(0);\r\n};\r\n\r\nAGClientSocket.prototype.connect = function () {\r\n  if (this.state === this.CLOSED) {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n\r\n    this.state = this.CONNECTING;\r\n    this.emit('connecting', {});\r\n\r\n    if (this.transport) {\r\n      this.transport.clearAllListeners();\r\n    }\r\n\r\n    let transportHandlers = {\r\n      onOpen: (value) => {\r\n        this.state = this.OPEN;\r\n        this._onOpen(value);\r\n      },\r\n      onOpenAbort: (value) => {\r\n        if (this.state !== this.CLOSED) {\r\n          this.state = this.CLOSED;\r\n          this._destroy(value.code, value.reason, true);\r\n        }\r\n      },\r\n      onClose: (value) => {\r\n        if (this.state !== this.CLOSED) {\r\n          this.state = this.CLOSED;\r\n          this._destroy(value.code, value.reason);\r\n        }\r\n      },\r\n      onEvent: (value) => {\r\n        this.emit(value.event, value.data);\r\n      },\r\n      onError: (value) => {\r\n        this._onError(value.error);\r\n      },\r\n      onInboundInvoke: (value) => {\r\n        this._onInboundInvoke(value);\r\n      },\r\n      onInboundTransmit: (value) => {\r\n        this._onInboundTransmit(value.event, value.data);\r\n      }\r\n    };\r\n\r\n    this.transport = new AGTransport(this.auth, this.codec, this.options, this.wsOptions, transportHandlers);\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype.reconnect = function (code, reason) {\r\n  this.disconnect(code, reason);\r\n  this.connect();\r\n};\r\n\r\nAGClientSocket.prototype.disconnect = function (code, reason) {\r\n  code = code || 1000;\r\n\r\n  if (typeof code !== 'number') {\r\n    throw new InvalidArgumentsError('If specified, the code argument must be a number');\r\n  }\r\n\r\n  let isConnecting = this.state === this.CONNECTING;\r\n  if (isConnecting || this.state === this.OPEN) {\r\n    this.state = this.CLOSED;\r\n    this._destroy(code, reason, isConnecting);\r\n    this.transport.close(code, reason);\r\n  } else {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._changeToUnauthenticatedStateAndClearTokens = function () {\r\n  if (this.authState !== this.UNAUTHENTICATED) {\r\n    let oldAuthState = this.authState;\r\n    let oldAuthToken = this.authToken;\r\n    let oldSignedAuthToken = this.signedAuthToken;\r\n    this.authState = this.UNAUTHENTICATED;\r\n    this.signedAuthToken = null;\r\n    this.authToken = null;\r\n\r\n    let stateChangeData = {\r\n      oldAuthState,\r\n      newAuthState: this.authState\r\n    };\r\n    this.emit('authStateChange', stateChangeData);\r\n    this.emit('deauthenticate', {oldSignedAuthToken, oldAuthToken});\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._changeToAuthenticatedState = function (signedAuthToken) {\r\n  this.signedAuthToken = signedAuthToken;\r\n  this.authToken = this._extractAuthTokenData(signedAuthToken);\r\n\r\n  if (this.authState !== this.AUTHENTICATED) {\r\n    let oldAuthState = this.authState;\r\n    this.authState = this.AUTHENTICATED;\r\n    let stateChangeData = {\r\n      oldAuthState,\r\n      newAuthState: this.authState,\r\n      signedAuthToken: signedAuthToken,\r\n      authToken: this.authToken\r\n    };\r\n    if (!this.preparingPendingSubscriptions) {\r\n      this.processPendingSubscriptions();\r\n    }\r\n\r\n    this.emit('authStateChange', stateChangeData);\r\n  }\r\n  this.emit('authenticate', {signedAuthToken, authToken: this.authToken});\r\n};\r\n\r\nAGClientSocket.prototype.decodeBase64 = function (encodedString) {\r\n  return Buffer.from(encodedString, 'base64').toString('utf8');\r\n};\r\n\r\nAGClientSocket.prototype.encodeBase64 = function (decodedString) {\r\n  return Buffer.from(decodedString, 'utf8').toString('base64');\r\n};\r\n\r\nAGClientSocket.prototype._extractAuthTokenData = function (signedAuthToken) {\r\n  let tokenParts = (signedAuthToken || '').split('.');\r\n  let encodedTokenData = tokenParts[1];\r\n  if (encodedTokenData != null) {\r\n    let tokenData = encodedTokenData;\r\n    try {\r\n      tokenData = this.decodeBase64(tokenData);\r\n      return JSON.parse(tokenData);\r\n    } catch (e) {\r\n      return tokenData;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nAGClientSocket.prototype.getAuthToken = function () {\r\n  return this.authToken;\r\n};\r\n\r\nAGClientSocket.prototype.getSignedAuthToken = function () {\r\n  return this.signedAuthToken;\r\n};\r\n\r\n// Perform client-initiated authentication by providing an encrypted token string.\r\nAGClientSocket.prototype.authenticate = async function (signedAuthToken) {\r\n  let authStatus;\r\n\r\n  try {\r\n    authStatus = await this.invoke('#authenticate', signedAuthToken);\r\n  } catch (err) {\r\n    if (err.name !== 'BadConnectionError' && err.name !== 'TimeoutError') {\r\n      // In case of a bad/closed connection or a timeout, we maintain the last\r\n      // known auth state since those errors don't mean that the token is invalid.\r\n      this._changeToUnauthenticatedStateAndClearTokens();\r\n    }\r\n    await wait(0);\r\n    throw err;\r\n  }\r\n\r\n  if (authStatus && authStatus.isAuthenticated != null) {\r\n    // If authStatus is correctly formatted (has an isAuthenticated property),\r\n    // then we will rehydrate the authError.\r\n    if (authStatus.authError) {\r\n      authStatus.authError = scErrors.hydrateError(authStatus.authError);\r\n    }\r\n  } else {\r\n    // Some errors like BadConnectionError and TimeoutError will not pass a valid\r\n    // authStatus object to the current function, so we need to create it ourselves.\r\n    authStatus = {\r\n      isAuthenticated: this.authState,\r\n      authError: null\r\n    };\r\n  }\r\n\r\n  if (authStatus.isAuthenticated) {\r\n    this._changeToAuthenticatedState(signedAuthToken);\r\n  } else {\r\n    this._changeToUnauthenticatedStateAndClearTokens();\r\n  }\r\n\r\n  (async () => {\r\n    try {\r\n      await this.auth.saveToken(this.authTokenName, signedAuthToken, {});\r\n    } catch (err) {\r\n      this._onError(err);\r\n    }\r\n  })();\r\n\r\n  await wait(0);\r\n  return authStatus;\r\n};\r\n\r\nAGClientSocket.prototype._tryReconnect = function (initialDelay) {\r\n  let exponent = this.connectAttempts++;\r\n  let reconnectOptions = this.options.autoReconnectOptions;\r\n  let timeout;\r\n\r\n  if (initialDelay == null || exponent > 0) {\r\n    let initialTimeout = Math.round(reconnectOptions.initialDelay + (reconnectOptions.randomness || 0) * Math.random());\r\n\r\n    timeout = Math.round(initialTimeout * Math.pow(reconnectOptions.multiplier, exponent));\r\n  } else {\r\n    timeout = initialDelay;\r\n  }\r\n\r\n  if (timeout > reconnectOptions.maxDelay) {\r\n    timeout = reconnectOptions.maxDelay;\r\n  }\r\n\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this.pendingReconnect = true;\r\n  this.pendingReconnectTimeout = timeout;\r\n  this._reconnectTimeoutRef = setTimeout(() => {\r\n    this.connect();\r\n  }, timeout);\r\n};\r\n\r\nAGClientSocket.prototype._onOpen = function (status) {\r\n  if (this.isBatching) {\r\n    this._startBatching();\r\n  } else if (this.batchOnHandshake) {\r\n    this._startBatching();\r\n    setTimeout(() => {\r\n      if (!this.isBatching) {\r\n        this._stopBatching();\r\n      }\r\n    }, this.batchOnHandshakeDuration);\r\n  }\r\n  this.preparingPendingSubscriptions = true;\r\n\r\n  if (status) {\r\n    this.id = status.id;\r\n    this.pingTimeout = status.pingTimeout;\r\n    if (status.isAuthenticated) {\r\n      this._changeToAuthenticatedState(status.authToken);\r\n    } else {\r\n      this._changeToUnauthenticatedStateAndClearTokens();\r\n    }\r\n  } else {\r\n    // This can happen if auth.loadToken (in transport.js) fails with\r\n    // an error - This means that the signedAuthToken cannot be loaded by\r\n    // the auth engine and therefore, we need to unauthenticate the client.\r\n    this._changeToUnauthenticatedStateAndClearTokens();\r\n  }\r\n\r\n  this.connectAttempts = 0;\r\n\r\n  if (this.options.autoSubscribeOnConnect) {\r\n    this.processPendingSubscriptions();\r\n  }\r\n\r\n  // If the user invokes the callback while in autoSubscribeOnConnect mode, it\r\n  // won't break anything.\r\n  this.emit('connect', {\r\n    ...status,\r\n    processPendingSubscriptions: () => {\r\n      this.processPendingSubscriptions();\r\n    }\r\n  });\r\n\r\n  if (this.state === this.OPEN) {\r\n    this._flushOutboundBuffer();\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._onError = function (error) {\r\n  this.emit('error', {error});\r\n};\r\n\r\nAGClientSocket.prototype._suspendSubscriptions = function () {\r\n  Object.keys(this._channelMap).forEach((channelName) => {\r\n    let channel = this._channelMap[channelName];\r\n    this._triggerChannelUnsubscribe(channel, true);\r\n  });\r\n};\r\n\r\nAGClientSocket.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\r\n  let currentNode = this._outboundBuffer.head;\r\n  let nextNode;\r\n\r\n  while (currentNode) {\r\n    nextNode = currentNode.next;\r\n    let eventObject = currentNode.data;\r\n    clearTimeout(eventObject.timeout);\r\n    delete eventObject.timeout;\r\n    currentNode.detach();\r\n    currentNode = nextNode;\r\n\r\n    let callback = eventObject.callback;\r\n\r\n    if (callback) {\r\n      delete eventObject.callback;\r\n      let errorMessage = `Event \"${eventObject.event}\" was aborted due to a bad connection`;\r\n      let error = new BadConnectionError(errorMessage, failureType);\r\n\r\n      callback.call(eventObject, error, eventObject);\r\n    }\r\n    // Cleanup any pending response callback in the transport layer too.\r\n    if (eventObject.cid) {\r\n      this.transport.cancelPendingResponse(eventObject.cid);\r\n    }\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._destroy = function (code, reason, openAbort) {\r\n  this.id = null;\r\n  this._cancelBatching();\r\n\r\n  if (this.transport) {\r\n    this.transport.clearAllListeners();\r\n  }\r\n\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this._suspendSubscriptions();\r\n\r\n  if (openAbort) {\r\n    this.emit('connectAbort', {code, reason});\r\n  } else {\r\n    this.emit('disconnect', {code, reason});\r\n  }\r\n  this.emit('close', {code, reason});\r\n\r\n  if (!AGClientSocket.ignoreStatuses[code]) {\r\n    let closeMessage;\r\n    if (reason) {\r\n      closeMessage = 'Socket connection closed with status code ' + code + ' and reason: ' + reason;\r\n    } else {\r\n      closeMessage = 'Socket connection closed with status code ' + code;\r\n    }\r\n    let err = new SocketProtocolError(AGClientSocket.errorStatuses[code] || closeMessage, code);\r\n    this._onError(err);\r\n  }\r\n\r\n  this._abortAllPendingEventsDueToBadConnection(openAbort ? 'connectAbort' : 'disconnect');\r\n\r\n  // Try to reconnect\r\n  // on server ping timeout (4000)\r\n  // or on client pong timeout (4001)\r\n  // or on close without status (1005)\r\n  // or on handshake failure (4003)\r\n  // or on handshake rejection (4008)\r\n  // or on socket hung up (1006)\r\n  if (this.options.autoReconnect) {\r\n    if (code === 4000 || code === 4001 || code === 1005) {\r\n      // If there is a ping or pong timeout or socket closes without\r\n      // status, don't wait before trying to reconnect - These could happen\r\n      // if the client wakes up after a period of inactivity and in this case we\r\n      // want to re-establish the connection as soon as possible.\r\n      this._tryReconnect(0);\r\n\r\n      // Codes 4500 and above will be treated as permanent disconnects.\r\n      // Socket will not try to auto-reconnect.\r\n    } else if (code !== 1000 && code < 4500) {\r\n      this._tryReconnect();\r\n    }\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._onInboundTransmit = function (event, data) {\r\n  let handler = this._privateDataHandlerMap[event];\r\n  if (handler) {\r\n    handler.call(this, data);\r\n  } else {\r\n    this._receiverDemux.write(event, data);\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._onInboundInvoke = function (request) {\r\n  let {procedure, data} = request;\r\n  let handler = this._privateRPCHandlerMap[procedure];\r\n  if (handler) {\r\n    handler.call(this, data, request);\r\n  } else {\r\n    this._procedureDemux.write(procedure, request);\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype.decode = function (message) {\r\n  return this.transport.decode(message);\r\n};\r\n\r\nAGClientSocket.prototype.encode = function (object) {\r\n  return this.transport.encode(object);\r\n};\r\n\r\nAGClientSocket.prototype._flushOutboundBuffer = function () {\r\n  let currentNode = this._outboundBuffer.head;\r\n  let nextNode;\r\n\r\n  while (currentNode) {\r\n    nextNode = currentNode.next;\r\n    let eventObject = currentNode.data;\r\n    currentNode.detach();\r\n    this.transport.transmitObject(eventObject);\r\n    currentNode = nextNode;\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._handleEventAckTimeout = function (eventObject, eventNode) {\r\n  if (eventNode) {\r\n    eventNode.detach();\r\n  }\r\n  delete eventObject.timeout;\r\n\r\n  let callback = eventObject.callback;\r\n  if (callback) {\r\n    delete eventObject.callback;\r\n    let error = new TimeoutError(`Event response for \"${eventObject.event}\" timed out`);\r\n    callback.call(eventObject, error, eventObject);\r\n  }\r\n  // Cleanup any pending response callback in the transport layer too.\r\n  if (eventObject.cid) {\r\n    this.transport.cancelPendingResponse(eventObject.cid);\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._processOutboundEvent = function (event, data, options, expectResponse) {\r\n  options = options || {};\r\n\r\n  if (this.state === this.CLOSED) {\r\n    this.connect();\r\n  }\r\n  let eventObject = {\r\n    event\r\n  };\r\n\r\n  let promise;\r\n\r\n  if (expectResponse) {\r\n    promise = new Promise((resolve, reject) => {\r\n      eventObject.callback = (err, data) => {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        resolve(data);\r\n      };\r\n    });\r\n  } else {\r\n    promise = Promise.resolve();\r\n  }\r\n\r\n  let eventNode = new LinkedList.Item();\r\n\r\n  if (this.options.cloneData) {\r\n    eventObject.data = cloneDeep(data);\r\n  } else {\r\n    eventObject.data = data;\r\n  }\r\n  eventNode.data = eventObject;\r\n\r\n  let ackTimeout = options.ackTimeout == null ? this.ackTimeout : options.ackTimeout;\r\n\r\n  eventObject.timeout = setTimeout(() => {\r\n    this._handleEventAckTimeout(eventObject, eventNode);\r\n  }, ackTimeout);\r\n\r\n  this._outboundBuffer.append(eventNode);\r\n  if (this.state === this.OPEN) {\r\n    this._flushOutboundBuffer();\r\n  }\r\n  return promise;\r\n};\r\n\r\nAGClientSocket.prototype.send = function (data) {\r\n  this.transport.send(data);\r\n};\r\n\r\nAGClientSocket.prototype.transmit = function (event, data, options) {\r\n  return this._processOutboundEvent(event, data, options);\r\n};\r\n\r\nAGClientSocket.prototype.invoke = function (event, data, options) {\r\n  return this._processOutboundEvent(event, data, options, true);\r\n};\r\n\r\nAGClientSocket.prototype.transmitPublish = function (channelName, data) {\r\n  let pubData = {\r\n    channel: this._decorateChannelName(channelName),\r\n    data\r\n  };\r\n  return this.transmit('#publish', pubData);\r\n};\r\n\r\nAGClientSocket.prototype.invokePublish = function (channelName, data) {\r\n  let pubData = {\r\n    channel: this._decorateChannelName(channelName),\r\n    data\r\n  };\r\n  return this.invoke('#publish', pubData);\r\n};\r\n\r\nAGClientSocket.prototype._triggerChannelSubscribe = function (channel, subscriptionOptions) {\r\n  let channelName = channel.name;\r\n\r\n  if (channel.state !== AGChannel.SUBSCRIBED) {\r\n    let oldChannelState = channel.state;\r\n    channel.state = AGChannel.SUBSCRIBED;\r\n\r\n    let stateChangeData = {\r\n      oldChannelState,\r\n      newChannelState: channel.state,\r\n      subscriptionOptions\r\n    };\r\n    this._channelEventDemux.write(`${channelName}/subscribeStateChange`, stateChangeData);\r\n    this._channelEventDemux.write(`${channelName}/subscribe`, {\r\n      subscriptionOptions\r\n    });\r\n    this.emit('subscribeStateChange', {\r\n      channel: channelName,\r\n      ...stateChangeData\r\n    });\r\n    this.emit('subscribe', {\r\n      channel: channelName,\r\n      subscriptionOptions\r\n    });\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._triggerChannelSubscribeFail = function (err, channel, subscriptionOptions) {\r\n  let channelName = channel.name;\r\n  let meetsAuthRequirements = !channel.options.waitForAuth || this.authState === this.AUTHENTICATED;\r\n  let hasChannel = !!this._channelMap[channelName];\r\n\r\n  if (hasChannel && meetsAuthRequirements) {\r\n    delete this._channelMap[channelName];\r\n\r\n    this._channelEventDemux.write(`${channelName}/subscribeFail`, {\r\n      error: err,\r\n      subscriptionOptions\r\n    });\r\n    this.emit('subscribeFail', {\r\n      error: err,\r\n      channel: channelName,\r\n      subscriptionOptions: subscriptionOptions\r\n    });\r\n  }\r\n};\r\n\r\n// Cancel any pending subscribe callback\r\nAGClientSocket.prototype._cancelPendingSubscribeCallback = function (channel) {\r\n  if (channel._pendingSubscriptionCid != null) {\r\n    this.transport.cancelPendingResponse(channel._pendingSubscriptionCid);\r\n    delete channel._pendingSubscriptionCid;\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._decorateChannelName = function (channelName) {\r\n  if (this.channelPrefix) {\r\n    channelName = this.channelPrefix + channelName;\r\n  }\r\n  return channelName;\r\n};\r\n\r\nAGClientSocket.prototype._undecorateChannelName = function (decoratedChannelName) {\r\n  if (this.channelPrefix && decoratedChannelName.indexOf(this.channelPrefix) === 0) {\r\n    return decoratedChannelName.replace(this.channelPrefix, '');\r\n  }\r\n  return decoratedChannelName;\r\n};\r\n\r\nAGClientSocket.prototype.startBatch = function () {\r\n  this.transport.startBatch();\r\n};\r\n\r\nAGClientSocket.prototype.flushBatch = function () {\r\n  this.transport.flushBatch();\r\n};\r\n\r\nAGClientSocket.prototype.cancelBatch = function () {\r\n  this.transport.cancelBatch();\r\n};\r\n\r\nAGClientSocket.prototype._startBatching = function () {\r\n  if (this._batchingIntervalId != null) {\r\n    return;\r\n  }\r\n  this.startBatch();\r\n  this._batchingIntervalId = setInterval(() => {\r\n    this.flushBatch();\r\n    this.startBatch();\r\n  }, this.options.batchInterval);\r\n};\r\n\r\nAGClientSocket.prototype.startBatching = function () {\r\n  this.isBatching = true;\r\n  this._startBatching();\r\n};\r\n\r\nAGClientSocket.prototype._stopBatching = function () {\r\n  if (this._batchingIntervalId != null) {\r\n    clearInterval(this._batchingIntervalId);\r\n  }\r\n  this._batchingIntervalId = null;\r\n  this.flushBatch();\r\n};\r\n\r\nAGClientSocket.prototype.stopBatching = function () {\r\n  this.isBatching = false;\r\n  this._stopBatching();\r\n};\r\n\r\nAGClientSocket.prototype._cancelBatching = function () {\r\n  if (this._batchingIntervalId != null) {\r\n    clearInterval(this._batchingIntervalId);\r\n  }\r\n  this._batchingIntervalId = null;\r\n  this.cancelBatch();\r\n};\r\n\r\nAGClientSocket.prototype.cancelBatching = function () {\r\n  this.isBatching = false;\r\n  this._cancelBatching();\r\n};\r\n\r\nAGClientSocket.prototype._trySubscribe = function (channel) {\r\n  let meetsAuthRequirements = !channel.options.waitForAuth || this.authState === this.AUTHENTICATED;\r\n\r\n  // We can only ever have one pending subscribe action at any given time on a channel\r\n  if (\r\n    this.state === this.OPEN &&\r\n    !this.preparingPendingSubscriptions &&\r\n    channel._pendingSubscriptionCid == null &&\r\n    meetsAuthRequirements\r\n  ) {\r\n\r\n    let options = {\r\n      noTimeout: true\r\n    };\r\n\r\n    let subscriptionOptions = {};\r\n    if (channel.options.waitForAuth) {\r\n      options.waitForAuth = true;\r\n      subscriptionOptions.waitForAuth = options.waitForAuth;\r\n    }\r\n    if (channel.options.data) {\r\n      subscriptionOptions.data = channel.options.data;\r\n    }\r\n\r\n    channel._pendingSubscriptionCid = this.transport.invokeRaw(\r\n      '#subscribe',\r\n      {\r\n        channel: this._decorateChannelName(channel.name),\r\n        ...subscriptionOptions\r\n      },\r\n      options,\r\n      (err) => {\r\n        if (err) {\r\n          if (err.name === 'BadConnectionError') {\r\n            // In case of a failed connection, keep the subscription\r\n            // as pending; it will try again on reconnect.\r\n            return;\r\n          }\r\n          delete channel._pendingSubscriptionCid;\r\n          this._triggerChannelSubscribeFail(err, channel, subscriptionOptions);\r\n        } else {\r\n          delete channel._pendingSubscriptionCid;\r\n          this._triggerChannelSubscribe(channel, subscriptionOptions);\r\n        }\r\n      }\r\n    );\r\n    this.emit('subscribeRequest', {\r\n      channel: channel.name,\r\n      subscriptionOptions\r\n    });\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype.subscribe = function (channelName, options) {\r\n  options = options || {};\r\n  let channel = this._channelMap[channelName];\r\n\r\n  let sanitizedOptions = {\r\n    waitForAuth: !!options.waitForAuth\r\n  };\r\n\r\n  if (options.priority != null) {\r\n    sanitizedOptions.priority = options.priority;\r\n  }\r\n  if (options.data !== undefined) {\r\n    sanitizedOptions.data = options.data;\r\n  }\r\n\r\n  if (!channel) {\r\n    channel = {\r\n      name: channelName,\r\n      state: AGChannel.PENDING,\r\n      options: sanitizedOptions\r\n    };\r\n    this._channelMap[channelName] = channel;\r\n    this._trySubscribe(channel);\r\n  } else if (options) {\r\n    channel.options = sanitizedOptions;\r\n  }\r\n\r\n  let channelIterable = new AGChannel(\r\n    channelName,\r\n    this,\r\n    this._channelEventDemux,\r\n    this._channelDataDemux\r\n  );\r\n\r\n  return channelIterable;\r\n};\r\n\r\nAGClientSocket.prototype._triggerChannelUnsubscribe = function (channel, setAsPending) {\r\n  let channelName = channel.name;\r\n\r\n  this._cancelPendingSubscribeCallback(channel);\r\n\r\n  if (channel.state === AGChannel.SUBSCRIBED) {\r\n    let stateChangeData = {\r\n      oldChannelState: channel.state,\r\n      newChannelState: setAsPending ? AGChannel.PENDING : AGChannel.UNSUBSCRIBED\r\n    };\r\n    this._channelEventDemux.write(`${channelName}/subscribeStateChange`, stateChangeData);\r\n    this._channelEventDemux.write(`${channelName}/unsubscribe`, {});\r\n    this.emit('subscribeStateChange', {\r\n      channel: channelName,\r\n      ...stateChangeData\r\n    });\r\n    this.emit('unsubscribe', {channel: channelName});\r\n  }\r\n\r\n  if (setAsPending) {\r\n    channel.state = AGChannel.PENDING;\r\n  } else {\r\n    delete this._channelMap[channelName];\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype._tryUnsubscribe = function (channel) {\r\n  if (this.state === this.OPEN) {\r\n    let options = {\r\n      noTimeout: true\r\n    };\r\n    // If there is a pending subscribe action, cancel the callback\r\n    this._cancelPendingSubscribeCallback(channel);\r\n\r\n    // This operation cannot fail because the TCP protocol guarantees delivery\r\n    // so long as the connection remains open. If the connection closes,\r\n    // the server will automatically unsubscribe the client and thus complete\r\n    // the operation on the server side.\r\n    let decoratedChannelName = this._decorateChannelName(channel.name);\r\n    this.transport.transmit('#unsubscribe', decoratedChannelName, options);\r\n  }\r\n};\r\n\r\nAGClientSocket.prototype.unsubscribe = function (channelName) {\r\n  let channel = this._channelMap[channelName];\r\n\r\n  if (channel) {\r\n    this._triggerChannelUnsubscribe(channel);\r\n    this._tryUnsubscribe(channel);\r\n  }\r\n};\r\n\r\n// ---- Receiver logic ----\r\n\r\nAGClientSocket.prototype.receiver = function (receiverName) {\r\n  return this._receiverDemux.stream(receiverName);\r\n};\r\n\r\nAGClientSocket.prototype.closeReceiver = function (receiverName) {\r\n  this._receiverDemux.close(receiverName);\r\n};\r\n\r\nAGClientSocket.prototype.closeAllReceivers = function () {\r\n  this._receiverDemux.closeAll();\r\n};\r\n\r\nAGClientSocket.prototype.killReceiver = function (receiverName) {\r\n  this._receiverDemux.kill(receiverName);\r\n};\r\n\r\nAGClientSocket.prototype.killAllReceivers = function () {\r\n  this._receiverDemux.killAll();\r\n};\r\n\r\nAGClientSocket.prototype.killReceiverConsumer = function (consumerId) {\r\n  this._receiverDemux.killConsumer(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getReceiverConsumerStats = function (consumerId) {\r\n  return this._receiverDemux.getConsumerStats(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getReceiverConsumerStatsList = function (receiverName) {\r\n  return this._receiverDemux.getConsumerStatsList(receiverName);\r\n};\r\n\r\nAGClientSocket.prototype.getAllReceiversConsumerStatsList = function () {\r\n  return this._receiverDemux.getConsumerStatsListAll();\r\n};\r\n\r\nAGClientSocket.prototype.getReceiverBackpressure = function (receiverName) {\r\n  return this._receiverDemux.getBackpressure(receiverName);\r\n};\r\n\r\nAGClientSocket.prototype.getAllReceiversBackpressure = function () {\r\n  return this._receiverDemux.getBackpressureAll();\r\n};\r\n\r\nAGClientSocket.prototype.getReceiverConsumerBackpressure = function (consumerId) {\r\n  return this._receiverDemux.getConsumerBackpressure(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.hasReceiverConsumer = function (receiverName, consumerId) {\r\n  return this._receiverDemux.hasConsumer(receiverName, consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.hasAnyReceiverConsumer = function (consumerId) {\r\n  return this._receiverDemux.hasConsumerAll(consumerId);\r\n};\r\n\r\n// ---- Procedure logic ----\r\n\r\nAGClientSocket.prototype.procedure = function (procedureName) {\r\n  return this._procedureDemux.stream(procedureName);\r\n};\r\n\r\nAGClientSocket.prototype.closeProcedure = function (procedureName) {\r\n  this._procedureDemux.close(procedureName);\r\n};\r\n\r\nAGClientSocket.prototype.closeAllProcedures = function () {\r\n  this._procedureDemux.closeAll();\r\n};\r\n\r\nAGClientSocket.prototype.killProcedure = function (procedureName) {\r\n  this._procedureDemux.kill(procedureName);\r\n};\r\n\r\nAGClientSocket.prototype.killAllProcedures = function () {\r\n  this._procedureDemux.killAll();\r\n};\r\n\r\nAGClientSocket.prototype.killProcedureConsumer = function (consumerId) {\r\n  this._procedureDemux.killConsumer(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getProcedureConsumerStats = function (consumerId) {\r\n  return this._procedureDemux.getConsumerStats(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getProcedureConsumerStatsList = function (procedureName) {\r\n  return this._procedureDemux.getConsumerStatsList(procedureName);\r\n};\r\n\r\nAGClientSocket.prototype.getAllProceduresConsumerStatsList = function () {\r\n  return this._procedureDemux.getConsumerStatsListAll();\r\n};\r\n\r\nAGClientSocket.prototype.getProcedureBackpressure = function (procedureName) {\r\n  return this._procedureDemux.getBackpressure(procedureName);\r\n};\r\n\r\nAGClientSocket.prototype.getAllProceduresBackpressure = function () {\r\n  return this._procedureDemux.getBackpressureAll();\r\n};\r\n\r\nAGClientSocket.prototype.getProcedureConsumerBackpressure = function (consumerId) {\r\n  return this._procedureDemux.getConsumerBackpressure(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.hasProcedureConsumer = function (procedureName, consumerId) {\r\n  return this._procedureDemux.hasConsumer(procedureName, consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.hasAnyProcedureConsumer = function (consumerId) {\r\n  return this._procedureDemux.hasConsumerAll(consumerId);\r\n};\r\n\r\n// ---- Channel logic ----\r\n\r\nAGClientSocket.prototype.channel = function (channelName) {\r\n  let currentChannel = this._channelMap[channelName];\r\n\r\n  let channelIterable = new AGChannel(\r\n    channelName,\r\n    this,\r\n    this._channelEventDemux,\r\n    this._channelDataDemux\r\n  );\r\n\r\n  return channelIterable;\r\n};\r\n\r\nAGClientSocket.prototype.closeChannel = function (channelName) {\r\n  this.channelCloseOutput(channelName);\r\n  this.channelCloseAllListeners(channelName);\r\n};\r\n\r\nAGClientSocket.prototype.closeAllChannelOutputs = function () {\r\n  this._channelDataDemux.closeAll();\r\n};\r\n\r\nAGClientSocket.prototype.closeAllChannelListeners = function () {\r\n  this._channelEventDemux.closeAll();\r\n};\r\n\r\nAGClientSocket.prototype.closeAllChannels = function () {\r\n  this.closeAllChannelOutputs();\r\n  this.closeAllChannelListeners();\r\n};\r\n\r\nAGClientSocket.prototype.killChannel = function (channelName) {\r\n  this.channelKillOutput(channelName);\r\n  this.channelKillAllListeners(channelName);\r\n};\r\n\r\nAGClientSocket.prototype.killAllChannelOutputs = function () {\r\n  this._channelDataDemux.killAll();\r\n};\r\n\r\nAGClientSocket.prototype.killAllChannelListeners = function () {\r\n  this._channelEventDemux.killAll();\r\n};\r\n\r\nAGClientSocket.prototype.killAllChannels = function () {\r\n  this.killAllChannelOutputs();\r\n  this.killAllChannelListeners();\r\n};\r\n\r\nAGClientSocket.prototype.killChannelOutputConsumer = function (consumerId) {\r\n  this._channelDataDemux.killConsumer(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.killChannelListenerConsumer = function (consumerId) {\r\n  this._channelEventDemux.killConsumer(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getChannelOutputConsumerStats = function (consumerId) {\r\n  return this._channelDataDemux.getConsumerStats(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getChannelListenerConsumerStats = function (consumerId) {\r\n  return this._channelEventDemux.getConsumerStats(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getAllChannelOutputsConsumerStatsList = function () {\r\n  return this._channelDataDemux.getConsumerStatsListAll();\r\n};\r\n\r\nAGClientSocket.prototype.getAllChannelListenersConsumerStatsList = function () {\r\n  return this._channelEventDemux.getConsumerStatsListAll();\r\n};\r\n\r\nAGClientSocket.prototype.getChannelBackpressure = function (channelName) {\r\n  return Math.max(\r\n    this.channelGetOutputBackpressure(channelName),\r\n    this.channelGetAllListenersBackpressure(channelName)\r\n  );\r\n};\r\n\r\nAGClientSocket.prototype.getAllChannelOutputsBackpressure = function () {\r\n  return this._channelDataDemux.getBackpressureAll();\r\n};\r\n\r\nAGClientSocket.prototype.getAllChannelListenersBackpressure = function () {\r\n  return this._channelEventDemux.getBackpressureAll();\r\n};\r\n\r\nAGClientSocket.prototype.getAllChannelsBackpressure = function () {\r\n  return Math.max(\r\n    this.getAllChannelOutputsBackpressure(),\r\n    this.getAllChannelListenersBackpressure()\r\n  );\r\n};\r\n\r\nAGClientSocket.prototype.getChannelListenerConsumerBackpressure = function (consumerId) {\r\n  return this._channelEventDemux.getConsumerBackpressure(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getChannelOutputConsumerBackpressure = function (consumerId) {\r\n  return this._channelDataDemux.getConsumerBackpressure(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.hasAnyChannelOutputConsumer = function (consumerId) {\r\n  return this._channelDataDemux.hasConsumerAll(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.hasAnyChannelListenerConsumer = function (consumerId) {\r\n  return this._channelEventDemux.hasConsumerAll(consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.getChannelState = function (channelName) {\r\n  let channel = this._channelMap[channelName];\r\n  if (channel) {\r\n    return channel.state;\r\n  }\r\n  return AGChannel.UNSUBSCRIBED;\r\n};\r\n\r\nAGClientSocket.prototype.getChannelOptions = function (channelName) {\r\n  let channel = this._channelMap[channelName];\r\n  if (channel) {\r\n    return {...channel.options};\r\n  }\r\n  return {};\r\n};\r\n\r\nAGClientSocket.prototype._getAllChannelStreamNames = function (channelName) {\r\n  let streamNamesLookup = this._channelEventDemux.getConsumerStatsListAll()\r\n  .filter((stats) => {\r\n    return stats.stream.indexOf(`${channelName}/`) === 0;\r\n  })\r\n  .reduce((accumulator, stats) => {\r\n    accumulator[stats.stream] = true;\r\n    return accumulator;\r\n  }, {});\r\n  return Object.keys(streamNamesLookup);\r\n};\r\n\r\nAGClientSocket.prototype.channelCloseOutput = function (channelName) {\r\n  this._channelDataDemux.close(channelName);\r\n};\r\n\r\nAGClientSocket.prototype.channelCloseListener = function (channelName, eventName) {\r\n  this._channelEventDemux.close(`${channelName}/${eventName}`);\r\n};\r\n\r\nAGClientSocket.prototype.channelCloseAllListeners = function (channelName) {\r\n  let listenerStreams = this._getAllChannelStreamNames(channelName)\r\n  .forEach((streamName) => {\r\n    this._channelEventDemux.close(streamName);\r\n  });\r\n};\r\n\r\nAGClientSocket.prototype.channelKillOutput = function (channelName) {\r\n  this._channelDataDemux.kill(channelName);\r\n};\r\n\r\nAGClientSocket.prototype.channelKillListener = function (channelName, eventName) {\r\n  this._channelEventDemux.kill(`${channelName}/${eventName}`);\r\n};\r\n\r\nAGClientSocket.prototype.channelKillAllListeners = function (channelName) {\r\n  let listenerStreams = this._getAllChannelStreamNames(channelName)\r\n  .forEach((streamName) => {\r\n    this._channelEventDemux.kill(streamName);\r\n  });\r\n};\r\n\r\nAGClientSocket.prototype.channelGetOutputConsumerStatsList = function (channelName) {\r\n  return this._channelDataDemux.getConsumerStatsList(channelName);\r\n};\r\n\r\nAGClientSocket.prototype.channelGetListenerConsumerStatsList = function (channelName, eventName) {\r\n  return this._channelEventDemux.getConsumerStatsList(`${channelName}/${eventName}`);\r\n};\r\n\r\nAGClientSocket.prototype.channelGetAllListenersConsumerStatsList = function (channelName) {\r\n  return this._getAllChannelStreamNames(channelName)\r\n  .map((streamName) => {\r\n    return this._channelEventDemux.getConsumerStatsList(streamName);\r\n  })\r\n  .reduce((accumulator, statsList) => {\r\n    statsList.forEach((stats) => {\r\n      accumulator.push(stats);\r\n    });\r\n    return accumulator;\r\n  }, []);\r\n};\r\n\r\nAGClientSocket.prototype.channelGetOutputBackpressure = function (channelName) {\r\n  return this._channelDataDemux.getBackpressure(channelName);\r\n};\r\n\r\nAGClientSocket.prototype.channelGetListenerBackpressure = function (channelName, eventName) {\r\n  return this._channelEventDemux.getBackpressure(`${channelName}/${eventName}`);\r\n};\r\n\r\nAGClientSocket.prototype.channelGetAllListenersBackpressure = function (channelName) {\r\n  let listenerStreamBackpressures = this._getAllChannelStreamNames(channelName)\r\n  .map((streamName) => {\r\n    return this._channelEventDemux.getBackpressure(streamName);\r\n  });\r\n  return Math.max(...listenerStreamBackpressures.concat(0));\r\n};\r\n\r\nAGClientSocket.prototype.channelHasOutputConsumer = function (channelName, consumerId) {\r\n  return this._channelDataDemux.hasConsumer(channelName, consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.channelHasListenerConsumer = function (channelName, eventName, consumerId) {\r\n  return this._channelEventDemux.hasConsumer(`${channelName}/${eventName}`, consumerId);\r\n};\r\n\r\nAGClientSocket.prototype.channelHasAnyListenerConsumer = function (channelName, consumerId) {\r\n  return this._getAllChannelStreamNames(channelName)\r\n  .some((streamName) => {\r\n    return this._channelEventDemux.hasConsumer(streamName, consumerId);\r\n  });\r\n};\r\n\r\nAGClientSocket.prototype.subscriptions = function (includePending) {\r\n  let subs = [];\r\n  Object.keys(this._channelMap).forEach((channelName) => {\r\n    if (includePending || this._channelMap[channelName].state === AGChannel.SUBSCRIBED) {\r\n      subs.push(channelName);\r\n    }\r\n  });\r\n  return subs;\r\n};\r\n\r\nAGClientSocket.prototype.isSubscribed = function (channelName, includePending) {\r\n  let channel = this._channelMap[channelName];\r\n  if (includePending) {\r\n    return !!channel;\r\n  }\r\n  return !!channel && channel.state === AGChannel.SUBSCRIBED;\r\n};\r\n\r\nAGClientSocket.prototype.processPendingSubscriptions = function () {\r\n  this.preparingPendingSubscriptions = false;\r\n  let pendingChannels = [];\r\n\r\n  Object.keys(this._channelMap).forEach((channelName) => {\r\n    let channel = this._channelMap[channelName];\r\n    if (channel.state === AGChannel.PENDING) {\r\n      pendingChannels.push(channel);\r\n    }\r\n  });\r\n\r\n  pendingChannels.sort((a, b) => {\r\n    let ap = a.options.priority || 0;\r\n    let bp = b.options.priority || 0;\r\n    if (ap > bp) {\r\n      return -1;\r\n    }\r\n    if (ap < bp) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  pendingChannels.forEach((channel) => {\r\n    this._trySubscribe(channel);\r\n  });\r\n};\r\n\r\nmodule.exports = AGClientSocket;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/lib/clientsocket.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/lib/factory.js":
/*!**********************************************************!*\
  !*** ./node_modules/socketcluster-client/lib/factory.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AGClientSocket = __webpack_require__(/*! ./clientsocket */ \"./node_modules/socketcluster-client/lib/clientsocket.js\");\r\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\r\nconst scErrors = __webpack_require__(/*! sc-errors */ \"./node_modules/sc-errors/index.js\");\r\nconst InvalidArgumentsError = scErrors.InvalidArgumentsError;\r\n\r\nfunction isUrlSecure() {\r\n  return __webpack_require__.g.location && location.protocol === 'https:';\r\n}\r\n\r\nfunction getPort(options, isSecureDefault) {\r\n  let isSecure = options.secure == null ? isSecureDefault : options.secure;\r\n  return options.port || (__webpack_require__.g.location && location.port ? location.port : isSecure ? 443 : 80);\r\n}\r\n\r\nfunction create(options) {\r\n  options = options || {};\r\n\r\n  if (options.host && !options.host.match(/[^:]+:\\d{2,5}/)) {\r\n    throw new InvalidArgumentsError(\r\n      'The host option should include both' +\r\n      ' the hostname and the port number in the format \"hostname:port\"'\r\n    );\r\n  }\r\n\r\n  if (options.host && options.hostname) {\r\n    throw new InvalidArgumentsError(\r\n      'The host option should already include' +\r\n      ' the hostname and the port number in the format \"hostname:port\"' +\r\n      ' - Because of this, you should never use host and hostname options together'\r\n    );\r\n  }\r\n\r\n  if (options.host && options.port) {\r\n    throw new InvalidArgumentsError(\r\n      'The host option should already include' +\r\n      ' the hostname and the port number in the format \"hostname:port\"' +\r\n      ' - Because of this, you should never use host and port options together'\r\n    );\r\n  }\r\n\r\n  let isSecureDefault = isUrlSecure();\r\n\r\n  let opts = {\r\n    clientId: uuid.v4(),\r\n    port: getPort(options, isSecureDefault),\r\n    hostname: __webpack_require__.g.location && location.hostname || 'localhost',\r\n    secure: isSecureDefault\r\n  };\r\n\r\n  Object.assign(opts, options);\r\n\r\n  return new AGClientSocket(opts);\r\n}\r\n\r\nmodule.exports = {\r\n  create\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbGliL2ZhY3RvcnkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCLG1CQUFPLENBQUMsK0VBQWdCO0FBQy9DLGFBQWEsbUJBQU8sQ0FBQywyREFBTTtBQUMzQixpQkFBaUIsbUJBQU8sQ0FBQyxvREFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQSxTQUFTLHFCQUFNO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscUJBQU07QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxJQUFJO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUJBQU07QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbGliL2ZhY3RvcnkuanM/ZTU2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBR0NsaWVudFNvY2tldCA9IHJlcXVpcmUoJy4vY2xpZW50c29ja2V0Jyk7XHJcbmNvbnN0IHV1aWQgPSByZXF1aXJlKCd1dWlkJyk7XHJcbmNvbnN0IHNjRXJyb3JzID0gcmVxdWlyZSgnc2MtZXJyb3JzJyk7XHJcbmNvbnN0IEludmFsaWRBcmd1bWVudHNFcnJvciA9IHNjRXJyb3JzLkludmFsaWRBcmd1bWVudHNFcnJvcjtcclxuXHJcbmZ1bmN0aW9uIGlzVXJsU2VjdXJlKCkge1xyXG4gIHJldHVybiBnbG9iYWwubG9jYXRpb24gJiYgbG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwczonO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRQb3J0KG9wdGlvbnMsIGlzU2VjdXJlRGVmYXVsdCkge1xyXG4gIGxldCBpc1NlY3VyZSA9IG9wdGlvbnMuc2VjdXJlID09IG51bGwgPyBpc1NlY3VyZURlZmF1bHQgOiBvcHRpb25zLnNlY3VyZTtcclxuICByZXR1cm4gb3B0aW9ucy5wb3J0IHx8IChnbG9iYWwubG9jYXRpb24gJiYgbG9jYXRpb24ucG9ydCA/IGxvY2F0aW9uLnBvcnQgOiBpc1NlY3VyZSA/IDQ0MyA6IDgwKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlKG9wdGlvbnMpIHtcclxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuXHJcbiAgaWYgKG9wdGlvbnMuaG9zdCAmJiAhb3B0aW9ucy5ob3N0Lm1hdGNoKC9bXjpdKzpcXGR7Miw1fS8pKSB7XHJcbiAgICB0aHJvdyBuZXcgSW52YWxpZEFyZ3VtZW50c0Vycm9yKFxyXG4gICAgICAnVGhlIGhvc3Qgb3B0aW9uIHNob3VsZCBpbmNsdWRlIGJvdGgnICtcclxuICAgICAgJyB0aGUgaG9zdG5hbWUgYW5kIHRoZSBwb3J0IG51bWJlciBpbiB0aGUgZm9ybWF0IFwiaG9zdG5hbWU6cG9ydFwiJ1xyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGlmIChvcHRpb25zLmhvc3QgJiYgb3B0aW9ucy5ob3N0bmFtZSkge1xyXG4gICAgdGhyb3cgbmV3IEludmFsaWRBcmd1bWVudHNFcnJvcihcclxuICAgICAgJ1RoZSBob3N0IG9wdGlvbiBzaG91bGQgYWxyZWFkeSBpbmNsdWRlJyArXHJcbiAgICAgICcgdGhlIGhvc3RuYW1lIGFuZCB0aGUgcG9ydCBudW1iZXIgaW4gdGhlIGZvcm1hdCBcImhvc3RuYW1lOnBvcnRcIicgK1xyXG4gICAgICAnIC0gQmVjYXVzZSBvZiB0aGlzLCB5b3Ugc2hvdWxkIG5ldmVyIHVzZSBob3N0IGFuZCBob3N0bmFtZSBvcHRpb25zIHRvZ2V0aGVyJ1xyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGlmIChvcHRpb25zLmhvc3QgJiYgb3B0aW9ucy5wb3J0KSB7XHJcbiAgICB0aHJvdyBuZXcgSW52YWxpZEFyZ3VtZW50c0Vycm9yKFxyXG4gICAgICAnVGhlIGhvc3Qgb3B0aW9uIHNob3VsZCBhbHJlYWR5IGluY2x1ZGUnICtcclxuICAgICAgJyB0aGUgaG9zdG5hbWUgYW5kIHRoZSBwb3J0IG51bWJlciBpbiB0aGUgZm9ybWF0IFwiaG9zdG5hbWU6cG9ydFwiJyArXHJcbiAgICAgICcgLSBCZWNhdXNlIG9mIHRoaXMsIHlvdSBzaG91bGQgbmV2ZXIgdXNlIGhvc3QgYW5kIHBvcnQgb3B0aW9ucyB0b2dldGhlcidcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBsZXQgaXNTZWN1cmVEZWZhdWx0ID0gaXNVcmxTZWN1cmUoKTtcclxuXHJcbiAgbGV0IG9wdHMgPSB7XHJcbiAgICBjbGllbnRJZDogdXVpZC52NCgpLFxyXG4gICAgcG9ydDogZ2V0UG9ydChvcHRpb25zLCBpc1NlY3VyZURlZmF1bHQpLFxyXG4gICAgaG9zdG5hbWU6IGdsb2JhbC5sb2NhdGlvbiAmJiBsb2NhdGlvbi5ob3N0bmFtZSB8fCAnbG9jYWxob3N0JyxcclxuICAgIHNlY3VyZTogaXNTZWN1cmVEZWZhdWx0XHJcbiAgfTtcclxuXHJcbiAgT2JqZWN0LmFzc2lnbihvcHRzLCBvcHRpb25zKTtcclxuXHJcbiAgcmV0dXJuIG5ldyBBR0NsaWVudFNvY2tldChvcHRzKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgY3JlYXRlXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/lib/factory.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/lib/transport.js":
/*!************************************************************!*\
  !*** ./node_modules/socketcluster-client/lib/transport.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AGRequest = __webpack_require__(/*! ag-request */ \"./node_modules/ag-request/index.js\");\r\n\r\nlet WebSocket;\r\nlet createWebSocket;\r\n\r\nif (__webpack_require__.g.WebSocket) {\r\n  WebSocket = __webpack_require__.g.WebSocket;\r\n  createWebSocket = function (uri, options) {\r\n    return new WebSocket(uri);\r\n  };\r\n} else {\r\n  WebSocket = __webpack_require__(/*! ws */ \"./node_modules/socketcluster-client/lib/ws-browser.js\");\r\n  createWebSocket = function (uri, options) {\r\n    return new WebSocket(uri, [], options);\r\n  };\r\n}\r\n\r\nconst scErrors = __webpack_require__(/*! sc-errors */ \"./node_modules/sc-errors/index.js\");\r\nconst TimeoutError = scErrors.TimeoutError;\r\nconst BadConnectionError = scErrors.BadConnectionError;\r\n\r\nfunction AGTransport(authEngine, codecEngine, options, wsOptions, handlers) {\r\n  this.state = this.CLOSED;\r\n  this.auth = authEngine;\r\n  this.codec = codecEngine;\r\n  this.options = options;\r\n  this.wsOptions = wsOptions;\r\n  this.protocolVersion = options.protocolVersion;\r\n  this.connectTimeout = options.connectTimeout;\r\n  this.pingTimeout = options.pingTimeout;\r\n  this.pingTimeoutDisabled = !!options.pingTimeoutDisabled;\r\n  this.callIdGenerator = options.callIdGenerator;\r\n  this.authTokenName = options.authTokenName;\r\n  this.isBufferingBatch = false;\r\n\r\n  this._pingTimeoutTicker = null;\r\n  this._callbackMap = {};\r\n  this._batchBuffer = [];\r\n\r\n  if (!handlers) {\r\n    handlers = {};\r\n  }\r\n\r\n  this._onOpenHandler = handlers.onOpen || function () {};\r\n  this._onOpenAbortHandler = handlers.onOpenAbort || function () {};\r\n  this._onCloseHandler = handlers.onClose || function () {};\r\n  this._onEventHandler = handlers.onEvent || function () {};\r\n  this._onErrorHandler = handlers.onError || function () {};\r\n  this._onInboundInvokeHandler  = handlers.onInboundInvoke || function () {};\r\n  this._onInboundTransmitHandler = handlers.onInboundTransmit || function () {};\r\n\r\n  // Open the connection.\r\n\r\n  this.state = this.CONNECTING;\r\n  let uri = this.uri();\r\n\r\n  let wsSocket = createWebSocket(uri, wsOptions);\r\n  wsSocket.binaryType = this.options.binaryType;\r\n\r\n  this.socket = wsSocket;\r\n\r\n  wsSocket.onopen = () => {\r\n    this._onOpen();\r\n  };\r\n\r\n  wsSocket.onclose = async (event) => {\r\n    let code;\r\n    if (event.code == null) {\r\n      // This is to handle an edge case in React Native whereby\r\n      // event.code is undefined when the mobile device is locked.\r\n      // TODO: This is not ideal since this condition could also apply to\r\n      // an abnormal close (no close control frame) which would be a 1006.\r\n      code = 1005;\r\n    } else {\r\n      code = event.code;\r\n    }\r\n    this._destroy(code, event.reason);\r\n  };\r\n\r\n  wsSocket.onmessage = (message, flags) => {\r\n    this._onMessage(message.data);\r\n  };\r\n\r\n  wsSocket.onerror = (error) => {\r\n    // The onclose event will be called automatically after the onerror event\r\n    // if the socket is connected - Otherwise, if it's in the middle of\r\n    // connecting, we want to close it manually with a 1006 - This is necessary\r\n    // to prevent inconsistent behavior when running the client in Node.js\r\n    // vs in a browser.\r\n    if (this.state === this.CONNECTING) {\r\n      this._destroy(1006);\r\n    }\r\n  };\r\n\r\n  this._connectTimeoutRef = setTimeout(() => {\r\n    this._destroy(4007);\r\n    this.socket.close(4007);\r\n  }, this.connectTimeout);\r\n\r\n  if (this.protocolVersion === 1) {\r\n    this._handlePing = (message) => {\r\n      if (message === '#1') {\r\n        this._resetPingTimeout();\r\n        if (this.socket.readyState === this.socket.OPEN) {\r\n          this.send('#2');\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n  } else {\r\n    this._handlePing = (message) => {\r\n      if (message === '') {\r\n        this._resetPingTimeout();\r\n        if (this.socket.readyState === this.socket.OPEN) {\r\n          this.send('');\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n  }\r\n}\r\n\r\nAGTransport.CONNECTING = AGTransport.prototype.CONNECTING = 'connecting';\r\nAGTransport.OPEN = AGTransport.prototype.OPEN = 'open';\r\nAGTransport.CLOSED = AGTransport.prototype.CLOSED = 'closed';\r\n\r\nAGTransport.prototype.uri = function () {\r\n  let query = this.options.query || {};\r\n  let scheme;\r\n  if (this.options.protocolScheme == null) {\r\n    scheme = this.options.secure ? 'wss' : 'ws';\r\n  } else {\r\n    scheme = this.options.protocolScheme;\r\n  }\r\n\r\n  if (this.options.timestampRequests) {\r\n    query[this.options.timestampParam] = (new Date()).getTime();\r\n  }\r\n\r\n  let searchParams = new URLSearchParams();\r\n  for (let [key, value] of Object.entries(query)) {\r\n    if (Array.isArray(value)) {\r\n      for (let item of value) {\r\n        searchParams.append(key, item);\r\n      }\r\n    } else {\r\n      searchParams.set(key, value);\r\n    }\r\n  }\r\n\r\n  query = searchParams.toString();\r\n\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  let host;\r\n  let path;\r\n  if (this.options.socketPath == null) {\r\n    if (this.options.host) {\r\n      host = this.options.host;\r\n    } else {\r\n      let port = '';\r\n\r\n      if (this.options.port && ((scheme === 'wss' && this.options.port !== 443)\r\n        || (scheme === 'ws' && this.options.port !== 80))) {\r\n        port = ':' + this.options.port;\r\n      }\r\n      host = this.options.hostname + port;\r\n    }\r\n    path = this.options.path;\r\n  } else {\r\n    host = this.options.socketPath;\r\n    path = `:${this.options.path}`;\r\n  }\r\n  return scheme + '://' + host + path + query;\r\n};\r\n\r\nAGTransport.prototype._onOpen = async function () {\r\n  clearTimeout(this._connectTimeoutRef);\r\n  this._resetPingTimeout();\r\n\r\n  let status;\r\n\r\n  try {\r\n    status = await this._handshake();\r\n  } catch (err) {\r\n    if (err.statusCode == null) {\r\n      err.statusCode = 4003;\r\n    }\r\n    this._onError(err);\r\n    this._destroy(err.statusCode, err.toString());\r\n    this.socket.close(err.statusCode);\r\n    return;\r\n  }\r\n\r\n  this.state = this.OPEN;\r\n  if (status) {\r\n    this.pingTimeout = status.pingTimeout;\r\n  }\r\n  this._resetPingTimeout();\r\n  this._onOpenHandler(status);\r\n};\r\n\r\nAGTransport.prototype._handshake = async function () {\r\n  let token = await this.auth.loadToken(this.authTokenName);\r\n  // Don't wait for this.state to be 'open'.\r\n  // The underlying WebSocket (this.socket) is already open.\r\n  let options = {\r\n    force: true\r\n  };\r\n  let status = await this.invoke('#handshake', {authToken: token}, options);\r\n  if (status) {\r\n    // Add the token which was used as part of authentication attempt\r\n    // to the status object.\r\n    status.authToken = token;\r\n    if (status.authError) {\r\n      status.authError = scErrors.hydrateError(status.authError);\r\n    }\r\n  }\r\n  return status;\r\n};\r\n\r\nAGTransport.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\r\n  Object.keys(this._callbackMap || {}).forEach((i) => {\r\n    let eventObject = this._callbackMap[i];\r\n    delete this._callbackMap[i];\r\n\r\n    clearTimeout(eventObject.timeout);\r\n    delete eventObject.timeout;\r\n\r\n    let errorMessage = `Event \"${eventObject.event}\" was aborted due to a bad connection`;\r\n    let badConnectionError = new BadConnectionError(errorMessage, failureType);\r\n\r\n    let callback = eventObject.callback;\r\n    if (callback) {\r\n      delete eventObject.callback;\r\n\r\n      callback.call(eventObject, badConnectionError, eventObject);\r\n    }\r\n  });\r\n};\r\n\r\nAGTransport.prototype._destroy = function (code, reason) {\r\n  let protocolReason = scErrors.socketProtocolErrorStatuses[code];\r\n  if (!reason && scErrors.socketProtocolErrorStatuses[code]) {\r\n    reason = scErrors.socketProtocolErrorStatuses[code];\r\n  }\r\n  delete this.socket.onopen;\r\n  delete this.socket.onclose;\r\n  delete this.socket.onmessage;\r\n  delete this.socket.onerror;\r\n\r\n  clearTimeout(this._connectTimeoutRef);\r\n  clearTimeout(this._pingTimeoutTicker);\r\n\r\n  if (this.state === this.OPEN) {\r\n    this.state = this.CLOSED;\r\n    this._abortAllPendingEventsDueToBadConnection('disconnect');\r\n    this._onCloseHandler({code, reason});\r\n  } else if (this.state === this.CONNECTING) {\r\n    this.state = this.CLOSED;\r\n    this._abortAllPendingEventsDueToBadConnection('connectAbort');\r\n    this._onOpenAbortHandler({code, reason});\r\n  } else if (this.state === this.CLOSED) {\r\n    this._abortAllPendingEventsDueToBadConnection('connectAbort');\r\n  }\r\n};\r\n\r\nAGTransport.prototype._processInboundPacket = function (packet, message) {\r\n  if (packet && packet.event != null) {\r\n    if (packet.cid == null) {\r\n      this._onInboundTransmitHandler({...packet});\r\n    } else {\r\n      let request = new AGRequest(this, packet.cid, packet.event, packet.data);\r\n      this._onInboundInvokeHandler(request);\r\n    }\r\n  } else if (packet && packet.rid != null) {\r\n    let eventObject = this._callbackMap[packet.rid];\r\n    if (eventObject) {\r\n      clearTimeout(eventObject.timeout);\r\n      delete eventObject.timeout;\r\n      delete this._callbackMap[packet.rid];\r\n\r\n      if (eventObject.callback) {\r\n        let rehydratedError = scErrors.hydrateError(packet.error);\r\n        eventObject.callback(rehydratedError, packet.data);\r\n      }\r\n    }\r\n  } else {\r\n    this._onEventHandler({event: 'raw', data: {message}});\r\n  }\r\n};\r\n\r\nAGTransport.prototype._onMessage = function (message) {\r\n  this._onEventHandler({event: 'message', data: {message}});\r\n\r\n  if (this._handlePing(message)) {\r\n    return;\r\n  }\r\n\r\n  let packet = this.decode(message);\r\n\r\n  if (Array.isArray(packet)) {\r\n    let len = packet.length;\r\n    for (let i = 0; i < len; i++) {\r\n      this._processInboundPacket(packet[i], message);\r\n    }\r\n  } else {\r\n    this._processInboundPacket(packet, message);\r\n  }\r\n};\r\n\r\nAGTransport.prototype._onError = function (error) {\r\n  this._onErrorHandler({error});\r\n};\r\n\r\nAGTransport.prototype._resetPingTimeout = function () {\r\n  if (this.pingTimeoutDisabled) {\r\n    return;\r\n  }\r\n\r\n  let now = (new Date()).getTime();\r\n  clearTimeout(this._pingTimeoutTicker);\r\n  this._pingTimeoutTicker = setTimeout(() => {\r\n    this._destroy(4000);\r\n    this.socket.close(4000);\r\n  }, this.pingTimeout);\r\n};\r\n\r\nAGTransport.prototype.clearAllListeners = function () {\r\n  this._onOpenHandler = function () {};\r\n  this._onOpenAbortHandler = function () {};\r\n  this._onCloseHandler = function () {};\r\n  this._onEventHandler = function () {};\r\n  this._onErrorHandler = function () {};\r\n  this._onInboundInvokeHandler  = function () {};\r\n  this._onInboundTransmitHandler = function () {};\r\n};\r\n\r\nAGTransport.prototype.startBatch = function () {\r\n  this.isBufferingBatch = true;\r\n  this._batchBuffer = [];\r\n};\r\n\r\nAGTransport.prototype.flushBatch = function () {\r\n  this.isBufferingBatch = false;\r\n  if (!this._batchBuffer.length) {\r\n    return;\r\n  }\r\n  let serializedBatch = this.serializeObject(this._batchBuffer);\r\n  this._batchBuffer = [];\r\n  this.send(serializedBatch);\r\n};\r\n\r\nAGTransport.prototype.cancelBatch = function () {\r\n  this.isBufferingBatch = false;\r\n  this._batchBuffer = [];\r\n};\r\n\r\nAGTransport.prototype.getBytesReceived = function () {\r\n  return this.socket.bytesReceived;\r\n};\r\n\r\nAGTransport.prototype.close = function (code, reason) {\r\n  if (this.state === this.OPEN || this.state === this.CONNECTING) {\r\n    code = code || 1000;\r\n    this._destroy(code, reason);\r\n    this.socket.close(code, reason);\r\n  }\r\n};\r\n\r\nAGTransport.prototype.transmitObject = function (eventObject) {\r\n  let simpleEventObject = {\r\n    event: eventObject.event,\r\n    data: eventObject.data\r\n  };\r\n\r\n  if (eventObject.callback) {\r\n    simpleEventObject.cid = eventObject.cid = this.callIdGenerator();\r\n    this._callbackMap[eventObject.cid] = eventObject;\r\n  }\r\n\r\n  this.sendObject(simpleEventObject);\r\n\r\n  return eventObject.cid || null;\r\n};\r\n\r\nAGTransport.prototype._handleEventAckTimeout = function (eventObject) {\r\n  if (eventObject.cid) {\r\n    delete this._callbackMap[eventObject.cid];\r\n  }\r\n  delete eventObject.timeout;\r\n\r\n  let callback = eventObject.callback;\r\n  if (callback) {\r\n    delete eventObject.callback;\r\n    let error = new TimeoutError(`Event response for \"${eventObject.event}\" timed out`);\r\n    callback.call(eventObject, error, eventObject);\r\n  }\r\n};\r\n\r\nAGTransport.prototype.transmit = function (event, data, options) {\r\n  let eventObject = {\r\n    event,\r\n    data\r\n  };\r\n\r\n  if (this.state === this.OPEN || options.force) {\r\n    this.transmitObject(eventObject);\r\n  }\r\n  return Promise.resolve();\r\n};\r\n\r\nAGTransport.prototype.invokeRaw = function (event, data, options, callback) {\r\n  let eventObject = {\r\n    event,\r\n    data,\r\n    callback\r\n  };\r\n\r\n  if (!options.noTimeout) {\r\n    eventObject.timeout = setTimeout(() => {\r\n      this._handleEventAckTimeout(eventObject);\r\n    }, this.options.ackTimeout);\r\n  }\r\n  let cid = null;\r\n  if (this.state === this.OPEN || options.force) {\r\n    cid = this.transmitObject(eventObject);\r\n  }\r\n  return cid;\r\n};\r\n\r\nAGTransport.prototype.invoke = function (event, data, options) {\r\n  return new Promise((resolve, reject) => {\r\n    this.invokeRaw(event, data, options, (err, data) => {\r\n      if (err) {\r\n        reject(err);\r\n        return;\r\n      }\r\n      resolve(data);\r\n    });\r\n  });\r\n};\r\n\r\nAGTransport.prototype.cancelPendingResponse = function (cid) {\r\n  delete this._callbackMap[cid];\r\n};\r\n\r\nAGTransport.prototype.decode = function (message) {\r\n  return this.codec.decode(message);\r\n};\r\n\r\nAGTransport.prototype.encode = function (object) {\r\n  return this.codec.encode(object);\r\n};\r\n\r\nAGTransport.prototype.send = function (data) {\r\n  if (this.socket.readyState !== this.socket.OPEN) {\r\n    this._destroy(1005);\r\n  } else {\r\n    this.socket.send(data);\r\n  }\r\n};\r\n\r\nAGTransport.prototype.serializeObject = function (object) {\r\n  let str;\r\n  try {\r\n    str = this.encode(object);\r\n  } catch (error) {\r\n    this._onError(error);\r\n    return null;\r\n  }\r\n  return str;\r\n};\r\n\r\nAGTransport.prototype.sendObject = function (object) {\r\n  if (this.isBufferingBatch) {\r\n    this._batchBuffer.push(object);\r\n    return;\r\n  }\r\n  let str = this.serializeObject(object);\r\n  if (str != null) {\r\n    this.send(str);\r\n  }\r\n};\r\n\r\nmodule.exports = AGTransport;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/lib/transport.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/lib/wait.js":
/*!*******************************************************!*\
  !*** ./node_modules/socketcluster-client/lib/wait.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("function wait(duration) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, duration);\r\n  });\r\n}\r\n\r\nmodule.exports = wait;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbGliL3dhaXQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbGliL3dhaXQuanM/YzczZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3YWl0KGR1cmF0aW9uKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgfSwgZHVyYXRpb24pO1xyXG4gIH0pO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHdhaXQ7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/lib/wait.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/lib/ws-browser.js":
/*!*************************************************************!*\
  !*** ./node_modules/socketcluster-client/lib/ws-browser.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("let global;\r\nif (typeof WorkerGlobalScope !== 'undefined') {\r\n  global = self;\r\n} else {\r\n  global = typeof window !== 'undefined' && window || (function() { return this; })();\r\n}\r\n\r\nconst WebSocket = global.WebSocket || global.MozWebSocket;\r\n\r\n/**\r\n * WebSocket constructor.\r\n *\r\n * The third `opts` options object gets ignored in web browsers, since it's\r\n * non-standard, and throws a TypeError if passed to the constructor.\r\n * See: https://github.com/einaros/ws/issues/227\r\n *\r\n * @param {String} uri\r\n * @param {Array} protocols (optional)\r\n * @param {Object} opts (optional)\r\n * @api public\r\n */\r\n\r\nfunction ws(uri, protocols, opts) {\r\n  let instance;\r\n  if (protocols) {\r\n    instance = new WebSocket(uri, protocols);\r\n  } else {\r\n    instance = new WebSocket(uri);\r\n  }\r\n  return instance;\r\n}\r\n\r\nif (WebSocket) ws.prototype = WebSocket.prototype;\r\n\r\nmodule.exports = WebSocket ? ws : null;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbGliL3dzLWJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGLG9FQUFvRSxjQUFjO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy9zb2NrZXRjbHVzdGVyLWNsaWVudC9saWIvd3MtYnJvd3Nlci5qcz9jYmZiIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBnbG9iYWw7XHJcbmlmICh0eXBlb2YgV29ya2VyR2xvYmFsU2NvcGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgZ2xvYmFsID0gc2VsZjtcclxufSBlbHNlIHtcclxuICBnbG9iYWwgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cgfHwgKGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSkoKTtcclxufVxyXG5cclxuY29uc3QgV2ViU29ja2V0ID0gZ2xvYmFsLldlYlNvY2tldCB8fCBnbG9iYWwuTW96V2ViU29ja2V0O1xyXG5cclxuLyoqXHJcbiAqIFdlYlNvY2tldCBjb25zdHJ1Y3Rvci5cclxuICpcclxuICogVGhlIHRoaXJkIGBvcHRzYCBvcHRpb25zIG9iamVjdCBnZXRzIGlnbm9yZWQgaW4gd2ViIGJyb3dzZXJzLCBzaW5jZSBpdCdzXHJcbiAqIG5vbi1zdGFuZGFyZCwgYW5kIHRocm93cyBhIFR5cGVFcnJvciBpZiBwYXNzZWQgdG8gdGhlIGNvbnN0cnVjdG9yLlxyXG4gKiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9laW5hcm9zL3dzL2lzc3Vlcy8yMjdcclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IHVyaVxyXG4gKiBAcGFyYW0ge0FycmF5fSBwcm90b2NvbHMgKG9wdGlvbmFsKVxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyAob3B0aW9uYWwpXHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gd3ModXJpLCBwcm90b2NvbHMsIG9wdHMpIHtcclxuICBsZXQgaW5zdGFuY2U7XHJcbiAgaWYgKHByb3RvY29scykge1xyXG4gICAgaW5zdGFuY2UgPSBuZXcgV2ViU29ja2V0KHVyaSwgcHJvdG9jb2xzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgaW5zdGFuY2UgPSBuZXcgV2ViU29ja2V0KHVyaSk7XHJcbiAgfVxyXG4gIHJldHVybiBpbnN0YW5jZTtcclxufVxyXG5cclxuaWYgKFdlYlNvY2tldCkgd3MucHJvdG90eXBlID0gV2ViU29ja2V0LnByb3RvdHlwZTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gV2ViU29ja2V0ID8gd3MgOiBudWxsO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/lib/ws-browser.js\n");

/***/ }),

/***/ "./node_modules/socketcluster-client/node_modules/async-stream-emitter/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/socketcluster-client/node_modules/async-stream-emitter/index.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const StreamDemux = __webpack_require__(/*! stream-demux */ \"./node_modules/stream-demux/index.js\");\n\nfunction AsyncStreamEmitter() {\n  this._listenerDemux = new StreamDemux();\n}\n\nAsyncStreamEmitter.prototype.emit = function (eventName, data) {\n  this._listenerDemux.write(eventName, data);\n};\n\nAsyncStreamEmitter.prototype.listener = function (eventName) {\n  return this._listenerDemux.stream(eventName);\n};\n\nAsyncStreamEmitter.prototype.closeListener = function (eventName) {\n  this._listenerDemux.close(eventName);\n};\n\nAsyncStreamEmitter.prototype.closeAllListeners = function () {\n  this._listenerDemux.closeAll();\n};\n\nAsyncStreamEmitter.prototype.getListenerConsumerStats = function (consumerId) {\n  return this._listenerDemux.getConsumerStats(consumerId);\n};\n\nAsyncStreamEmitter.prototype.getListenerConsumerStatsList = function (eventName) {\n  return this._listenerDemux.getConsumerStatsList(eventName);\n};\n\nAsyncStreamEmitter.prototype.getAllListenersConsumerStatsList = function () {\n  return this._listenerDemux.getConsumerStatsListAll();\n};\n\nAsyncStreamEmitter.prototype.getListenerConsumerCount = function (eventName) {\n  return this._listenerDemux.getConsumerCount(eventName);\n};\n\nAsyncStreamEmitter.prototype.getAllListenersConsumerCount = function () {\n  return this._listenerDemux.getConsumerCountAll();\n};\n\nAsyncStreamEmitter.prototype.killListener = function (eventName) {\n  this._listenerDemux.kill(eventName);\n};\n\nAsyncStreamEmitter.prototype.killAllListeners = function () {\n  this._listenerDemux.killAll();\n};\n\nAsyncStreamEmitter.prototype.killListenerConsumer = function (consumerId) {\n  this._listenerDemux.killConsumer(consumerId);\n};\n\nAsyncStreamEmitter.prototype.getListenerBackpressure = function (eventName) {\n  return this._listenerDemux.getBackpressure(eventName);\n};\n\nAsyncStreamEmitter.prototype.getAllListenersBackpressure = function () {\n  return this._listenerDemux.getBackpressureAll();\n};\n\nAsyncStreamEmitter.prototype.getListenerConsumerBackpressure = function (consumerId) {\n  return this._listenerDemux.getConsumerBackpressure(consumerId);\n};\n\nAsyncStreamEmitter.prototype.hasListenerConsumer = function (eventName, consumerId) {\n  return this._listenerDemux.hasConsumer(eventName, consumerId);\n};\n\nAsyncStreamEmitter.prototype.hasAnyListenerConsumer = function (consumerId) {\n  return this._listenerDemux.hasConsumerAll(consumerId);\n};\n\nmodule.exports = AsyncStreamEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbm9kZV9tb2R1bGVzL2FzeW5jLXN0cmVhbS1lbWl0dGVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLDBEQUFjOztBQUUxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvc29ja2V0Y2x1c3Rlci1jbGllbnQvbm9kZV9tb2R1bGVzL2FzeW5jLXN0cmVhbS1lbWl0dGVyL2luZGV4LmpzPzQ1NTciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU3RyZWFtRGVtdXggPSByZXF1aXJlKCdzdHJlYW0tZGVtdXgnKTtcblxuZnVuY3Rpb24gQXN5bmNTdHJlYW1FbWl0dGVyKCkge1xuICB0aGlzLl9saXN0ZW5lckRlbXV4ID0gbmV3IFN0cmVhbURlbXV4KCk7XG59XG5cbkFzeW5jU3RyZWFtRW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGRhdGEpIHtcbiAgdGhpcy5fbGlzdGVuZXJEZW11eC53cml0ZShldmVudE5hbWUsIGRhdGEpO1xufTtcblxuQXN5bmNTdHJlYW1FbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyRGVtdXguc3RyZWFtKGV2ZW50TmFtZSk7XG59O1xuXG5Bc3luY1N0cmVhbUVtaXR0ZXIucHJvdG90eXBlLmNsb3NlTGlzdGVuZXIgPSBmdW5jdGlvbiAoZXZlbnROYW1lKSB7XG4gIHRoaXMuX2xpc3RlbmVyRGVtdXguY2xvc2UoZXZlbnROYW1lKTtcbn07XG5cbkFzeW5jU3RyZWFtRW1pdHRlci5wcm90b3R5cGUuY2xvc2VBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX2xpc3RlbmVyRGVtdXguY2xvc2VBbGwoKTtcbn07XG5cbkFzeW5jU3RyZWFtRW1pdHRlci5wcm90b3R5cGUuZ2V0TGlzdGVuZXJDb25zdW1lclN0YXRzID0gZnVuY3Rpb24gKGNvbnN1bWVySWQpIHtcbiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyRGVtdXguZ2V0Q29uc3VtZXJTdGF0cyhjb25zdW1lcklkKTtcbn07XG5cbkFzeW5jU3RyZWFtRW1pdHRlci5wcm90b3R5cGUuZ2V0TGlzdGVuZXJDb25zdW1lclN0YXRzTGlzdCA9IGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyRGVtdXguZ2V0Q29uc3VtZXJTdGF0c0xpc3QoZXZlbnROYW1lKTtcbn07XG5cbkFzeW5jU3RyZWFtRW1pdHRlci5wcm90b3R5cGUuZ2V0QWxsTGlzdGVuZXJzQ29uc3VtZXJTdGF0c0xpc3QgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9saXN0ZW5lckRlbXV4LmdldENvbnN1bWVyU3RhdHNMaXN0QWxsKCk7XG59O1xuXG5Bc3luY1N0cmVhbUVtaXR0ZXIucHJvdG90eXBlLmdldExpc3RlbmVyQ29uc3VtZXJDb3VudCA9IGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyRGVtdXguZ2V0Q29uc3VtZXJDb3VudChldmVudE5hbWUpO1xufTtcblxuQXN5bmNTdHJlYW1FbWl0dGVyLnByb3RvdHlwZS5nZXRBbGxMaXN0ZW5lcnNDb25zdW1lckNvdW50ID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5fbGlzdGVuZXJEZW11eC5nZXRDb25zdW1lckNvdW50QWxsKCk7XG59O1xuXG5Bc3luY1N0cmVhbUVtaXR0ZXIucHJvdG90eXBlLmtpbGxMaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgdGhpcy5fbGlzdGVuZXJEZW11eC5raWxsKGV2ZW50TmFtZSk7XG59O1xuXG5Bc3luY1N0cmVhbUVtaXR0ZXIucHJvdG90eXBlLmtpbGxBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX2xpc3RlbmVyRGVtdXgua2lsbEFsbCgpO1xufTtcblxuQXN5bmNTdHJlYW1FbWl0dGVyLnByb3RvdHlwZS5raWxsTGlzdGVuZXJDb25zdW1lciA9IGZ1bmN0aW9uIChjb25zdW1lcklkKSB7XG4gIHRoaXMuX2xpc3RlbmVyRGVtdXgua2lsbENvbnN1bWVyKGNvbnN1bWVySWQpO1xufTtcblxuQXN5bmNTdHJlYW1FbWl0dGVyLnByb3RvdHlwZS5nZXRMaXN0ZW5lckJhY2twcmVzc3VyZSA9IGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyRGVtdXguZ2V0QmFja3ByZXNzdXJlKGV2ZW50TmFtZSk7XG59O1xuXG5Bc3luY1N0cmVhbUVtaXR0ZXIucHJvdG90eXBlLmdldEFsbExpc3RlbmVyc0JhY2twcmVzc3VyZSA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyRGVtdXguZ2V0QmFja3ByZXNzdXJlQWxsKCk7XG59O1xuXG5Bc3luY1N0cmVhbUVtaXR0ZXIucHJvdG90eXBlLmdldExpc3RlbmVyQ29uc3VtZXJCYWNrcHJlc3N1cmUgPSBmdW5jdGlvbiAoY29uc3VtZXJJZCkge1xuICByZXR1cm4gdGhpcy5fbGlzdGVuZXJEZW11eC5nZXRDb25zdW1lckJhY2twcmVzc3VyZShjb25zdW1lcklkKTtcbn07XG5cbkFzeW5jU3RyZWFtRW1pdHRlci5wcm90b3R5cGUuaGFzTGlzdGVuZXJDb25zdW1lciA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGNvbnN1bWVySWQpIHtcbiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyRGVtdXguaGFzQ29uc3VtZXIoZXZlbnROYW1lLCBjb25zdW1lcklkKTtcbn07XG5cbkFzeW5jU3RyZWFtRW1pdHRlci5wcm90b3R5cGUuaGFzQW55TGlzdGVuZXJDb25zdW1lciA9IGZ1bmN0aW9uIChjb25zdW1lcklkKSB7XG4gIHJldHVybiB0aGlzLl9saXN0ZW5lckRlbXV4Lmhhc0NvbnN1bWVyQWxsKGNvbnN1bWVySWQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBc3luY1N0cmVhbUVtaXR0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socketcluster-client/node_modules/async-stream-emitter/index.js\n");

/***/ }),

/***/ "./node_modules/stream-demux/demuxed-consumable-stream.js":
/*!****************************************************************!*\
  !*** ./node_modules/stream-demux/demuxed-consumable-stream.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ConsumableStream = __webpack_require__(/*! consumable-stream */ \"./node_modules/consumable-stream/index.js\");\n\nclass DemuxedConsumableStream extends ConsumableStream {\n  constructor(streamDemux, name) {\n    super();\n    this.name = name;\n    this._streamDemux = streamDemux;\n  }\n\n  createConsumer(timeout) {\n    return this._streamDemux.createConsumer(this.name, timeout);\n  }\n}\n\nmodule.exports = DemuxedConsumableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWRlbXV4L2RlbXV4ZWQtY29uc3VtYWJsZS1zdHJlYW0uanMuanMiLCJtYXBwaW5ncyI6IkFBQUEseUJBQXlCLG1CQUFPLENBQUMsb0VBQW1COztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL3N0cmVhbS1kZW11eC9kZW11eGVkLWNvbnN1bWFibGUtc3RyZWFtLmpzPzEzMzAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ29uc3VtYWJsZVN0cmVhbSA9IHJlcXVpcmUoJ2NvbnN1bWFibGUtc3RyZWFtJyk7XG5cbmNsYXNzIERlbXV4ZWRDb25zdW1hYmxlU3RyZWFtIGV4dGVuZHMgQ29uc3VtYWJsZVN0cmVhbSB7XG4gIGNvbnN0cnVjdG9yKHN0cmVhbURlbXV4LCBuYW1lKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuX3N0cmVhbURlbXV4ID0gc3RyZWFtRGVtdXg7XG4gIH1cblxuICBjcmVhdGVDb25zdW1lcih0aW1lb3V0KSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0cmVhbURlbXV4LmNyZWF0ZUNvbnN1bWVyKHRoaXMubmFtZSwgdGltZW91dCk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBEZW11eGVkQ29uc3VtYWJsZVN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/stream-demux/demuxed-consumable-stream.js\n");

/***/ }),

/***/ "./node_modules/stream-demux/index.js":
/*!********************************************!*\
  !*** ./node_modules/stream-demux/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const WritableConsumableStream = __webpack_require__(/*! writable-consumable-stream */ \"./node_modules/writable-consumable-stream/index.js\");\nconst DemuxedConsumableStream = __webpack_require__(/*! ./demuxed-consumable-stream */ \"./node_modules/stream-demux/demuxed-consumable-stream.js\");\n\nclass StreamDemux {\n  constructor() {\n    this._mainStream = new WritableConsumableStream();\n  }\n\n  write(streamName, value) {\n    this._mainStream.write({\n      stream: streamName,\n      data: {\n        value,\n        done: false\n      }\n    });\n  }\n\n  close(streamName, value) {\n    this._mainStream.write({\n      stream: streamName,\n      data: {\n        value,\n        done: true\n      }\n    });\n  }\n\n  closeAll(value) {\n    this._mainStream.close(value);\n  }\n\n  writeToConsumer(consumerId, value) {\n    this._mainStream.writeToConsumer(consumerId, {\n      consumerId,\n      data: {\n        value,\n        done: false\n      }\n    });\n  }\n\n  closeConsumer(consumerId, value) {\n    this._mainStream.closeConsumer(consumerId, {\n      consumerId,\n      data: {\n        value,\n        done: true\n      }\n    });\n  }\n\n  getConsumerStats(consumerId) {\n    return this._mainStream.getConsumerStats(consumerId);\n  }\n\n  getConsumerStatsList(streamName) {\n    let consumerList = this._mainStream.getConsumerStatsList();\n    return consumerList.filter((consumerStats) => {\n      return consumerStats.stream === streamName;\n    });\n  }\n\n  getConsumerStatsListAll() {\n    return this._mainStream.getConsumerStatsList();\n  }\n\n  kill(streamName, value) {\n    let consumerList = this.getConsumerStatsList(streamName);\n    let len = consumerList.length;\n    for (let i = 0; i < len; i++) {\n      this.killConsumer(consumerList[i].id, value);\n    }\n  }\n\n  killAll(value) {\n    this._mainStream.kill(value);\n  }\n\n  killConsumer(consumerId, value) {\n    this._mainStream.killConsumer(consumerId, value);\n  }\n\n  getBackpressure(streamName) {\n    let consumerList = this.getConsumerStatsList(streamName);\n    let len = consumerList.length;\n\n    let maxBackpressure = 0;\n    for (let i = 0; i < len; i++) {\n      let consumer = consumerList[i];\n      if (consumer.backpressure > maxBackpressure) {\n        maxBackpressure = consumer.backpressure;\n      }\n    }\n    return maxBackpressure;\n  }\n\n  getBackpressureAll() {\n    return this._mainStream.getBackpressure();\n  }\n\n  getConsumerBackpressure(consumerId) {\n    return this._mainStream.getConsumerBackpressure(consumerId);\n  }\n\n  hasConsumer(streamName, consumerId) {\n    let consumerStats = this._mainStream.getConsumerStats(consumerId);\n    return !!consumerStats && consumerStats.stream === streamName;\n  }\n\n  hasConsumerAll(consumerId) {\n    return this._mainStream.hasConsumer(consumerId);\n  }\n\n  getConsumerCount(streamName) {\n    return this.getConsumerStatsList(streamName).length;\n  }\n\n  getConsumerCountAll() {\n    return this.getConsumerStatsListAll().length;\n  }\n\n  createConsumer(streamName, timeout) {\n    let mainStreamConsumer = this._mainStream.createConsumer(timeout);\n\n    let consumerNext = mainStreamConsumer.next;\n    mainStreamConsumer.next = async function () {\n      while (true) {\n        let packet = await consumerNext.apply(this, arguments);\n        if (packet.value) {\n          if (\n            packet.value.stream === streamName ||\n            packet.value.consumerId === this.id\n          ) {\n            if (packet.value.data.done) {\n              this.return();\n            }\n            return packet.value.data;\n          }\n        }\n        if (packet.done) {\n          return packet;\n        }\n      }\n    };\n\n    let consumerGetStats = mainStreamConsumer.getStats;\n    mainStreamConsumer.getStats = function () {\n      let stats = consumerGetStats.apply(this, arguments);\n      stats.stream = streamName;\n      return stats;\n    };\n\n    let consumerApplyBackpressure = mainStreamConsumer.applyBackpressure;\n    mainStreamConsumer.applyBackpressure = function (packet) {\n      if (packet.value) {\n        if (\n          packet.value.stream === streamName ||\n          packet.value.consumerId === this.id\n        ) {\n          consumerApplyBackpressure.apply(this, arguments);\n\n          return;\n        }\n      }\n      if (packet.done) {\n        consumerApplyBackpressure.apply(this, arguments);\n      }\n    };\n\n    let consumerReleaseBackpressure = mainStreamConsumer.releaseBackpressure;\n    mainStreamConsumer.releaseBackpressure = function (packet) {\n      if (packet.value) {\n        if (\n          packet.value.stream === streamName ||\n          packet.value.consumerId === this.id\n        ) {\n          consumerReleaseBackpressure.apply(this, arguments);\n\n          return;\n        }\n      }\n      if (packet.done) {\n        consumerReleaseBackpressure.apply(this, arguments);\n      }\n    };\n\n    return mainStreamConsumer;\n  }\n\n  stream(streamName) {\n    return new DemuxedConsumableStream(this, streamName);\n  }\n}\n\nmodule.exports = StreamDemux;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/stream-demux/index.js\n");

/***/ }),

/***/ "./src/App.ts":
/*!********************!*\
  !*** ./src/App.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.App = void 0;\nvar OptionsManager_1 = __webpack_require__(/*! ./OptionsManager */ \"./src/OptionsManager.ts\");\nvar Auth_1 = __webpack_require__(/*! ./Auth */ \"./src/Auth.ts\");\nvar jwt_1 = __webpack_require__(/*! ./utils/jwt */ \"./src/utils/jwt.ts\");\nvar App = /** @class */ (function () {\n    function App() {\n        this.options = OptionsManager_1.OptionsManager.getInstance().get();\n        this.auth = Auth_1.Auth.getInstance();\n        this.handleAppId();\n    }\n    App.getInstance = function () {\n        if (!this.instance) {\n            this.instance = new App();\n        }\n        return this.instance;\n    };\n    App.prototype.getId = function () {\n        return this.id;\n    };\n    App.prototype.setId = function (id) {\n        this.id = id;\n    };\n    App.prototype.extractAndSetId = function (publicKey) {\n        var appId = publicKey.split(\".\")[0];\n        this.setId(appId);\n        return this.id;\n    };\n    App.prototype.handleAppId = function () {\n        if (typeof this.getId() === \"undefined\") {\n            var authMethod = this.auth.getAuthMethod();\n            if (authMethod === \"Bearer\" &&\n                typeof this.options.authTokenName !== \"undefined\") {\n                var token = (0, jwt_1.getSignedAuthToken)(this.options.authTokenName);\n                var payload = (0, jwt_1.getJwtPayload)(token);\n                if (payload) {\n                    this.extractAndSetId(payload.sub);\n                }\n            }\n            else if (authMethod === \"Basic\" &&\n                typeof this.options.key !== \"undefined\") {\n                this.extractAndSetId(this.options.key);\n            }\n        }\n    };\n    App.prototype.destroy = function () {\n        this.setId(undefined);\n        App.instance = undefined;\n    };\n    return App;\n}());\nexports.App = App;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQXBwLnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFdBQVc7QUFDWCx1QkFBdUIsbUJBQU8sQ0FBQyxpREFBa0I7QUFDakQsYUFBYSxtQkFBTyxDQUFDLDZCQUFRO0FBQzdCLFlBQVksbUJBQU8sQ0FBQyx1Q0FBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsV0FBVyIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvQXBwLnRzPzY0N2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFwcCA9IHZvaWQgMDtcbnZhciBPcHRpb25zTWFuYWdlcl8xID0gcmVxdWlyZShcIi4vT3B0aW9uc01hbmFnZXJcIik7XG52YXIgQXV0aF8xID0gcmVxdWlyZShcIi4vQXV0aFwiKTtcbnZhciBqd3RfMSA9IHJlcXVpcmUoXCIuL3V0aWxzL2p3dFwiKTtcbnZhciBBcHAgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQXBwKCkge1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBPcHRpb25zTWFuYWdlcl8xLk9wdGlvbnNNYW5hZ2VyLmdldEluc3RhbmNlKCkuZ2V0KCk7XG4gICAgICAgIHRoaXMuYXV0aCA9IEF1dGhfMS5BdXRoLmdldEluc3RhbmNlKCk7XG4gICAgICAgIHRoaXMuaGFuZGxlQXBwSWQoKTtcbiAgICB9XG4gICAgQXBwLmdldEluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgQXBwKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2U7XG4gICAgfTtcbiAgICBBcHAucHJvdG90eXBlLmdldElkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZDtcbiAgICB9O1xuICAgIEFwcC5wcm90b3R5cGUuc2V0SWQgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgIH07XG4gICAgQXBwLnByb3RvdHlwZS5leHRyYWN0QW5kU2V0SWQgPSBmdW5jdGlvbiAocHVibGljS2V5KSB7XG4gICAgICAgIHZhciBhcHBJZCA9IHB1YmxpY0tleS5zcGxpdChcIi5cIilbMF07XG4gICAgICAgIHRoaXMuc2V0SWQoYXBwSWQpO1xuICAgICAgICByZXR1cm4gdGhpcy5pZDtcbiAgICB9O1xuICAgIEFwcC5wcm90b3R5cGUuaGFuZGxlQXBwSWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5nZXRJZCgpID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB2YXIgYXV0aE1ldGhvZCA9IHRoaXMuYXV0aC5nZXRBdXRoTWV0aG9kKCk7XG4gICAgICAgICAgICBpZiAoYXV0aE1ldGhvZCA9PT0gXCJCZWFyZXJcIiAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiB0aGlzLm9wdGlvbnMuYXV0aFRva2VuTmFtZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgIHZhciB0b2tlbiA9ICgwLCBqd3RfMS5nZXRTaWduZWRBdXRoVG9rZW4pKHRoaXMub3B0aW9ucy5hdXRoVG9rZW5OYW1lKTtcbiAgICAgICAgICAgICAgICB2YXIgcGF5bG9hZCA9ICgwLCBqd3RfMS5nZXRKd3RQYXlsb2FkKSh0b2tlbik7XG4gICAgICAgICAgICAgICAgaWYgKHBheWxvYWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5leHRyYWN0QW5kU2V0SWQocGF5bG9hZC5zdWIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGF1dGhNZXRob2QgPT09IFwiQmFzaWNcIiAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiB0aGlzLm9wdGlvbnMua2V5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5leHRyYWN0QW5kU2V0SWQodGhpcy5vcHRpb25zLmtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEFwcC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5zZXRJZCh1bmRlZmluZWQpO1xuICAgICAgICBBcHAuaW5zdGFuY2UgPSB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICByZXR1cm4gQXBwO1xufSgpKTtcbmV4cG9ydHMuQXBwID0gQXBwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/App.ts\n");

/***/ }),

/***/ "./src/Auth.ts":
/*!*********************!*\
  !*** ./src/Auth.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Auth = void 0;\nvar jwt_1 = __webpack_require__(/*! ./utils/jwt */ \"./src/utils/jwt.ts\");\nvar time_1 = __webpack_require__(/*! ./utils/time */ \"./src/utils/time.ts\");\nvar Http_1 = __webpack_require__(/*! ./Http */ \"./src/Http.ts\");\nvar WebSocket_1 = __webpack_require__(/*! ./WebSocket */ \"./src/WebSocket.ts\");\nvar OptionsManager_1 = __webpack_require__(/*! ./OptionsManager */ \"./src/OptionsManager.ts\");\nvar Auth = /** @class */ (function () {\n    function Auth() {\n        this.ws = WebSocket_1.WebSocket.getInstance();\n        this.options = OptionsManager_1.OptionsManager.getInstance().get();\n        this.http = new Http_1.Http();\n        this.client = this.http.getClient();\n    }\n    Auth.getInstance = function () {\n        if (!this.instance) {\n            this.instance = new Auth();\n        }\n        return this.instance;\n    };\n    Auth.prototype.getAuthMethod = function () {\n        if (typeof this.options.authUrl !== \"undefined\" &&\n            this.options.authUrl) {\n            return \"Bearer\";\n        }\n        else if (typeof this.options.key !== \"undefined\" &&\n            this.options.key) {\n            return \"Basic\";\n        }\n        return false;\n    };\n    Auth.prototype.getKeyOrToken = function () {\n        if (!this.options.authTokenName) {\n            throw new Error(\"Auth token name can not be empty.\");\n        }\n        if (this.options.authUrl) {\n            return (0, jwt_1.getSignedAuthToken)(this.options.authTokenName);\n        }\n        else if (this.options.key) {\n            return this.getKeyBase64();\n        }\n        return false;\n    };\n    Auth.prototype.getKey = function () {\n        if (this.options.key) {\n            return this.options.key;\n        }\n        throw new Error(\"API key has not been specified.\");\n    };\n    Auth.prototype.getKeyBase64 = function () {\n        return Buffer.from(this.getKey()).toString(\"base64\");\n    };\n    Auth.prototype.makeAuthorizationHeader = function () {\n        if (this.getAuthMethod() && this.getKeyOrToken()) {\n            return \"\".concat(this.getAuthMethod(), \" \").concat(this.getKeyOrToken());\n        }\n        throw new Error(\"Auth method has not been specified.\");\n    };\n    Auth.prototype.basicAuth = function () {\n        var socket = this.ws.getSocket();\n        var credentials = {};\n        credentials.key = this.getKey();\n        socket.invoke(\"#basicAuth\", credentials);\n    };\n    Auth.prototype.authenticate = function (body, headers) {\n        if (body === void 0) { body = {}; }\n        if (headers === void 0) { headers = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var socket, authMethod, tokenData;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.ws) {\n                            this.ws = WebSocket_1.WebSocket.getInstance();\n                        }\n                        socket = this.ws.getSocket();\n                        authMethod = this.getAuthMethod();\n                        if (!(authMethod === \"Basic\")) return [3 /*break*/, 1];\n                        this.basicAuth();\n                        return [3 /*break*/, 3];\n                    case 1:\n                        if (!(authMethod === \"Bearer\")) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.requestToken()];\n                    case 2:\n                        tokenData = _a.sent();\n                        socket.authenticate(tokenData.token);\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Auth.prototype.deauthenticate = function () {\n        var socket = this.ws.getSocket();\n        this.requestRevoke();\n        socket.deauthenticate();\n    };\n    Auth.prototype.requestToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.options.authUrl && this.options.authTokenName)) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.client.post(this.options.authUrl, this.options.authBody, { headers: this.options.authHeaders })];\n                    case 2:\n                        response = _a.sent();\n                        localStorage.setItem(this.options.authTokenName, response.data.data.token);\n                        return [2 /*return*/, response.data.data];\n                    case 3:\n                        error_1 = _a.sent();\n                        console.error(\"Error in requestToken:\", error_1);\n                        throw error_1;\n                    case 4: throw new Error(\"Auth URL has not been provided.\");\n                }\n            });\n        });\n    };\n    Auth.prototype.requestRefresh = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var body, response, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.options.refreshUrl && this.options.authTokenName)) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        body = __assign(__assign({}, this.options.authBody), {\n                            token: (0, jwt_1.getSignedAuthToken)(this.options.authTokenName),\n                        });\n                        return [4 /*yield*/, this.client.post(this.options.refreshUrl, body, {\n                                headers: this.options.authHeaders,\n                            })];\n                    case 2:\n                        response = _a.sent();\n                        localStorage.setItem(this.options.authTokenName, response.data.data.token);\n                        return [2 /*return*/, response.data.data];\n                    case 3:\n                        error_2 = _a.sent();\n                        console.error(\"Error in requestRefresh:\", error_2);\n                        throw error_2;\n                    case 4: throw new Error(\"Refresh URL has not been provided.\");\n                }\n            });\n        });\n    };\n    Auth.prototype.requestRevoke = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var body, response, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.options.revokeUrl && this.options.authTokenName)) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        body = __assign(__assign({}, this.options.authBody), {\n                            token: (0, jwt_1.getSignedAuthToken)(this.options.authTokenName),\n                        });\n                        return [4 /*yield*/, this.client.post(this.options.revokeUrl, body, {\n                                headers: this.options.authHeaders,\n                            })];\n                    case 2:\n                        response = _a.sent();\n                        localStorage.removeItem(this.options.authTokenName);\n                        return [2 /*return*/, response.data.data];\n                    case 3:\n                        error_3 = _a.sent();\n                        console.error(\"Error in requestRevoke:\", error_3);\n                        throw error_3;\n                    case 4: throw new Error(\"Revoke URL has not been provided.\");\n                }\n            });\n        });\n    };\n    Auth.prototype.startRefreshTokenInterval = function () {\n        var _this = this;\n        if (this.getAuthMethod() === \"Bearer\") {\n            // Stop if any refresh token interval is exist\n            this.stopRefreshTokenInterval();\n            this.refreshTokenIntervalId = setInterval(function () {\n                if (_this.options.authTokenName) {\n                    var token = (0, jwt_1.getSignedAuthToken)(_this.options.authTokenName);\n                    var authToken = (0, jwt_1.getJwtPayload)(token);\n                    if (authToken) {\n                        var remainingSeconds = (0, time_1.getRemainingSeconds)(authToken.exp);\n                        if (remainingSeconds <= 60) {\n                            _this.requestRefresh();\n                        }\n                    }\n                }\n            }, this.options.refreshTokenInterval);\n        }\n    };\n    Auth.prototype.stopRefreshTokenInterval = function () {\n        if (this.refreshTokenIntervalId) {\n            clearInterval(this.refreshTokenIntervalId);\n        }\n    };\n    Auth.prototype.destroy = function () {\n        this.stopRefreshTokenInterval();\n        if (this.options.authTokenName) {\n            localStorage.removeItem(this.options.authTokenName);\n        }\n        Auth.instance = undefined;\n    };\n    return Auth;\n}());\nexports.Auth = Auth;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Auth.ts\n");

/***/ }),

/***/ "./src/ChannelManager.ts":
/*!*******************************!*\
  !*** ./src/ChannelManager.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ChannelManager = void 0;\nvar ChannelManager = /** @class */ (function () {\n    function ChannelManager() {\n        this.previousState = \"initialized\";\n        this.currentState = \"initialized\";\n    }\n    ChannelManager.prototype.stateChangeObject = function (state, event, reason) {\n        var previousState = this.currentState;\n        this.currentState = state;\n        this.previousState = previousState;\n        return __assign(__assign({ current: state, previous: this.previousState }, (event !== undefined && { event: event })), (reason !== undefined && { reason: reason }));\n    };\n    return ChannelManager;\n}());\nexports.ChannelManager = ChannelManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2hhbm5lbE1hbmFnZXIudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDhDQUE4Qyw0QkFBNEIsY0FBYywrQkFBK0IsZ0JBQWdCO0FBQzFLO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL3NyYy9DaGFubmVsTWFuYWdlci50cz9jZDE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ2hhbm5lbE1hbmFnZXIgPSB2b2lkIDA7XG52YXIgQ2hhbm5lbE1hbmFnZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ2hhbm5lbE1hbmFnZXIoKSB7XG4gICAgICAgIHRoaXMucHJldmlvdXNTdGF0ZSA9IFwiaW5pdGlhbGl6ZWRcIjtcbiAgICAgICAgdGhpcy5jdXJyZW50U3RhdGUgPSBcImluaXRpYWxpemVkXCI7XG4gICAgfVxuICAgIENoYW5uZWxNYW5hZ2VyLnByb3RvdHlwZS5zdGF0ZUNoYW5nZU9iamVjdCA9IGZ1bmN0aW9uIChzdGF0ZSwgZXZlbnQsIHJlYXNvbikge1xuICAgICAgICB2YXIgcHJldmlvdXNTdGF0ZSA9IHRoaXMuY3VycmVudFN0YXRlO1xuICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZSA9IHN0YXRlO1xuICAgICAgICB0aGlzLnByZXZpb3VzU3RhdGUgPSBwcmV2aW91c1N0YXRlO1xuICAgICAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oeyBjdXJyZW50OiBzdGF0ZSwgcHJldmlvdXM6IHRoaXMucHJldmlvdXNTdGF0ZSB9LCAoZXZlbnQgIT09IHVuZGVmaW5lZCAmJiB7IGV2ZW50OiBldmVudCB9KSksIChyZWFzb24gIT09IHVuZGVmaW5lZCAmJiB7IHJlYXNvbjogcmVhc29uIH0pKTtcbiAgICB9O1xuICAgIHJldHVybiBDaGFubmVsTWFuYWdlcjtcbn0oKSk7XG5leHBvcnRzLkNoYW5uZWxNYW5hZ2VyID0gQ2hhbm5lbE1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ChannelManager.ts\n");

/***/ }),

/***/ "./src/Channels.ts":
/*!*************************!*\
  !*** ./src/Channels.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Channels = void 0;\nvar RESTChannel_1 = __webpack_require__(/*! ./RESTChannel */ \"./src/RESTChannel.ts\");\nvar RealTimeChannel_1 = __webpack_require__(/*! ./RealTimeChannel */ \"./src/RealTimeChannel.ts\");\nvar Channels = /** @class */ (function () {\n    function Channels(creatorClassName) {\n        this.channelsMap = new Map();\n        this.creatorClassName = creatorClassName;\n    }\n    Channels.prototype.get = function (channelName) {\n        if (!this.channelsMap.has(channelName)) {\n            // Check if it's a RealTime or REST interface\n            if (this.creatorClassName === \"RealTime\") {\n                this.channelsMap.set(channelName, new RealTimeChannel_1.RealTimeChannel(channelName));\n            }\n            else {\n                this.channelsMap.set(channelName, new RESTChannel_1.RESTChannel(channelName));\n            }\n        }\n        return this.channelsMap.get(channelName);\n    };\n    return Channels;\n}());\nexports.Channels = Channels;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2hhbm5lbHMudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLG9CQUFvQixtQkFBTyxDQUFDLDJDQUFlO0FBQzNDLHdCQUF3QixtQkFBTyxDQUFDLG1EQUFtQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL3NyYy9DaGFubmVscy50cz8wN2Q0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DaGFubmVscyA9IHZvaWQgMDtcbnZhciBSRVNUQ2hhbm5lbF8xID0gcmVxdWlyZShcIi4vUkVTVENoYW5uZWxcIik7XG52YXIgUmVhbFRpbWVDaGFubmVsXzEgPSByZXF1aXJlKFwiLi9SZWFsVGltZUNoYW5uZWxcIik7XG52YXIgQ2hhbm5lbHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ2hhbm5lbHMoY3JlYXRvckNsYXNzTmFtZSkge1xuICAgICAgICB0aGlzLmNoYW5uZWxzTWFwID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLmNyZWF0b3JDbGFzc05hbWUgPSBjcmVhdG9yQ2xhc3NOYW1lO1xuICAgIH1cbiAgICBDaGFubmVscy5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGNoYW5uZWxOYW1lKSB7XG4gICAgICAgIGlmICghdGhpcy5jaGFubmVsc01hcC5oYXMoY2hhbm5lbE5hbWUpKSB7XG4gICAgICAgICAgICAvLyBDaGVjayBpZiBpdCdzIGEgUmVhbFRpbWUgb3IgUkVTVCBpbnRlcmZhY2VcbiAgICAgICAgICAgIGlmICh0aGlzLmNyZWF0b3JDbGFzc05hbWUgPT09IFwiUmVhbFRpbWVcIikge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbm5lbHNNYXAuc2V0KGNoYW5uZWxOYW1lLCBuZXcgUmVhbFRpbWVDaGFubmVsXzEuUmVhbFRpbWVDaGFubmVsKGNoYW5uZWxOYW1lKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5uZWxzTWFwLnNldChjaGFubmVsTmFtZSwgbmV3IFJFU1RDaGFubmVsXzEuUkVTVENoYW5uZWwoY2hhbm5lbE5hbWUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jaGFubmVsc01hcC5nZXQoY2hhbm5lbE5hbWUpO1xuICAgIH07XG4gICAgcmV0dXJuIENoYW5uZWxzO1xufSgpKTtcbmV4cG9ydHMuQ2hhbm5lbHMgPSBDaGFubmVscztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Channels.ts\n");

/***/ }),

/***/ "./src/Connection.ts":
/*!***************************!*\
  !*** ./src/Connection.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connection = void 0;\nvar App_1 = __webpack_require__(/*! ./App */ \"./src/App.ts\");\nvar DefaultConnectionEvents_1 = __webpack_require__(/*! ./defaults/DefaultConnectionEvents */ \"./src/defaults/DefaultConnectionEvents.ts\");\nvar WebSocket_1 = __webpack_require__(/*! ./WebSocket */ \"./src/WebSocket.ts\");\nvar ConnectionManager_1 = __webpack_require__(/*! ./ConnectionManager */ \"./src/ConnectionManager.ts\");\nvar Auth_1 = __webpack_require__(/*! ./Auth */ \"./src/Auth.ts\");\nvar OptionsManager_1 = __webpack_require__(/*! ./OptionsManager */ \"./src/OptionsManager.ts\");\nvar EventEmitter = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nvar Connection = /** @class */ (function () {\n    function Connection() {\n        this.events = new EventEmitter();\n        this.manager = new ConnectionManager_1.ConnectionManager();\n        this.options = OptionsManager_1.OptionsManager.getInstance().get();\n        this.ws = WebSocket_1.WebSocket.getInstance();\n        this.app = App_1.App.getInstance();\n        this.auth = Auth_1.Auth.getInstance();\n        if (this.options.autoConnect) {\n            this.connect();\n        }\n    }\n    Object.defineProperty(Connection.prototype, \"state\", {\n        get: function () {\n            return this.manager.currentState;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"id\", {\n        get: function () {\n            var socket = this.ws.getSocket();\n            return socket.id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Connection.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var socket;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        socket = this.ws.getSocket();\n                        if (!socket) return [3 /*break*/, 2];\n                        return [4 /*yield*/, socket.connect()];\n                    case 1:\n                        _a.sent();\n                        this.handleConnectingEvent()\n                            .then(function () { return _this.handleConnectEvent(); })\n                            .then(function () { return _this.handleAuthenticateEvent(); });\n                        this.handleDeauthenticateEvent();\n                        this.handleCloseEvent();\n                        this.handleErrorEvent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Connection.prototype.handleConnectingEvent = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.events.emit(\"connecting\", _this.manager.stateChangeObject(\"connecting\"));\n            resolve();\n        });\n    };\n    Connection.prototype.handleConnectEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var socket;\n            var _this = this;\n            return __generator(this, function (_a) {\n                socket = this.ws.getSocket();\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, event_1, e_1_1;\n                        var _d, e_1, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(socket.listener(\"connect\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    event_1 = _f;\n                                    if (event_1.isAuthenticated) {\n                                        this.events.emit(\"connected\", this.manager.stateChangeObject(\"connected\"));\n                                    }\n                                    else if (this.options.autoAuthenticate &&\n                                        !event_1.isAuthenticated) {\n                                        this.auth.authenticate();\n                                    }\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_1_1 = _g.sent();\n                                    e_1 = { error: e_1_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_1) throw e_1.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    Connection.prototype.handleAuthenticateEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var socket;\n            var _this = this;\n            return __generator(this, function (_a) {\n                socket = this.ws.getSocket();\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, event_2, e_2_1;\n                        var _d, e_2, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(socket.listener(\"authenticate\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    event_2 = _f;\n                                    this.events.emit(\"connected\", this.manager.stateChangeObject(\"connected\"));\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_2_1 = _g.sent();\n                                    e_2 = { error: e_2_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_2) throw e_2.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    Connection.prototype.handleDeauthenticateEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var socket;\n            var _this = this;\n            return __generator(this, function (_a) {\n                socket = this.ws.getSocket();\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, event_3, e_3_1;\n                        var _d, e_3, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(socket.listener(\"deauthenticate\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    event_3 = _f;\n                                    if (this.options.autoAuthenticate) {\n                                        this.auth.authenticate();\n                                    }\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_3_1 = _g.sent();\n                                    e_3 = { error: e_3_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_3) throw e_3.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    Connection.prototype.handleCloseEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var socket;\n            var _this = this;\n            return __generator(this, function (_a) {\n                socket = this.ws.getSocket();\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, event_4, e_4_1;\n                        var _d, e_4, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(socket.listener(\"close\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    event_4 = _f;\n                                    this.events.emit(\"closed\", this.manager.stateChangeObject(\"closed\"));\n                                    socket.closeAllListeners();\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_4_1 = _g.sent();\n                                    e_4 = { error: e_4_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_4) throw e_4.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    Connection.prototype.handleErrorEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var socket;\n            var _this = this;\n            return __generator(this, function (_a) {\n                socket = this.ws.getSocket();\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, error, e_5_1;\n                        var _d, e_5, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(socket.listener(\"error\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    error = _f;\n                                    this.events.emit(\"failed\", this.manager.stateChangeObject(\"failed\", \"failed\", error));\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_5_1 = _g.sent();\n                                    e_5 = { error: e_5_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_5) throw e_5.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    Connection.prototype.close = function () {\n        var socket = this.ws.getSocket();\n        this.events.emit(\"closing\", this.manager.stateChangeObject(\"closing\"));\n        socket.disconnect();\n    };\n    // Implementation of the on method\n    Connection.prototype.on = function (arg1, arg2) {\n        var _this = this;\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n            this.events.on(arg1, arg2);\n        }\n        else if (Array.isArray(arg1) && typeof arg2 === \"function\") {\n            // Overload 2\n            arg1.forEach(function (eventName) {\n                _this.events.on(eventName, arg2);\n            });\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 3\n            DefaultConnectionEvents_1.DefaultConnectionEvents.forEach(function (eventName) {\n                _this.events.on(eventName, arg1);\n            });\n        }\n        else {\n            throw new Error(\"Invalid arguments\");\n        }\n    };\n    Connection.prototype.once = function (arg1, arg2) {\n        var _this = this;\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n            this.events.once(arg1, arg2);\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 2\n            DefaultConnectionEvents_1.DefaultConnectionEvents.forEach(function (eventName) {\n                _this.events.once(eventName, arg1);\n            });\n        }\n        else {\n            throw new Error(\"Invalid arguments\");\n        }\n    };\n    Connection.prototype.off = function (arg1, arg2) {\n        var _this = this;\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n            this.events.off(arg1, arg2);\n        }\n        else if (Array.isArray(arg1) && typeof arg2 === \"function\") {\n            // Overload 2\n            arg1.forEach(function (eventName) {\n                _this.events.off(eventName, arg2);\n            });\n        }\n        else if (typeof arg1 === \"string\" && arg2 === undefined) {\n            // Overload 3\n            this.events.off(arg1);\n        }\n        else if (Array.isArray(arg1) && arg2 === undefined) {\n            // Overload 4\n            this.events.removeAllListeners(arg1);\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 5\n            this.events.off(arg1);\n        }\n        else if (arg1 === undefined && arg2 === undefined) {\n            // Overload 6\n            this.events.removeAllListeners();\n        }\n        else {\n            throw new Error(\"Invalid arguments\");\n        }\n    };\n    Connection.prototype.destroy = function () {\n        this.ws.destroy();\n        this.off();\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Connection.ts\n");

/***/ }),

/***/ "./src/ConnectionManager.ts":
/*!**********************************!*\
  !*** ./src/ConnectionManager.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionManager = void 0;\nvar ConnectionManager = /** @class */ (function () {\n    function ConnectionManager() {\n        this.previousState = \"initialized\";\n        this.currentState = \"initialized\";\n    }\n    ConnectionManager.prototype.stateChangeObject = function (state, event, reason) {\n        var previousState = this.currentState;\n        this.currentState = state;\n        this.previousState = previousState;\n        return __assign(__assign({ current: state, previous: this.previousState }, (event !== undefined && { event: event })), (reason !== undefined && { reason: reason }));\n    };\n    return ConnectionManager;\n}());\nexports.ConnectionManager = ConnectionManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29ubmVjdGlvbk1hbmFnZXIudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDhDQUE4Qyw0QkFBNEIsY0FBYywrQkFBK0IsZ0JBQWdCO0FBQzFLO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL3NyYy9Db25uZWN0aW9uTWFuYWdlci50cz9jMGIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29ubmVjdGlvbk1hbmFnZXIgPSB2b2lkIDA7XG52YXIgQ29ubmVjdGlvbk1hbmFnZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29ubmVjdGlvbk1hbmFnZXIoKSB7XG4gICAgICAgIHRoaXMucHJldmlvdXNTdGF0ZSA9IFwiaW5pdGlhbGl6ZWRcIjtcbiAgICAgICAgdGhpcy5jdXJyZW50U3RhdGUgPSBcImluaXRpYWxpemVkXCI7XG4gICAgfVxuICAgIENvbm5lY3Rpb25NYW5hZ2VyLnByb3RvdHlwZS5zdGF0ZUNoYW5nZU9iamVjdCA9IGZ1bmN0aW9uIChzdGF0ZSwgZXZlbnQsIHJlYXNvbikge1xuICAgICAgICB2YXIgcHJldmlvdXNTdGF0ZSA9IHRoaXMuY3VycmVudFN0YXRlO1xuICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZSA9IHN0YXRlO1xuICAgICAgICB0aGlzLnByZXZpb3VzU3RhdGUgPSBwcmV2aW91c1N0YXRlO1xuICAgICAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oeyBjdXJyZW50OiBzdGF0ZSwgcHJldmlvdXM6IHRoaXMucHJldmlvdXNTdGF0ZSB9LCAoZXZlbnQgIT09IHVuZGVmaW5lZCAmJiB7IGV2ZW50OiBldmVudCB9KSksIChyZWFzb24gIT09IHVuZGVmaW5lZCAmJiB7IHJlYXNvbjogcmVhc29uIH0pKTtcbiAgICB9O1xuICAgIHJldHVybiBDb25uZWN0aW9uTWFuYWdlcjtcbn0oKSk7XG5leHBvcnRzLkNvbm5lY3Rpb25NYW5hZ2VyID0gQ29ubmVjdGlvbk1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ConnectionManager.ts\n");

/***/ }),

/***/ "./src/Http.ts":
/*!*********************!*\
  !*** ./src/Http.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Http = void 0;\nvar axios_1 = __importDefault(__webpack_require__(/*! axios */ \"./node_modules/axios/dist/browser/axios.cjs\"));\nvar Http = /** @class */ (function () {\n    function Http() {\n        this.baseUrl = \"https://rest.pubq.dev\";\n        this.client = axios_1.default.create({\n            baseURL: this.baseUrl,\n        });\n    }\n    Http.prototype.getClient = function () {\n        return this.client;\n    };\n    return Http;\n}());\nexports.Http = Http;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvSHR0cC50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWiw4QkFBOEIsbUJBQU8sQ0FBQywwREFBTztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvSHR0cC50cz81ZDIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IdHRwID0gdm9pZCAwO1xudmFyIGF4aW9zXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImF4aW9zXCIpKTtcbnZhciBIdHRwID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEh0dHAoKSB7XG4gICAgICAgIHRoaXMuYmFzZVVybCA9IFwiaHR0cHM6Ly9yZXN0LnB1YnEuaW9cIjtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBheGlvc18xLmRlZmF1bHQuY3JlYXRlKHtcbiAgICAgICAgICAgIGJhc2VVUkw6IHRoaXMuYmFzZVVybCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIEh0dHAucHJvdG90eXBlLmdldENsaWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xpZW50O1xuICAgIH07XG4gICAgcmV0dXJuIEh0dHA7XG59KCkpO1xuZXhwb3J0cy5IdHRwID0gSHR0cDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Http.ts\n");

/***/ }),

/***/ "./src/Message.ts":
/*!************************!*\
  !*** ./src/Message.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Message = void 0;\nvar Message = /** @class */ (function () {\n    function Message(msg) {\n        this.id = msg.id;\n        this.clientId = msg.clientId;\n        this.connectionId = msg.connectionId;\n        this.data = msg.data;\n        this.channel = msg.channel;\n    }\n    Message.prototype.toObject = function () {\n        var obj = {};\n        if (this.id !== undefined) {\n            obj.id = this.id;\n        }\n        if (this.clientId !== undefined) {\n            obj.clientId = this.clientId;\n        }\n        if (this.connectionId !== undefined) {\n            obj.connectionId = this.connectionId;\n        }\n        if (this.data !== undefined) {\n            obj.data = this.data;\n        }\n        if (this.channel !== undefined) {\n            obj.channel = this.channel;\n        }\n        return obj;\n    };\n    return Message;\n}());\nexports.Message = Message;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvTWVzc2FnZS50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvTWVzc2FnZS50cz8zNTdmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZXNzYWdlID0gdm9pZCAwO1xudmFyIE1lc3NhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWVzc2FnZShtc2cpIHtcbiAgICAgICAgdGhpcy5pZCA9IG1zZy5pZDtcbiAgICAgICAgdGhpcy5jbGllbnRJZCA9IG1zZy5jbGllbnRJZDtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uSWQgPSBtc2cuY29ubmVjdGlvbklkO1xuICAgICAgICB0aGlzLmRhdGEgPSBtc2cuZGF0YTtcbiAgICAgICAgdGhpcy5jaGFubmVsID0gbXNnLmNoYW5uZWw7XG4gICAgfVxuICAgIE1lc3NhZ2UucHJvdG90eXBlLnRvT2JqZWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgb2JqID0ge307XG4gICAgICAgIGlmICh0aGlzLmlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG9iai5pZCA9IHRoaXMuaWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY2xpZW50SWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgb2JqLmNsaWVudElkID0gdGhpcy5jbGllbnRJZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb25uZWN0aW9uSWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgb2JqLmNvbm5lY3Rpb25JZCA9IHRoaXMuY29ubmVjdGlvbklkO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmRhdGEgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgb2JqLmRhdGEgPSB0aGlzLmRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY2hhbm5lbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBvYmouY2hhbm5lbCA9IHRoaXMuY2hhbm5lbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH07XG4gICAgcmV0dXJuIE1lc3NhZ2U7XG59KCkpO1xuZXhwb3J0cy5NZXNzYWdlID0gTWVzc2FnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Message.ts\n");

/***/ }),

/***/ "./src/OptionsManager.ts":
/*!*******************************!*\
  !*** ./src/OptionsManager.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OptionsManager = void 0;\nvar DefaultCommonOptions_1 = __webpack_require__(/*! ./defaults/DefaultCommonOptions */ \"./src/defaults/DefaultCommonOptions.ts\");\nvar DefaultPrivateOptions_1 = __webpack_require__(/*! ./defaults/DefaultPrivateOptions */ \"./src/defaults/DefaultPrivateOptions.ts\");\nvar OptionsManager = /** @class */ (function () {\n    function OptionsManager(options) {\n        this.options = __assign(__assign(__assign({}, DefaultCommonOptions_1.DefaultCommonOptions), options), DefaultPrivateOptions_1.DefaultPrivateOptions);\n    }\n    OptionsManager.getInstance = function (options) {\n        if (!this.instance && options) {\n            this.instance = new OptionsManager(options);\n        }\n        return this.instance;\n    };\n    OptionsManager.prototype.get = function () {\n        return this.options;\n    };\n    OptionsManager.destroy = function () {\n        // Use type assertion to set instance to undefined\n        this.instance = undefined;\n    };\n    return OptionsManager;\n}());\nexports.OptionsManager = OptionsManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvT3B0aW9uc01hbmFnZXIudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEIsNkJBQTZCLG1CQUFPLENBQUMsK0VBQWlDO0FBQ3RFLDhCQUE4QixtQkFBTyxDQUFDLGlGQUFrQztBQUN4RTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vc3JjL09wdGlvbnNNYW5hZ2VyLnRzPzQ3NTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PcHRpb25zTWFuYWdlciA9IHZvaWQgMDtcbnZhciBEZWZhdWx0Q29tbW9uT3B0aW9uc18xID0gcmVxdWlyZShcIi4vZGVmYXVsdHMvRGVmYXVsdENvbW1vbk9wdGlvbnNcIik7XG52YXIgRGVmYXVsdFByaXZhdGVPcHRpb25zXzEgPSByZXF1aXJlKFwiLi9kZWZhdWx0cy9EZWZhdWx0UHJpdmF0ZU9wdGlvbnNcIik7XG52YXIgT3B0aW9uc01hbmFnZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gT3B0aW9uc01hbmFnZXIob3B0aW9ucykge1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdENvbW1vbk9wdGlvbnNfMS5EZWZhdWx0Q29tbW9uT3B0aW9ucyksIG9wdGlvbnMpLCBEZWZhdWx0UHJpdmF0ZU9wdGlvbnNfMS5EZWZhdWx0UHJpdmF0ZU9wdGlvbnMpO1xuICAgIH1cbiAgICBPcHRpb25zTWFuYWdlci5nZXRJbnN0YW5jZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIGlmICghdGhpcy5pbnN0YW5jZSAmJiBvcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlID0gbmV3IE9wdGlvbnNNYW5hZ2VyKG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlO1xuICAgIH07XG4gICAgT3B0aW9uc01hbmFnZXIucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucztcbiAgICB9O1xuICAgIE9wdGlvbnNNYW5hZ2VyLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFVzZSB0eXBlIGFzc2VydGlvbiB0byBzZXQgaW5zdGFuY2UgdG8gdW5kZWZpbmVkXG4gICAgICAgIHRoaXMuaW5zdGFuY2UgPSB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICByZXR1cm4gT3B0aW9uc01hbmFnZXI7XG59KCkpO1xuZXhwb3J0cy5PcHRpb25zTWFuYWdlciA9IE9wdGlvbnNNYW5hZ2VyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/OptionsManager.ts\n");

/***/ }),

/***/ "./src/REST.ts":
/*!*********************!*\
  !*** ./src/REST.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pubq = void 0;\nvar Http_1 = __webpack_require__(/*! ./Http */ \"./src/Http.ts\");\nvar Auth_1 = __webpack_require__(/*! ./Auth */ \"./src/Auth.ts\");\nvar OptionsManager_1 = __webpack_require__(/*! ./OptionsManager */ \"./src/OptionsManager.ts\");\nvar Channels_1 = __webpack_require__(/*! ./Channels */ \"./src/Channels.ts\");\nvar Pubq;\n(function (Pubq) {\n    var REST = /** @class */ (function () {\n        function REST(options, auth) {\n            this.version = \"v1\";\n            this.options = OptionsManager_1.OptionsManager.getInstance(options).get();\n            this.http = new Http_1.Http();\n            this.client = this.http.getClient();\n            if (typeof auth === \"undefined\") {\n                this.auth = Auth_1.Auth.getInstance();\n            }\n            else {\n                this.auth = auth;\n            }\n            this.channels = new Channels_1.Channels(this.constructor.name);\n            if (this.options.autoRefreshToken) {\n                this.auth.startRefreshTokenInterval();\n            }\n        }\n        REST.prototype.generateToken = function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var response;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.client.post(\"/\".concat(this.version, \"/keys/tokens\"), { clientId: options === null || options === void 0 ? void 0 : options.clientId }, {\n                                headers: {\n                                    Authorization: this.auth.makeAuthorizationHeader(),\n                                },\n                            })];\n                        case 1:\n                            response = _a.sent();\n                            return [2 /*return*/, response];\n                    }\n                });\n            });\n        };\n        REST.prototype.refreshToken = function (token) {\n            return __awaiter(this, void 0, void 0, function () {\n                var response;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.client.post(\"/\".concat(this.version, \"/keys/tokens/refresh\"), {}, {\n                                headers: {\n                                    Authorization: \"Bearer \".concat(token),\n                                },\n                            })];\n                        case 1:\n                            response = _a.sent();\n                            return [2 /*return*/, response];\n                    }\n                });\n            });\n        };\n        REST.prototype.revokeToken = function (token) {\n            return __awaiter(this, void 0, void 0, function () {\n                var response;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.client.post(\"/\".concat(this.version, \"/keys/tokens/revoke\"), {}, {\n                                headers: {\n                                    Authorization: \"Bearer \".concat(token),\n                                },\n                            })];\n                        case 1:\n                            response = _a.sent();\n                            return [2 /*return*/, response];\n                    }\n                });\n            });\n        };\n        return REST;\n    }());\n    Pubq.REST = REST;\n})(Pubq || (exports.Pubq = Pubq = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/REST.ts\n");

/***/ }),

/***/ "./src/RESTChannel.ts":
/*!****************************!*\
  !*** ./src/RESTChannel.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RESTChannel = void 0;\nvar Auth_1 = __webpack_require__(/*! ./Auth */ \"./src/Auth.ts\");\nvar Http_1 = __webpack_require__(/*! ./Http */ \"./src/Http.ts\");\nvar RESTChannel = /** @class */ (function () {\n    function RESTChannel(channelName) {\n        this.version = \"v1\";\n        this.channelName = null;\n        this.http = new Http_1.Http();\n        this.client = this.http.getClient();\n        this.auth = Auth_1.Auth.getInstance();\n        this.channelName = channelName;\n    }\n    RESTChannel.prototype.publish = function (arg1, arg2, arg3) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(typeof arg1 === \"string\" && typeof arg3 === \"function\")) return [3 /*break*/, 1];\n                        return [3 /*break*/, 6];\n                    case 1:\n                        if (!(Array.isArray(arg1) &&\n                            typeof arg2 !== \"undefined\" &&\n                            typeof arg3 === \"function\")) return [3 /*break*/, 2];\n                        return [3 /*break*/, 6];\n                    case 2:\n                        if (!(Array.isArray(arg1) && typeof arg2 === \"function\")) return [3 /*break*/, 3];\n                        return [3 /*break*/, 6];\n                    case 3:\n                        if (!(Array.isArray(arg1) && typeof arg2 === \"undefined\")) return [3 /*break*/, 4];\n                        return [3 /*break*/, 6];\n                    case 4:\n                        if (!(typeof arg2 === \"undefined\")) return [3 /*break*/, 6];\n                        // Overload 5\n                        return [4 /*yield*/, this.client.post(\"/\".concat(this.version, \"/channels/\").concat(this.channelName, \"/messages\"), {\n                                data: arg1,\n                            }, {\n                                headers: {\n                                    Authorization: this.auth.makeAuthorizationHeader(),\n                                },\n                            })];\n                    case 5:\n                        // Overload 5\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return RESTChannel;\n}());\nexports.RESTChannel = RESTChannel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/RESTChannel.ts\n");

/***/ }),

/***/ "./src/RealTime.ts":
/*!*************************!*\
  !*** ./src/RealTime.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pubq = void 0;\nvar Auth_1 = __webpack_require__(/*! ./Auth */ \"./src/Auth.ts\");\nvar Connection_1 = __webpack_require__(/*! ./Connection */ \"./src/Connection.ts\");\nvar App_1 = __webpack_require__(/*! ./App */ \"./src/App.ts\");\nvar OptionsManager_1 = __webpack_require__(/*! ./OptionsManager */ \"./src/OptionsManager.ts\");\nvar Channels_1 = __webpack_require__(/*! ./Channels */ \"./src/Channels.ts\");\nvar Pubq;\n(function (Pubq) {\n    var RealTime = /** @class */ (function () {\n        function RealTime(options) {\n            this.optionsManager = OptionsManager_1.OptionsManager.getInstance(options);\n            this.options = this.optionsManager.get();\n            this.auth = Auth_1.Auth.getInstance();\n            this.connection = new Connection_1.Connection();\n            this.channels = new Channels_1.Channels(this.constructor.name);\n            this.app = App_1.App.getInstance();\n        }\n        RealTime.prototype.updateOptions = function (options) {\n            this.destroy();\n            this.optionsManager = OptionsManager_1.OptionsManager.getInstance(options);\n            this.options = this.optionsManager.get();\n            this.auth = Auth_1.Auth.getInstance();\n            this.connection = new Connection_1.Connection();\n            this.channels = new Channels_1.Channels(this.constructor.name);\n            this.app = App_1.App.getInstance();\n        };\n        RealTime.prototype.destroy = function () {\n            OptionsManager_1.OptionsManager.destroy();\n            this.auth.destroy();\n            this.connection.destroy();\n            this.app.destroy();\n        };\n        return RealTime;\n    }());\n    Pubq.RealTime = RealTime;\n})(Pubq || (exports.Pubq = Pubq = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvUmVhbFRpbWUudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLGFBQWEsbUJBQU8sQ0FBQyw2QkFBUTtBQUM3QixtQkFBbUIsbUJBQU8sQ0FBQyx5Q0FBYztBQUN6QyxZQUFZLG1CQUFPLENBQUMsMkJBQU87QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMsaURBQWtCO0FBQ2pELGlCQUFpQixtQkFBTyxDQUFDLHFDQUFZO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUMsV0FBVyxZQUFZLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vc3JjL1JlYWxUaW1lLnRzP2I1Y2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlB1YnEgPSB2b2lkIDA7XG52YXIgQXV0aF8xID0gcmVxdWlyZShcIi4vQXV0aFwiKTtcbnZhciBDb25uZWN0aW9uXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uXCIpO1xudmFyIEFwcF8xID0gcmVxdWlyZShcIi4vQXBwXCIpO1xudmFyIE9wdGlvbnNNYW5hZ2VyXzEgPSByZXF1aXJlKFwiLi9PcHRpb25zTWFuYWdlclwiKTtcbnZhciBDaGFubmVsc18xID0gcmVxdWlyZShcIi4vQ2hhbm5lbHNcIik7XG52YXIgUHVicTtcbihmdW5jdGlvbiAoUHVicSkge1xuICAgIHZhciBSZWFsVGltZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gUmVhbFRpbWUob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zTWFuYWdlciA9IE9wdGlvbnNNYW5hZ2VyXzEuT3B0aW9uc01hbmFnZXIuZ2V0SW5zdGFuY2Uob3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnNNYW5hZ2VyLmdldCgpO1xuICAgICAgICAgICAgdGhpcy5hdXRoID0gQXV0aF8xLkF1dGguZ2V0SW5zdGFuY2UoKTtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IG5ldyBDb25uZWN0aW9uXzEuQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5jaGFubmVscyA9IG5ldyBDaGFubmVsc18xLkNoYW5uZWxzKHRoaXMuY29uc3RydWN0b3IubmFtZSk7XG4gICAgICAgICAgICB0aGlzLmFwcCA9IEFwcF8xLkFwcC5nZXRJbnN0YW5jZSgpO1xuICAgICAgICB9XG4gICAgICAgIFJlYWxUaW1lLnByb3RvdHlwZS51cGRhdGVPcHRpb25zID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zTWFuYWdlciA9IE9wdGlvbnNNYW5hZ2VyXzEuT3B0aW9uc01hbmFnZXIuZ2V0SW5zdGFuY2Uob3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnNNYW5hZ2VyLmdldCgpO1xuICAgICAgICAgICAgdGhpcy5hdXRoID0gQXV0aF8xLkF1dGguZ2V0SW5zdGFuY2UoKTtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IG5ldyBDb25uZWN0aW9uXzEuQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5jaGFubmVscyA9IG5ldyBDaGFubmVsc18xLkNoYW5uZWxzKHRoaXMuY29uc3RydWN0b3IubmFtZSk7XG4gICAgICAgICAgICB0aGlzLmFwcCA9IEFwcF8xLkFwcC5nZXRJbnN0YW5jZSgpO1xuICAgICAgICB9O1xuICAgICAgICBSZWFsVGltZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIE9wdGlvbnNNYW5hZ2VyXzEuT3B0aW9uc01hbmFnZXIuZGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5hdXRoLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5kZXN0cm95KCk7XG4gICAgICAgICAgICB0aGlzLmFwcC5kZXN0cm95KCk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBSZWFsVGltZTtcbiAgICB9KCkpO1xuICAgIFB1YnEuUmVhbFRpbWUgPSBSZWFsVGltZTtcbn0pKFB1YnEgfHwgKGV4cG9ydHMuUHVicSA9IFB1YnEgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/RealTime.ts\n");

/***/ }),

/***/ "./src/RealTimeChannel.ts":
/*!********************************!*\
  !*** ./src/RealTimeChannel.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RealTimeChannel = void 0;\nvar App_1 = __webpack_require__(/*! ./App */ \"./src/App.ts\");\nvar DefaultChannelEvents_1 = __webpack_require__(/*! ./defaults/DefaultChannelEvents */ \"./src/defaults/DefaultChannelEvents.ts\");\nvar WebSocket_1 = __webpack_require__(/*! ./WebSocket */ \"./src/WebSocket.ts\");\nvar ChannelManager_1 = __webpack_require__(/*! ./ChannelManager */ \"./src/ChannelManager.ts\");\nvar Message_1 = __webpack_require__(/*! ./Message */ \"./src/Message.ts\");\nvar OptionsManager_1 = __webpack_require__(/*! ./OptionsManager */ \"./src/OptionsManager.ts\");\nvar EventEmitter = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nvar RealTimeChannel = /** @class */ (function () {\n    function RealTimeChannel(channelName) {\n        this.channel = null;\n        this.channelName = null;\n        this.events = new EventEmitter();\n        this.manager = new ChannelManager_1.ChannelManager();\n        this.options = OptionsManager_1.OptionsManager.getInstance().get();\n        this.ws = WebSocket_1.WebSocket.getInstance();\n        this.app = App_1.App.getInstance();\n        this.channelName = channelName;\n        this.init();\n    }\n    Object.defineProperty(RealTimeChannel.prototype, \"state\", {\n        get: function () {\n            return this.manager.currentState;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RealTimeChannel.prototype.init = function () {\n        var socket = this.ws.getSocket();\n        this.channel = socket.channel(\"\".concat(this.app.getId(), \"/\").concat(this.channelName));\n        this.handleSubscribeEvent();\n        this.handleUnsubscribeEvent();\n        this.handleSubscribeFailEvent();\n    };\n    RealTimeChannel.prototype.handleSubscribeEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, event_1, e_1_1;\n                        var _d, e_1, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(this.channel.listener(\"subscribe\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    event_1 = _f;\n                                    this.events.emit(\"subscribed\", this.manager.stateChangeObject(\"subscribed\"));\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_1_1 = _g.sent();\n                                    e_1 = { error: e_1_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_1) throw e_1.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    RealTimeChannel.prototype.handleUnsubscribeEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, event_2, e_2_1;\n                        var _d, e_2, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(this.channel.listener(\"unsubscribe\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    event_2 = _f;\n                                    this.events.emit(\"unsubscribed\", this.manager.stateChangeObject(\"unsubscribed\"));\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_2_1 = _g.sent();\n                                    e_2 = { error: e_2_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_2) throw e_2.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    RealTimeChannel.prototype.handleSubscribeFailEvent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var socket;\n            var _this = this;\n            return __generator(this, function (_a) {\n                socket = this.ws.getSocket();\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, error, e_3_1;\n                        var _d, e_3, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(socket.listener(\"subscribeFail\"));\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    error = _f;\n                                    this.events.emit(\"failed\", this.manager.stateChangeObject(\"failed\", \"failed\", error));\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_3_1 = _g.sent();\n                                    e_3 = { error: e_3_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_3) throw e_3.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    RealTimeChannel.prototype.handleChannelDataEvent = function (listener) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c, data, msg, e_4_1;\n                        var _d, e_4, _e, _f;\n                        return __generator(this, function (_g) {\n                            switch (_g.label) {\n                                case 0:\n                                    _g.trys.push([0, 5, 6, 11]);\n                                    _a = true, _b = __asyncValues(this.channel);\n                                    _g.label = 1;\n                                case 1: return [4 /*yield*/, _b.next()];\n                                case 2:\n                                    if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 4];\n                                    _f = _c.value;\n                                    _a = false;\n                                    data = _f;\n                                    msg = new Message_1.Message({\n                                        data: data,\n                                        channel: this.channel.name,\n                                    }).toObject();\n                                    listener(msg);\n                                    resolve();\n                                    _g.label = 3;\n                                case 3:\n                                    _a = true;\n                                    return [3 /*break*/, 1];\n                                case 4: return [3 /*break*/, 11];\n                                case 5:\n                                    e_4_1 = _g.sent();\n                                    e_4 = { error: e_4_1 };\n                                    return [3 /*break*/, 11];\n                                case 6:\n                                    _g.trys.push([6, , 9, 10]);\n                                    if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 8];\n                                    return [4 /*yield*/, _e.call(_b)];\n                                case 7:\n                                    _g.sent();\n                                    _g.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    if (e_4) throw e_4.error;\n                                    return [7 /*endfinally*/];\n                                case 10: return [7 /*endfinally*/];\n                                case 11: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    RealTimeChannel.prototype.subscribe = function (arg1, arg2) {\n        if (!this.channel) {\n            throw new Error(\"Channel is not specified.\");\n        }\n        var socket = this.ws.getSocket();\n        if (socket.isSubscribed(\"\".concat(this.app.getId(), \"/\").concat(this.channelName), true)) {\n            var error = {\n                code: 201,\n                message: \"The channel has already been subscribed.\",\n            };\n            this.events.emit(\"failed\", this.manager.stateChangeObject(\"failed\", \"failed\", error));\n            return false;\n        }\n        this.events.emit(\"subscribing\", this.manager.stateChangeObject(\"subscribing\"));\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n        }\n        else if (Array.isArray(arg1) && typeof arg2 === \"function\") {\n            // Overload 2\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 3\n            this.channel.subscribe();\n            this.handleChannelDataEvent(arg1);\n        }\n    };\n    RealTimeChannel.prototype.unsubscribe = function (arg1, arg2) {\n        if (!this.channel) {\n            throw new Error(\"Channel is not specified.\");\n        }\n        var socket = this.ws.getSocket();\n        if (!socket.isSubscribed(\"\".concat(this.app.getId(), \"/\").concat(this.channelName), true)) {\n            var error = {\n                code: 203,\n                message: \"Can not unsubscribe from a channel that is not subscribed.\",\n            };\n            this.events.emit(\"failed\", this.manager.stateChangeObject(\"failed\", \"failed\", error));\n            return false;\n        }\n        this.events.emit(\"unsubscribing\", this.manager.stateChangeObject(\"unsubscribing\"));\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n        }\n        else if (Array.isArray(arg1) && typeof arg2 === \"function\") {\n            // Overload 2\n        }\n        else if (typeof arg1 === \"string\" && arg2 === undefined) {\n            // Overload 3\n        }\n        else if (Array.isArray(arg1) && arg2 === undefined) {\n            // Overload 4\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 5\n        }\n        else if (arg1 === undefined && arg2 === undefined) {\n            // Overload 6\n            socket.unsubscribe(\"\".concat(this.app.getId(), \"/\").concat(this.channelName));\n        }\n    };\n    RealTimeChannel.prototype.publish = function (data) {\n        var socket = this.ws.getSocket();\n        socket.transmitPublish(\"\".concat(this.app.getId(), \"/\").concat(this.channelName), data);\n    };\n    // Implementation of the on method\n    RealTimeChannel.prototype.on = function (arg1, arg2) {\n        var _this = this;\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n            this.events.on(arg1, arg2);\n        }\n        else if (Array.isArray(arg1) && typeof arg2 === \"function\") {\n            // Overload 2\n            arg1.forEach(function (eventName) {\n                _this.events.on(eventName, arg2);\n            });\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 3\n            DefaultChannelEvents_1.DefaultChannelEvents.forEach(function (eventName) {\n                _this.events.on(eventName, arg1);\n            });\n        }\n        else {\n            throw new Error(\"Invalid arguments\");\n        }\n    };\n    RealTimeChannel.prototype.once = function (arg1, arg2) {\n        var _this = this;\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n            this.events.once(arg1, arg2);\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 2\n            DefaultChannelEvents_1.DefaultChannelEvents.forEach(function (eventName) {\n                _this.events.once(eventName, arg1);\n            });\n        }\n        else {\n            throw new Error(\"Invalid arguments\");\n        }\n    };\n    RealTimeChannel.prototype.off = function (arg1, arg2) {\n        var _this = this;\n        if (typeof arg1 === \"string\" && typeof arg2 === \"function\") {\n            // Overload 1\n            this.events.off(arg1, arg2);\n        }\n        else if (Array.isArray(arg1) && typeof arg2 === \"function\") {\n            // Overload 2\n            arg1.forEach(function (eventName) {\n                _this.events.off(eventName, arg2);\n            });\n        }\n        else if (typeof arg1 === \"string\" && arg2 === undefined) {\n            // Overload 3\n            this.events.off(arg1);\n        }\n        else if (Array.isArray(arg1) && arg2 === undefined) {\n            // Overload 4\n            this.events.removeAllListeners(arg1);\n        }\n        else if (typeof arg1 === \"function\" && arg2 === undefined) {\n            // Overload 5\n            this.events.off(arg1);\n        }\n        else if (arg1 === undefined && arg2 === undefined) {\n            // Overload 6\n            this.events.removeAllListeners();\n        }\n        else {\n            throw new Error(\"Invalid arguments\");\n        }\n    };\n    RealTimeChannel.prototype.destroy = function () {\n        if (this.channel) {\n            this.unsubscribe();\n            this.channel.killAllListeners();\n            this.channel.kill();\n        }\n        this.off();\n    };\n    return RealTimeChannel;\n}());\nexports.RealTimeChannel = RealTimeChannel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/RealTimeChannel.ts\n");

/***/ }),

/***/ "./src/WebSocket.ts":
/*!**************************!*\
  !*** ./src/WebSocket.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebSocket = void 0;\nvar OptionsManager_1 = __webpack_require__(/*! ./OptionsManager */ \"./src/OptionsManager.ts\");\nvar scc = __webpack_require__(/*! socketcluster-client */ \"./node_modules/socketcluster-client/index.js\");\nvar WebSocket = /** @class */ (function () {\n    function WebSocket() {\n        var sccOptions = OptionsManager_1.OptionsManager.getInstance().get();\n        sccOptions.autoConnect = false;\n        this.socket = scc.create(sccOptions);\n    }\n    WebSocket.getInstance = function () {\n        if (!this.instance) {\n            this.instance = new WebSocket();\n        }\n        return this.instance;\n    };\n    WebSocket.prototype.getSocket = function () {\n        return this.socket;\n    };\n    WebSocket.prototype.destroy = function () {\n        if (WebSocket.instance) {\n            this.socket.disconnect();\n            this.socket.killAllListeners();\n            this.socket.killAllReceivers();\n            this.socket.deauthenticate();\n            WebSocket.instance = null;\n        }\n    };\n    WebSocket.instance = null;\n    return WebSocket;\n}());\nexports.WebSocket = WebSocket;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV2ViU29ja2V0LnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQix1QkFBdUIsbUJBQU8sQ0FBQyxpREFBa0I7QUFDakQsVUFBVSxtQkFBTyxDQUFDLDBFQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvV2ViU29ja2V0LnRzP2QwNWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldlYlNvY2tldCA9IHZvaWQgMDtcbnZhciBPcHRpb25zTWFuYWdlcl8xID0gcmVxdWlyZShcIi4vT3B0aW9uc01hbmFnZXJcIik7XG52YXIgc2NjID0gcmVxdWlyZShcInNvY2tldGNsdXN0ZXItY2xpZW50XCIpO1xudmFyIFdlYlNvY2tldCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXZWJTb2NrZXQoKSB7XG4gICAgICAgIHZhciBzY2NPcHRpb25zID0gT3B0aW9uc01hbmFnZXJfMS5PcHRpb25zTWFuYWdlci5nZXRJbnN0YW5jZSgpLmdldCgpO1xuICAgICAgICBzY2NPcHRpb25zLmF1dG9Db25uZWN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc29ja2V0ID0gc2NjLmNyZWF0ZShzY2NPcHRpb25zKTtcbiAgICB9XG4gICAgV2ViU29ja2V0LmdldEluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgV2ViU29ja2V0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2U7XG4gICAgfTtcbiAgICBXZWJTb2NrZXQucHJvdG90eXBlLmdldFNvY2tldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc29ja2V0O1xuICAgIH07XG4gICAgV2ViU29ja2V0LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoV2ViU29ja2V0Lmluc3RhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLnNvY2tldC5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICB0aGlzLnNvY2tldC5raWxsQWxsTGlzdGVuZXJzKCk7XG4gICAgICAgICAgICB0aGlzLnNvY2tldC5raWxsQWxsUmVjZWl2ZXJzKCk7XG4gICAgICAgICAgICB0aGlzLnNvY2tldC5kZWF1dGhlbnRpY2F0ZSgpO1xuICAgICAgICAgICAgV2ViU29ja2V0Lmluc3RhbmNlID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG4gICAgV2ViU29ja2V0Lmluc3RhbmNlID0gbnVsbDtcbiAgICByZXR1cm4gV2ViU29ja2V0O1xufSgpKTtcbmV4cG9ydHMuV2ViU29ja2V0ID0gV2ViU29ja2V0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WebSocket.ts\n");

/***/ }),

/***/ "./src/defaults/DefaultChannelEvents.ts":
/*!**********************************************!*\
  !*** ./src/defaults/DefaultChannelEvents.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultChannelEvents = void 0;\nexports.DefaultChannelEvents = [\n    \"initialized\",\n    \"subscribing\",\n    \"subscribed\",\n    \"unsubscribing\",\n    \"unsubscribed\",\n    \"suspended\",\n    \"failed\",\n    \"update\",\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVmYXVsdHMvRGVmYXVsdENoYW5uZWxFdmVudHMudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vc3JjL2RlZmF1bHRzL0RlZmF1bHRDaGFubmVsRXZlbnRzLnRzP2YyZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlZmF1bHRDaGFubmVsRXZlbnRzID0gdm9pZCAwO1xuZXhwb3J0cy5EZWZhdWx0Q2hhbm5lbEV2ZW50cyA9IFtcbiAgICBcImluaXRpYWxpemVkXCIsXG4gICAgXCJzdWJzY3JpYmluZ1wiLFxuICAgIFwic3Vic2NyaWJlZFwiLFxuICAgIFwidW5zdWJzY3JpYmluZ1wiLFxuICAgIFwidW5zdWJzY3JpYmVkXCIsXG4gICAgXCJzdXNwZW5kZWRcIixcbiAgICBcImZhaWxlZFwiLFxuICAgIFwidXBkYXRlXCIsXG5dO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/defaults/DefaultChannelEvents.ts\n");

/***/ }),

/***/ "./src/defaults/DefaultCommonOptions.ts":
/*!**********************************************!*\
  !*** ./src/defaults/DefaultCommonOptions.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultCommonOptions = void 0;\nexports.DefaultCommonOptions = {\n    key: undefined,\n    authUrl: undefined,\n    refreshUrl: undefined,\n    revokeUrl: undefined,\n    authBody: {},\n    authHeaders: {},\n    authTokenName: \"pubq.authToken\",\n    autoConnect: true,\n    autoReconnect: true,\n    autoAuthenticate: true,\n    autoRefreshToken: true,\n    refreshTokenInterval: 1000,\n    autoSubscribeOnConnect: true,\n    connectTimeout: 20000,\n    ackTimeout: 10000,\n    timestampRequests: false,\n    timestampParam: \"t\",\n    binaryType: \"arraybuffer\",\n    batchOnHandshake: false,\n    batchOnHandshakeDuration: 100,\n    batchInterval: 50,\n    protocolVersion: 2,\n    wsOptions: {},\n    cloneData: false,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVmYXVsdHMvRGVmYXVsdENvbW1vbk9wdGlvbnMudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvZGVmYXVsdHMvRGVmYXVsdENvbW1vbk9wdGlvbnMudHM/MzQ4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGVmYXVsdENvbW1vbk9wdGlvbnMgPSB2b2lkIDA7XG5leHBvcnRzLkRlZmF1bHRDb21tb25PcHRpb25zID0ge1xuICAgIGtleTogdW5kZWZpbmVkLFxuICAgIGF1dGhVcmw6IHVuZGVmaW5lZCxcbiAgICByZWZyZXNoVXJsOiB1bmRlZmluZWQsXG4gICAgcmV2b2tlVXJsOiB1bmRlZmluZWQsXG4gICAgYXV0aEJvZHk6IHt9LFxuICAgIGF1dGhIZWFkZXJzOiB7fSxcbiAgICBhdXRoVG9rZW5OYW1lOiBcInB1YnEuYXV0aFRva2VuXCIsXG4gICAgYXV0b0Nvbm5lY3Q6IHRydWUsXG4gICAgYXV0b1JlY29ubmVjdDogdHJ1ZSxcbiAgICBhdXRvQXV0aGVudGljYXRlOiB0cnVlLFxuICAgIGF1dG9SZWZyZXNoVG9rZW46IHRydWUsXG4gICAgcmVmcmVzaFRva2VuSW50ZXJ2YWw6IDEwMDAsXG4gICAgYXV0b1N1YnNjcmliZU9uQ29ubmVjdDogdHJ1ZSxcbiAgICBjb25uZWN0VGltZW91dDogMjAwMDAsXG4gICAgYWNrVGltZW91dDogMTAwMDAsXG4gICAgdGltZXN0YW1wUmVxdWVzdHM6IGZhbHNlLFxuICAgIHRpbWVzdGFtcFBhcmFtOiBcInRcIixcbiAgICBiaW5hcnlUeXBlOiBcImFycmF5YnVmZmVyXCIsXG4gICAgYmF0Y2hPbkhhbmRzaGFrZTogZmFsc2UsXG4gICAgYmF0Y2hPbkhhbmRzaGFrZUR1cmF0aW9uOiAxMDAsXG4gICAgYmF0Y2hJbnRlcnZhbDogNTAsXG4gICAgcHJvdG9jb2xWZXJzaW9uOiAyLFxuICAgIHdzT3B0aW9uczoge30sXG4gICAgY2xvbmVEYXRhOiBmYWxzZSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/defaults/DefaultCommonOptions.ts\n");

/***/ }),

/***/ "./src/defaults/DefaultConnectionEvents.ts":
/*!*************************************************!*\
  !*** ./src/defaults/DefaultConnectionEvents.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultConnectionEvents = void 0;\nexports.DefaultConnectionEvents = [\n    \"initialized\",\n    \"connecting\",\n    \"connected\",\n    \"disconnected\",\n    \"suspended\",\n    \"closing\",\n    \"closed\",\n    \"failed\",\n    \"update\",\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVmYXVsdHMvRGVmYXVsdENvbm5lY3Rpb25FdmVudHMudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvZGVmYXVsdHMvRGVmYXVsdENvbm5lY3Rpb25FdmVudHMudHM/OTJkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGVmYXVsdENvbm5lY3Rpb25FdmVudHMgPSB2b2lkIDA7XG5leHBvcnRzLkRlZmF1bHRDb25uZWN0aW9uRXZlbnRzID0gW1xuICAgIFwiaW5pdGlhbGl6ZWRcIixcbiAgICBcImNvbm5lY3RpbmdcIixcbiAgICBcImNvbm5lY3RlZFwiLFxuICAgIFwiZGlzY29ubmVjdGVkXCIsXG4gICAgXCJzdXNwZW5kZWRcIixcbiAgICBcImNsb3NpbmdcIixcbiAgICBcImNsb3NlZFwiLFxuICAgIFwiZmFpbGVkXCIsXG4gICAgXCJ1cGRhdGVcIixcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/defaults/DefaultConnectionEvents.ts\n");

/***/ }),

/***/ "./src/defaults/DefaultPrivateOptions.ts":
/*!***********************************************!*\
  !*** ./src/defaults/DefaultPrivateOptions.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultPrivateOptions = void 0;\nexports.DefaultPrivateOptions = {\n    hostname: \"realtime.pubq.dev\",\n    secure: true,\n    port: 443,\n    path: \"/\",\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVmYXVsdHMvRGVmYXVsdFByaXZhdGVPcHRpb25zLnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvZGVmYXVsdHMvRGVmYXVsdFByaXZhdGVPcHRpb25zLnRzPzAwMWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlZmF1bHRQcml2YXRlT3B0aW9ucyA9IHZvaWQgMDtcbmV4cG9ydHMuRGVmYXVsdFByaXZhdGVPcHRpb25zID0ge1xuICAgIGhvc3RuYW1lOiBcInJlYWx0aW1lLnB1YnEuaW9cIixcbiAgICBzZWN1cmU6IHRydWUsXG4gICAgcG9ydDogNDQzLFxuICAgIHBhdGg6IFwiL1wiLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/defaults/DefaultPrivateOptions.ts\n");

/***/ }),

/***/ "./src/pubq.ts":
/*!*********************!*\
  !*** ./src/pubq.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pubq = void 0;\nvar RealTimeModule = __importStar(__webpack_require__(/*! ./RealTime */ \"./src/RealTime.ts\"));\nvar RESTModule = __importStar(__webpack_require__(/*! ./REST */ \"./src/REST.ts\"));\nvar Pubq;\n(function (Pubq) {\n    Pubq.RealTime = RealTimeModule.Pubq.RealTime;\n    Pubq.REST = RESTModule.Pubq.REST;\n})(Pubq || (exports.Pubq = Pubq = {}));\nif (typeof window !== \"undefined\") {\n    window.Pubq = Pubq;\n}\nexports[\"default\"] = Pubq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcHVicS50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLGtDQUFrQyxtQkFBTyxDQUFDLHFDQUFZO0FBQ3RELDhCQUE4QixtQkFBTyxDQUFDLDZCQUFRO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxXQUFXLFlBQVksWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvcHVicS50cz8wNDU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlB1YnEgPSB2b2lkIDA7XG52YXIgUmVhbFRpbWVNb2R1bGUgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vUmVhbFRpbWVcIikpO1xudmFyIFJFU1RNb2R1bGUgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vUkVTVFwiKSk7XG52YXIgUHVicTtcbihmdW5jdGlvbiAoUHVicSkge1xuICAgIFB1YnEuUmVhbFRpbWUgPSBSZWFsVGltZU1vZHVsZS5QdWJxLlJlYWxUaW1lO1xuICAgIFB1YnEuUkVTVCA9IFJFU1RNb2R1bGUuUHVicS5SRVNUO1xufSkoUHVicSB8fCAoZXhwb3J0cy5QdWJxID0gUHVicSA9IHt9KSk7XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHdpbmRvdy5QdWJxID0gUHVicTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFB1YnE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pubq.ts\n");

/***/ }),

/***/ "./src/utils/jwt.ts":
/*!**************************!*\
  !*** ./src/utils/jwt.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getJwtPayload = exports.getSignedAuthToken = void 0;\nvar getSignedAuthToken = function (authTokenName) {\n    return localStorage.getItem(authTokenName);\n};\nexports.getSignedAuthToken = getSignedAuthToken;\nvar getJwtPayload = function (token) {\n    if (token) {\n        // Split the JWT into its three parts: header, payload, and signature\n        var parts = token.split(\".\");\n        // Ensure there are three parts\n        if (parts.length !== 3) {\n            throw new Error(\"Invalid JWT format\");\n        }\n        // Decode the Base64-encoded payload\n        var decodedPayload = atob(parts[1]);\n        // Parse the JSON payload\n        var parsedPayload = JSON.parse(decodedPayload);\n        return parsedPayload;\n    }\n};\nexports.getJwtPayload = getJwtPayload;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvand0LnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL3NyYy91dGlscy9qd3QudHM/ZDU0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0Snd0UGF5bG9hZCA9IGV4cG9ydHMuZ2V0U2lnbmVkQXV0aFRva2VuID0gdm9pZCAwO1xudmFyIGdldFNpZ25lZEF1dGhUb2tlbiA9IGZ1bmN0aW9uIChhdXRoVG9rZW5OYW1lKSB7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKGF1dGhUb2tlbk5hbWUpO1xufTtcbmV4cG9ydHMuZ2V0U2lnbmVkQXV0aFRva2VuID0gZ2V0U2lnbmVkQXV0aFRva2VuO1xudmFyIGdldEp3dFBheWxvYWQgPSBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgLy8gU3BsaXQgdGhlIEpXVCBpbnRvIGl0cyB0aHJlZSBwYXJ0czogaGVhZGVyLCBwYXlsb2FkLCBhbmQgc2lnbmF0dXJlXG4gICAgICAgIHZhciBwYXJ0cyA9IHRva2VuLnNwbGl0KFwiLlwiKTtcbiAgICAgICAgLy8gRW5zdXJlIHRoZXJlIGFyZSB0aHJlZSBwYXJ0c1xuICAgICAgICBpZiAocGFydHMubGVuZ3RoICE9PSAzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIEpXVCBmb3JtYXRcIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRGVjb2RlIHRoZSBCYXNlNjQtZW5jb2RlZCBwYXlsb2FkXG4gICAgICAgIHZhciBkZWNvZGVkUGF5bG9hZCA9IGF0b2IocGFydHNbMV0pO1xuICAgICAgICAvLyBQYXJzZSB0aGUgSlNPTiBwYXlsb2FkXG4gICAgICAgIHZhciBwYXJzZWRQYXlsb2FkID0gSlNPTi5wYXJzZShkZWNvZGVkUGF5bG9hZCk7XG4gICAgICAgIHJldHVybiBwYXJzZWRQYXlsb2FkO1xuICAgIH1cbn07XG5leHBvcnRzLmdldEp3dFBheWxvYWQgPSBnZXRKd3RQYXlsb2FkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/jwt.ts\n");

/***/ }),

/***/ "./src/utils/time.ts":
/*!***************************!*\
  !*** ./src/utils/time.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRemainingSeconds = void 0;\nvar getRemainingSeconds = function (timestamp) {\n    // Convert the timestamp to milliseconds\n    var targetTime = timestamp * 1000;\n    // Get the current time in milliseconds\n    var currentTime = new Date().getTime();\n    // Calculate the difference in milliseconds\n    var difference = targetTime - currentTime;\n    // Convert the difference to seconds\n    var remainingSeconds = Math.floor(difference / 1000);\n    return remainingSeconds;\n};\nexports.getRemainingSeconds = getRemainingSeconds;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdGltZS50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9zcmMvdXRpbHMvdGltZS50cz8yYzQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRSZW1haW5pbmdTZWNvbmRzID0gdm9pZCAwO1xudmFyIGdldFJlbWFpbmluZ1NlY29uZHMgPSBmdW5jdGlvbiAodGltZXN0YW1wKSB7XG4gICAgLy8gQ29udmVydCB0aGUgdGltZXN0YW1wIHRvIG1pbGxpc2Vjb25kc1xuICAgIHZhciB0YXJnZXRUaW1lID0gdGltZXN0YW1wICogMTAwMDtcbiAgICAvLyBHZXQgdGhlIGN1cnJlbnQgdGltZSBpbiBtaWxsaXNlY29uZHNcbiAgICB2YXIgY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAvLyBDYWxjdWxhdGUgdGhlIGRpZmZlcmVuY2UgaW4gbWlsbGlzZWNvbmRzXG4gICAgdmFyIGRpZmZlcmVuY2UgPSB0YXJnZXRUaW1lIC0gY3VycmVudFRpbWU7XG4gICAgLy8gQ29udmVydCB0aGUgZGlmZmVyZW5jZSB0byBzZWNvbmRzXG4gICAgdmFyIHJlbWFpbmluZ1NlY29uZHMgPSBNYXRoLmZsb29yKGRpZmZlcmVuY2UgLyAxMDAwKTtcbiAgICByZXR1cm4gcmVtYWluaW5nU2Vjb25kcztcbn07XG5leHBvcnRzLmdldFJlbWFpbmluZ1NlY29uZHMgPSBnZXRSZW1haW5pbmdTZWNvbmRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/time.ts\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NIL\": () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"parse\": () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   \"stringify\": () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   \"v1\": () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"v3\": () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"v4\": () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"v5\": () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   \"validate\": () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   \"version\": () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"./node_modules/uuid/dist/esm-browser/v1.js\");\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"./node_modules/uuid/dist/esm-browser/v3.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"./node_modules/uuid/dist/esm-browser/v5.js\");\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"./node_modules/uuid/dist/esm-browser/nil.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"./node_modules/uuid/dist/esm-browser/version.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNBO0FBQ0E7QUFDQTtBQUNFO0FBQ1E7QUFDRTtBQUNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvaW5kZXguanM/ZTE0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIHYxIH0gZnJvbSAnLi92MS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHYzIH0gZnJvbSAnLi92My5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHY0IH0gZnJvbSAnLi92NC5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHY1IH0gZnJvbSAnLi92NS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE5JTCB9IGZyb20gJy4vbmlsLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbi5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHZhbGlkYXRlIH0gZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcGFyc2UgfSBmcm9tICcuL3BhcnNlLmpzJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/md5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL25pbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmlsLmpzP2Q0Y2YiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgJzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCc7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/nil.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDOztBQUVyQztBQUNBLE9BQU8sd0RBQVE7QUFDZjtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDOztBQUVoQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7O0FBRXJCO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBLHFCQUFxQjs7QUFFckI7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcGFyc2UuanM/MGRlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5cbmZ1bmN0aW9uIHBhcnNlKHV1aWQpIHtcbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignSW52YWxpZCBVVUlEJyk7XG4gIH1cblxuICB2YXIgdjtcbiAgdmFyIGFyciA9IG5ldyBVaW50OEFycmF5KDE2KTsgLy8gUGFyc2UgIyMjIyMjIyMtLi4uLi0uLi4uLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDAsIDgpLCAxNikpID4+PiAyNDtcbiAgYXJyWzFdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMl0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzNdID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLSMjIyMtLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFycls0XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSg5LCAxMyksIDE2KSkgPj4+IDg7XG4gIGFycls1XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLSMjIyMtLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNl0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTQsIDE4KSwgMTYpKSA+Pj4gODtcbiAgYXJyWzddID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0jIyMjLS4uLi4uLi4uLi4uLlxuXG4gIGFycls4XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxOSwgMjMpLCAxNikpID4+PiA4O1xuICBhcnJbOV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0uLi4uLS4uLi4tIyMjIyMjIyMjIyMjXG4gIC8vIChVc2UgXCIvXCIgdG8gYXZvaWQgMzItYml0IHRydW5jYXRpb24gd2hlbiBiaXQtc2hpZnRpbmcgaGlnaC1vcmRlciBieXRlcylcblxuICBhcnJbMTBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDI0LCAzNiksIDE2KSkgLyAweDEwMDAwMDAwMDAwICYgMHhmZjtcbiAgYXJyWzExXSA9IHYgLyAweDEwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMl0gPSB2ID4+PiAyNCAmIDB4ZmY7XG4gIGFyclsxM10gPSB2ID4+PiAxNiAmIDB4ZmY7XG4gIGFyclsxNF0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzE1XSA9IHYgJiAweGZmO1xuICByZXR1cm4gYXJyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBwYXJzZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/parse.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxVQUFVLEdBQUcseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcmVnZXguanM/NDBkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/regex.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcm5nLmpzP2Q4ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVW5pcXVlIElEIGNyZWF0aW9uIHJlcXVpcmVzIGEgaGlnaCBxdWFsaXR5IHJhbmRvbSAjIGdlbmVyYXRvci4gSW4gdGhlIGJyb3dzZXIgd2UgdGhlcmVmb3JlXG4vLyByZXF1aXJlIHRoZSBjcnlwdG8gQVBJIGFuZCBkbyBub3Qgc3VwcG9ydCBidWlsdC1pbiBmYWxsYmFjayB0byBsb3dlciBxdWFsaXR5IHJhbmRvbSBudW1iZXJcbi8vIGdlbmVyYXRvcnMgKGxpa2UgTWF0aC5yYW5kb20oKSkuXG52YXIgZ2V0UmFuZG9tVmFsdWVzO1xudmFyIHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICAvLyBsYXp5IGxvYWQgc28gdGhhdCBlbnZpcm9ubWVudHMgdGhhdCBuZWVkIHRvIHBvbHlmaWxsIGhhdmUgYSBjaGFuY2UgdG8gZG8gc29cbiAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAvLyBnZXRSYW5kb21WYWx1ZXMgbmVlZHMgdG8gYmUgaW52b2tlZCBpbiBhIGNvbnRleHQgd2hlcmUgXCJ0aGlzXCIgaXMgYSBDcnlwdG8gaW1wbGVtZW50YXRpb24uIEFsc28sXG4gICAgLy8gZmluZCB0aGUgY29tcGxldGUgaW1wbGVtZW50YXRpb24gb2YgY3J5cHRvIChtc0NyeXB0bykgb24gSUUxMS5cbiAgICBnZXRSYW5kb21WYWx1ZXMgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pIHx8IHR5cGVvZiBtc0NyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyA9PT0gJ2Z1bmN0aW9uJyAmJiBtc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChtc0NyeXB0byk7XG5cbiAgICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKCkgbm90IHN1cHBvcnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCNnZXRyYW5kb212YWx1ZXMtbm90LXN1cHBvcnRlZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBnZXRSYW5kb21WYWx1ZXMocm5kczgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/rng.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1EQUFtRDs7QUFFbkQ7O0FBRUEsb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsUUFBUTtBQUMzQjs7QUFFQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixTQUFTO0FBQzdCOztBQUVBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7O0FBRUEsc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixVQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUVBQWUsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanM/Yjc1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBZGFwdGVkIGZyb20gQ2hyaXMgVmVuZXNzJyBTSEExIGNvZGUgYXRcbi8vIGh0dHA6Ly93d3cubW92YWJsZS10eXBlLmNvLnVrL3NjcmlwdHMvc2hhMS5odG1sXG5mdW5jdGlvbiBmKHMsIHgsIHksIHopIHtcbiAgc3dpdGNoIChzKSB7XG4gICAgY2FzZSAwOlxuICAgICAgcmV0dXJuIHggJiB5IF4gfnggJiB6O1xuXG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIHggXiB5IF4gejtcblxuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiB4ICYgeSBeIHggJiB6IF4geSAmIHo7XG5cbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4geCBeIHkgXiB6O1xuICB9XG59XG5cbmZ1bmN0aW9uIFJPVEwoeCwgbikge1xuICByZXR1cm4geCA8PCBuIHwgeCA+Pj4gMzIgLSBuO1xufVxuXG5mdW5jdGlvbiBzaGExKGJ5dGVzKSB7XG4gIHZhciBLID0gWzB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMsIDB4Y2E2MmMxZDZdO1xuICB2YXIgSCA9IFsweDY3NDUyMzAxLCAweGVmY2RhYjg5LCAweDk4YmFkY2ZlLCAweDEwMzI1NDc2LCAweGMzZDJlMWYwXTtcblxuICBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIHZhciBtc2cgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYnl0ZXMpKTsgLy8gVVRGOCBlc2NhcGVcblxuICAgIGJ5dGVzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7ICsraSkge1xuICAgICAgYnl0ZXMucHVzaChtc2cuY2hhckNvZGVBdChpKSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIC8vIENvbnZlcnQgQXJyYXktbGlrZSB0byBBcnJheVxuICAgIGJ5dGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYnl0ZXMpO1xuICB9XG5cbiAgYnl0ZXMucHVzaCgweDgwKTtcbiAgdmFyIGwgPSBieXRlcy5sZW5ndGggLyA0ICsgMjtcbiAgdmFyIE4gPSBNYXRoLmNlaWwobCAvIDE2KTtcbiAgdmFyIE0gPSBuZXcgQXJyYXkoTik7XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IE47ICsrX2kpIHtcbiAgICB2YXIgYXJyID0gbmV3IFVpbnQzMkFycmF5KDE2KTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgMTY7ICsraikge1xuICAgICAgYXJyW2pdID0gYnl0ZXNbX2kgKiA2NCArIGogKiA0XSA8PCAyNCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDFdIDw8IDE2IHwgYnl0ZXNbX2kgKiA2NCArIGogKiA0ICsgMl0gPDwgOCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDNdO1xuICAgIH1cblxuICAgIE1bX2ldID0gYXJyO1xuICB9XG5cbiAgTVtOIC0gMV1bMTRdID0gKGJ5dGVzLmxlbmd0aCAtIDEpICogOCAvIE1hdGgucG93KDIsIDMyKTtcbiAgTVtOIC0gMV1bMTRdID0gTWF0aC5mbG9vcihNW04gLSAxXVsxNF0pO1xuICBNW04gLSAxXVsxNV0gPSAoYnl0ZXMubGVuZ3RoIC0gMSkgKiA4ICYgMHhmZmZmZmZmZjtcblxuICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBOOyArK19pMikge1xuICAgIHZhciBXID0gbmV3IFVpbnQzMkFycmF5KDgwKTtcblxuICAgIGZvciAodmFyIHQgPSAwOyB0IDwgMTY7ICsrdCkge1xuICAgICAgV1t0XSA9IE1bX2kyXVt0XTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBfdCA9IDE2OyBfdCA8IDgwOyArK190KSB7XG4gICAgICBXW190XSA9IFJPVEwoV1tfdCAtIDNdIF4gV1tfdCAtIDhdIF4gV1tfdCAtIDE0XSBeIFdbX3QgLSAxNl0sIDEpO1xuICAgIH1cblxuICAgIHZhciBhID0gSFswXTtcbiAgICB2YXIgYiA9IEhbMV07XG4gICAgdmFyIGMgPSBIWzJdO1xuICAgIHZhciBkID0gSFszXTtcbiAgICB2YXIgZSA9IEhbNF07XG5cbiAgICBmb3IgKHZhciBfdDIgPSAwOyBfdDIgPCA4MDsgKytfdDIpIHtcbiAgICAgIHZhciBzID0gTWF0aC5mbG9vcihfdDIgLyAyMCk7XG4gICAgICB2YXIgVCA9IFJPVEwoYSwgNSkgKyBmKHMsIGIsIGMsIGQpICsgZSArIEtbc10gKyBXW190Ml0gPj4+IDA7XG4gICAgICBlID0gZDtcbiAgICAgIGQgPSBjO1xuICAgICAgYyA9IFJPVEwoYiwgMzApID4+PiAwO1xuICAgICAgYiA9IGE7XG4gICAgICBhID0gVDtcbiAgICB9XG5cbiAgICBIWzBdID0gSFswXSArIGEgPj4+IDA7XG4gICAgSFsxXSA9IEhbMV0gKyBiID4+PiAwO1xuICAgIEhbMl0gPSBIWzJdICsgYyA+Pj4gMDtcbiAgICBIWzNdID0gSFszXSArIGQgPj4+IDA7XG4gICAgSFs0XSA9IEhbNF0gKyBlID4+PiAwO1xuICB9XG5cbiAgcmV0dXJuIFtIWzBdID4+IDI0ICYgMHhmZiwgSFswXSA+PiAxNiAmIDB4ZmYsIEhbMF0gPj4gOCAmIDB4ZmYsIEhbMF0gJiAweGZmLCBIWzFdID4+IDI0ICYgMHhmZiwgSFsxXSA+PiAxNiAmIDB4ZmYsIEhbMV0gPj4gOCAmIDB4ZmYsIEhbMV0gJiAweGZmLCBIWzJdID4+IDI0ICYgMHhmZiwgSFsyXSA+PiAxNiAmIDB4ZmYsIEhbMl0gPj4gOCAmIDB4ZmYsIEhbMl0gJiAweGZmLCBIWzNdID4+IDI0ICYgMHhmZiwgSFszXSA+PiAxNiAmIDB4ZmYsIEhbM10gPj4gOCAmIDB4ZmYsIEhbM10gJiAweGZmLCBIWzRdID4+IDI0ICYgMHhmZiwgSFs0XSA+PiAxNiAmIDB4ZmYsIEhbNF0gPj4gOCAmIDB4ZmYsIEhbNF0gJiAweGZmXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc2hhMTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/sha1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMGdCQUEwZ0I7QUFDMWdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sd0RBQVE7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUVBQWUsU0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcz81OGNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG52YXIgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIpIHtcbiAgdmFyIG9mZnNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHZhciB1dWlkID0gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/stringify.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YxLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNZLENBQUM7QUFDeEM7QUFDQTtBQUNBOztBQUVBOztBQUVBLGVBQWU7OztBQUdmO0FBQ0Esb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGO0FBQ2hGO0FBQ0E7O0FBRUE7QUFDQSxzREFBc0QsK0NBQUc7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7O0FBR0Esd0VBQXdFO0FBQ3hFOztBQUVBLDRFQUE0RTs7QUFFNUUsOERBQThEOztBQUU5RDtBQUNBO0FBQ0EsSUFBSTtBQUNKOzs7QUFHQTtBQUNBO0FBQ0EsSUFBSTs7O0FBR0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCLDJCQUEyQjs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7O0FBRXRCO0FBQ0E7QUFDQSx1QkFBdUI7O0FBRXZCLG9DQUFvQzs7QUFFcEMsOEJBQThCOztBQUU5QixrQ0FBa0M7O0FBRWxDLDRCQUE0Qjs7QUFFNUIsa0JBQWtCLE9BQU87QUFDekI7QUFDQTs7QUFFQSxnQkFBZ0IseURBQVM7QUFDekI7O0FBRUEsaUVBQWUsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YxLmpzP2M1MGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJzsgLy8gKipgdjEoKWAgLSBHZW5lcmF0ZSB0aW1lLWJhc2VkIFVVSUQqKlxuLy9cbi8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9MaW9zSy9VVUlELmpzXG4vLyBhbmQgaHR0cDovL2RvY3MucHl0aG9uLm9yZy9saWJyYXJ5L3V1aWQuaHRtbFxuXG52YXIgX25vZGVJZDtcblxudmFyIF9jbG9ja3NlcTsgLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG5cblxudmFyIF9sYXN0TVNlY3MgPSAwO1xudmFyIF9sYXN0TlNlY3MgPSAwOyAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkIGZvciBBUEkgZGV0YWlsc1xuXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgdmFyIGIgPSBidWYgfHwgbmV3IEFycmF5KDE2KTtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBub2RlID0gb3B0aW9ucy5ub2RlIHx8IF9ub2RlSWQ7XG4gIHZhciBjbG9ja3NlcSA9IG9wdGlvbnMuY2xvY2tzZXEgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuY2xvY2tzZXEgOiBfY2xvY2tzZXE7IC8vIG5vZGUgYW5kIGNsb2Nrc2VxIG5lZWQgdG8gYmUgaW5pdGlhbGl6ZWQgdG8gcmFuZG9tIHZhbHVlcyBpZiB0aGV5J3JlIG5vdFxuICAvLyBzcGVjaWZpZWQuICBXZSBkbyB0aGlzIGxhemlseSB0byBtaW5pbWl6ZSBpc3N1ZXMgcmVsYXRlZCB0byBpbnN1ZmZpY2llbnRcbiAgLy8gc3lzdGVtIGVudHJvcHkuICBTZWUgIzE4OVxuXG4gIGlmIChub2RlID09IG51bGwgfHwgY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgIHZhciBzZWVkQnl0ZXMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpO1xuXG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuNSwgY3JlYXRlIGFuZCA0OC1iaXQgbm9kZSBpZCwgKDQ3IHJhbmRvbSBiaXRzICsgbXVsdGljYXN0IGJpdCA9IDEpXG4gICAgICBub2RlID0gX25vZGVJZCA9IFtzZWVkQnl0ZXNbMF0gfCAweDAxLCBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XV07XG4gICAgfVxuXG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9IC8vIFVVSUQgdGltZXN0YW1wcyBhcmUgMTAwIG5hbm8tc2Vjb25kIHVuaXRzIHNpbmNlIHRoZSBHcmVnb3JpYW4gZXBvY2gsXG4gIC8vICgxNTgyLTEwLTE1IDAwOjAwKS4gIEpTTnVtYmVycyBhcmVuJ3QgcHJlY2lzZSBlbm91Z2ggZm9yIHRoaXMsIHNvXG4gIC8vIHRpbWUgaXMgaGFuZGxlZCBpbnRlcm5hbGx5IGFzICdtc2VjcycgKGludGVnZXIgbWlsbGlzZWNvbmRzKSBhbmQgJ25zZWNzJ1xuICAvLyAoMTAwLW5hbm9zZWNvbmRzIG9mZnNldCBmcm9tIG1zZWNzKSBzaW5jZSB1bml4IGVwb2NoLCAxOTcwLTAxLTAxIDAwOjAwLlxuXG5cbiAgdmFyIG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IERhdGUubm93KCk7IC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcblxuICB2YXIgbnNlY3MgPSBvcHRpb25zLm5zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5zZWNzIDogX2xhc3ROU2VjcyArIDE7IC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcblxuICB2YXIgZHQgPSBtc2VjcyAtIF9sYXN0TVNlY3MgKyAobnNlY3MgLSBfbGFzdE5TZWNzKSAvIDEwMDAwOyAvLyBQZXIgNC4yLjEuMiwgQnVtcCBjbG9ja3NlcSBvbiBjbG9jayByZWdyZXNzaW9uXG5cbiAgaWYgKGR0IDwgMCAmJiBvcHRpb25zLmNsb2Nrc2VxID09PSB1bmRlZmluZWQpIHtcbiAgICBjbG9ja3NlcSA9IGNsb2Nrc2VxICsgMSAmIDB4M2ZmZjtcbiAgfSAvLyBSZXNldCBuc2VjcyBpZiBjbG9jayByZWdyZXNzZXMgKG5ldyBjbG9ja3NlcSkgb3Igd2UndmUgbW92ZWQgb250byBhIG5ld1xuICAvLyB0aW1lIGludGVydmFsXG5cblxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfSAvLyBQZXIgNC4yLjEuMiBUaHJvdyBlcnJvciBpZiB0b28gbWFueSB1dWlkcyBhcmUgcmVxdWVzdGVkXG5cblxuICBpZiAobnNlY3MgPj0gMTAwMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1dWlkLnYxKCk6IENhbid0IGNyZWF0ZSBtb3JlIHRoYW4gMTBNIHV1aWRzL3NlY1wiKTtcbiAgfVxuXG4gIF9sYXN0TVNlY3MgPSBtc2VjcztcbiAgX2xhc3ROU2VjcyA9IG5zZWNzO1xuICBfY2xvY2tzZXEgPSBjbG9ja3NlcTsgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG5cbiAgbXNlY3MgKz0gMTIyMTkyOTI4MDAwMDA7IC8vIGB0aW1lX2xvd2BcblxuICB2YXIgdGwgPSAoKG1zZWNzICYgMHhmZmZmZmZmKSAqIDEwMDAwICsgbnNlY3MpICUgMHgxMDAwMDAwMDA7XG4gIGJbaSsrXSA9IHRsID4+PiAyNCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiAxNiAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdGwgJiAweGZmOyAvLyBgdGltZV9taWRgXG5cbiAgdmFyIHRtaCA9IG1zZWNzIC8gMHgxMDAwMDAwMDAgKiAxMDAwMCAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjsgLy8gYHRpbWVfaGlnaF9hbmRfdmVyc2lvbmBcblxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG5cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7IC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDsgLy8gYGNsb2NrX3NlcV9sb3dgXG5cbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmOyAvLyBgbm9kZWBcblxuICBmb3IgKHZhciBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgfHwgc3RyaW5naWZ5KGIpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2MTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/uuid/dist/esm-browser/md5.js\");\n\n\nvar v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNBO0FBQzNCLFNBQVMsbURBQUcsYUFBYSwrQ0FBRztBQUM1QixpRUFBZSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjMuanM/NTRhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBtZDUgZnJvbSAnLi9tZDUuanMnO1xudmFyIHYzID0gdjM1KCd2MycsIDB4MzAsIG1kNSk7XG5leHBvcnQgZGVmYXVsdCB2MzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v3.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DNS\": () => (/* binding */ DNS),\n/* harmony export */   \"URL\": () => (/* binding */ URL),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzNS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1QztBQUNSOztBQUUvQjtBQUNBLDJDQUEyQzs7QUFFM0M7O0FBRUEsa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBOztBQUVBO0FBQ0E7O0FBRU87QUFDQTtBQUNQLDZCQUFlLG9DQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLHFEQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsc0JBQXNCLFFBQVE7QUFDOUI7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFdBQVcseURBQVM7QUFDcEIsSUFBSTs7O0FBR0o7QUFDQSw4QkFBOEI7QUFDOUIsSUFBSSxlQUFlOzs7QUFHbkI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92MzUuanM/ZmZjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcbmltcG9ydCBwYXJzZSBmcm9tICcuL3BhcnNlLmpzJztcblxuZnVuY3Rpb24gc3RyaW5nVG9CeXRlcyhzdHIpIHtcbiAgc3RyID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHN0cikpOyAvLyBVVEY4IGVzY2FwZVxuXG4gIHZhciBieXRlcyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgKytpKSB7XG4gICAgYnl0ZXMucHVzaChzdHIuY2hhckNvZGVBdChpKSk7XG4gIH1cblxuICByZXR1cm4gYnl0ZXM7XG59XG5cbmV4cG9ydCB2YXIgRE5TID0gJzZiYTdiODEwLTlkYWQtMTFkMS04MGI0LTAwYzA0ZmQ0MzBjOCc7XG5leHBvcnQgdmFyIFVSTCA9ICc2YmE3YjgxMS05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG5hbWUsIHZlcnNpb24sIGhhc2hmdW5jKSB7XG4gIGZ1bmN0aW9uIGdlbmVyYXRlVVVJRCh2YWx1ZSwgbmFtZXNwYWNlLCBidWYsIG9mZnNldCkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICB2YWx1ZSA9IHN0cmluZ1RvQnl0ZXModmFsdWUpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlID09PSAnc3RyaW5nJykge1xuICAgICAgbmFtZXNwYWNlID0gcGFyc2UobmFtZXNwYWNlKTtcbiAgICB9XG5cbiAgICBpZiAobmFtZXNwYWNlLmxlbmd0aCAhPT0gMTYpIHtcbiAgICAgIHRocm93IFR5cGVFcnJvcignTmFtZXNwYWNlIG11c3QgYmUgYXJyYXktbGlrZSAoMTYgaXRlcmFibGUgaW50ZWdlciB2YWx1ZXMsIDAtMjU1KScpO1xuICAgIH0gLy8gQ29tcHV0ZSBoYXNoIG9mIG5hbWVzcGFjZSBhbmQgdmFsdWUsIFBlciA0LjNcbiAgICAvLyBGdXR1cmU6IFVzZSBzcHJlYWQgc3ludGF4IHdoZW4gc3VwcG9ydGVkIG9uIGFsbCBwbGF0Zm9ybXMsIGUuZy4gYGJ5dGVzID1cbiAgICAvLyBoYXNoZnVuYyhbLi4ubmFtZXNwYWNlLCAuLi4gdmFsdWVdKWBcblxuXG4gICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoMTYgKyB2YWx1ZS5sZW5ndGgpO1xuICAgIGJ5dGVzLnNldChuYW1lc3BhY2UpO1xuICAgIGJ5dGVzLnNldCh2YWx1ZSwgbmFtZXNwYWNlLmxlbmd0aCk7XG4gICAgYnl0ZXMgPSBoYXNoZnVuYyhieXRlcyk7XG4gICAgYnl0ZXNbNl0gPSBieXRlc1s2XSAmIDB4MGYgfCB2ZXJzaW9uO1xuICAgIGJ5dGVzWzhdID0gYnl0ZXNbOF0gJiAweDNmIHwgMHg4MDtcblxuICAgIGlmIChidWYpIHtcbiAgICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgICAgYnVmW29mZnNldCArIGldID0gYnl0ZXNbaV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBidWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cmluZ2lmeShieXRlcyk7XG4gIH0gLy8gRnVuY3Rpb24jbmFtZSBpcyBub3Qgc2V0dGFibGUgb24gc29tZSBwbGF0Zm9ybXMgKCMyNzApXG5cblxuICB0cnkge1xuICAgIGdlbmVyYXRlVVVJRC5uYW1lID0gbmFtZTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gIH0gY2F0Y2ggKGVycikge30gLy8gRm9yIENvbW1vbkpTIGRlZmF1bHQgZXhwb3J0IHN1cHBvcnRcblxuXG4gIGdlbmVyYXRlVVVJRC5ETlMgPSBETlM7XG4gIGdlbmVyYXRlVVVJRC5VUkwgPSBVUkw7XG4gIHJldHVybiBnZW5lcmF0ZVVVSUQ7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v35.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNZOztBQUV2QztBQUNBO0FBQ0EsK0NBQStDLCtDQUFHLEtBQUs7O0FBRXZEO0FBQ0EsbUNBQW1DOztBQUVuQztBQUNBOztBQUVBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxTQUFTLHlEQUFTO0FBQ2xCOztBQUVBLGlFQUFlLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92NC5qcz9lYzI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuICBybmRzWzZdID0gcm5kc1s2XSAmIDB4MGYgfCAweDQwO1xuICBybmRzWzhdID0gcm5kc1s4XSAmIDB4M2YgfCAweDgwOyAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcblxuICBpZiAoYnVmKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHJuZHNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1ZjtcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdpZnkocm5kcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHY0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v4.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nvar v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y1LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNFO0FBQzdCLFNBQVMsbURBQUcsYUFBYSxnREFBSTtBQUM3QixpRUFBZSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjUuanM/MjZiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBzaGExIGZyb20gJy4vc2hhMS5qcyc7XG52YXIgdjUgPSB2MzUoJ3Y1JywgMHg1MCwgc2hhMSk7XG5leHBvcnQgZGVmYXVsdCB2NTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZhbGlkYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCOztBQUUvQjtBQUNBLHFDQUFxQyxzREFBVTtBQUMvQzs7QUFFQSxpRUFBZSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmFsaWRhdGUuanM/MDZlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUkVHRVggZnJvbSAnLi9yZWdleC5qcyc7XG5cbmZ1bmN0aW9uIHZhbGlkYXRlKHV1aWQpIHtcbiAgcmV0dXJuIHR5cGVvZiB1dWlkID09PSAnc3RyaW5nJyAmJiBSRUdFWC50ZXN0KHV1aWQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWxpZGF0ZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/validate.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction version(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZlcnNpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7O0FBRXJDO0FBQ0EsT0FBTyx3REFBUTtBQUNmO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpRUFBZSxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUFVCUS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmVyc2lvbi5qcz83NmU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcblxuZnVuY3Rpb24gdmVyc2lvbih1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlSW50KHV1aWQuc3Vic3RyKDE0LCAxKSwgMTYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2ZXJzaW9uOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/version.js\n");

/***/ }),

/***/ "./node_modules/writable-consumable-stream/consumer.js":
/*!*************************************************************!*\
  !*** ./node_modules/writable-consumable-stream/consumer.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("class Consumer {\n  constructor(stream, id, startNode, timeout) {\n    this.id = id;\n    this._backpressure = 0;\n    this.stream = stream;\n    this.currentNode = startNode;\n    this.timeout = timeout;\n    this.isAlive = true;\n    this.stream.setConsumer(this.id, this);\n  }\n\n  getStats() {\n    let stats = {\n      id: this.id,\n      backpressure: this._backpressure\n    };\n    if (this.timeout != null) {\n      stats.timeout = this.timeout;\n    }\n    return stats;\n  }\n\n  _resetBackpressure() {\n    this._backpressure = 0;\n  }\n\n  applyBackpressure(packet) {\n    this._backpressure++;\n  }\n\n  releaseBackpressure(packet) {\n    this._backpressure--;\n  }\n\n  getBackpressure() {\n    return this._backpressure;\n  }\n\n  write(packet) {\n    if (this._timeoutId !== undefined) {\n      clearTimeout(this._timeoutId);\n      delete this._timeoutId;\n    }\n    this.applyBackpressure(packet);\n    if (this._resolve) {\n      this._resolve();\n      delete this._resolve;\n    }\n  }\n\n  kill(value) {\n    if (this._timeoutId !== undefined) {\n      clearTimeout(this._timeoutId);\n      delete this._timeoutId;\n    }\n    this._killPacket = {value, done: true};\n    this._destroy();\n\n    if (this._resolve) {\n      this._resolve();\n      delete this._resolve;\n    }\n  }\n\n  _destroy() {\n    this.isAlive = false;\n    this._resetBackpressure();\n    this.stream.removeConsumer(this.id);\n  }\n\n  async _waitForNextItem(timeout) {\n    return new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      let timeoutId;\n      if (timeout !== undefined) {\n        // Create the error object in the outer scope in order\n        // to get the full stack trace.\n        let error = new Error('Stream consumer iteration timed out');\n        (async () => {\n          let delay = wait(timeout);\n          timeoutId = delay.timeoutId;\n          await delay.promise;\n          error.name = 'TimeoutError';\n          delete this._resolve;\n          reject(error);\n        })();\n      }\n      this._timeoutId = timeoutId;\n    });\n  }\n\n  async next() {\n    this.stream.setConsumer(this.id, this);\n\n    while (true) {\n      if (!this.currentNode.next) {\n        try {\n          await this._waitForNextItem(this.timeout);\n        } catch (error) {\n          this._destroy();\n          throw error;\n        }\n      }\n      if (this._killPacket) {\n        this._destroy();\n        let killPacket = this._killPacket;\n        delete this._killPacket;\n\n        return killPacket;\n      }\n\n      this.currentNode = this.currentNode.next;\n      this.releaseBackpressure(this.currentNode.data);\n\n      if (this.currentNode.consumerId && this.currentNode.consumerId !== this.id) {\n        continue;\n      }\n\n      if (this.currentNode.data.done) {\n        this._destroy();\n      }\n\n      return this.currentNode.data;\n    }\n  }\n\n  return() {\n    delete this.currentNode;\n    this._destroy();\n    return {};\n  }\n\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n}\n\nfunction wait(timeout) {\n  let timeoutId;\n  let promise = new Promise((resolve) => {\n    timeoutId = setTimeout(resolve, timeout);\n  });\n  return {timeoutId, promise};\n}\n\nmodule.exports = Consumer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd3JpdGFibGUtY29uc3VtYWJsZS1zdHJlYW0vY29uc3VtZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILFVBQVU7QUFDVjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BVQlEvLi9ub2RlX21vZHVsZXMvd3JpdGFibGUtY29uc3VtYWJsZS1zdHJlYW0vY29uc3VtZXIuanM/ZGI3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDb25zdW1lciB7XG4gIGNvbnN0cnVjdG9yKHN0cmVhbSwgaWQsIHN0YXJ0Tm9kZSwgdGltZW91dCkge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLl9iYWNrcHJlc3N1cmUgPSAwO1xuICAgIHRoaXMuc3RyZWFtID0gc3RyZWFtO1xuICAgIHRoaXMuY3VycmVudE5vZGUgPSBzdGFydE5vZGU7XG4gICAgdGhpcy50aW1lb3V0ID0gdGltZW91dDtcbiAgICB0aGlzLmlzQWxpdmUgPSB0cnVlO1xuICAgIHRoaXMuc3RyZWFtLnNldENvbnN1bWVyKHRoaXMuaWQsIHRoaXMpO1xuICB9XG5cbiAgZ2V0U3RhdHMoKSB7XG4gICAgbGV0IHN0YXRzID0ge1xuICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICBiYWNrcHJlc3N1cmU6IHRoaXMuX2JhY2twcmVzc3VyZVxuICAgIH07XG4gICAgaWYgKHRoaXMudGltZW91dCAhPSBudWxsKSB7XG4gICAgICBzdGF0cy50aW1lb3V0ID0gdGhpcy50aW1lb3V0O1xuICAgIH1cbiAgICByZXR1cm4gc3RhdHM7XG4gIH1cblxuICBfcmVzZXRCYWNrcHJlc3N1cmUoKSB7XG4gICAgdGhpcy5fYmFja3ByZXNzdXJlID0gMDtcbiAgfVxuXG4gIGFwcGx5QmFja3ByZXNzdXJlKHBhY2tldCkge1xuICAgIHRoaXMuX2JhY2twcmVzc3VyZSsrO1xuICB9XG5cbiAgcmVsZWFzZUJhY2twcmVzc3VyZShwYWNrZXQpIHtcbiAgICB0aGlzLl9iYWNrcHJlc3N1cmUtLTtcbiAgfVxuXG4gIGdldEJhY2twcmVzc3VyZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fYmFja3ByZXNzdXJlO1xuICB9XG5cbiAgd3JpdGUocGFja2V0KSB7XG4gICAgaWYgKHRoaXMuX3RpbWVvdXRJZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dElkKTtcbiAgICAgIGRlbGV0ZSB0aGlzLl90aW1lb3V0SWQ7XG4gICAgfVxuICAgIHRoaXMuYXBwbHlCYWNrcHJlc3N1cmUocGFja2V0KTtcbiAgICBpZiAodGhpcy5fcmVzb2x2ZSkge1xuICAgICAgdGhpcy5fcmVzb2x2ZSgpO1xuICAgICAgZGVsZXRlIHRoaXMuX3Jlc29sdmU7XG4gICAgfVxuICB9XG5cbiAga2lsbCh2YWx1ZSkge1xuICAgIGlmICh0aGlzLl90aW1lb3V0SWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXRJZCk7XG4gICAgICBkZWxldGUgdGhpcy5fdGltZW91dElkO1xuICAgIH1cbiAgICB0aGlzLl9raWxsUGFja2V0ID0ge3ZhbHVlLCBkb25lOiB0cnVlfTtcbiAgICB0aGlzLl9kZXN0cm95KCk7XG5cbiAgICBpZiAodGhpcy5fcmVzb2x2ZSkge1xuICAgICAgdGhpcy5fcmVzb2x2ZSgpO1xuICAgICAgZGVsZXRlIHRoaXMuX3Jlc29sdmU7XG4gICAgfVxuICB9XG5cbiAgX2Rlc3Ryb3koKSB7XG4gICAgdGhpcy5pc0FsaXZlID0gZmFsc2U7XG4gICAgdGhpcy5fcmVzZXRCYWNrcHJlc3N1cmUoKTtcbiAgICB0aGlzLnN0cmVhbS5yZW1vdmVDb25zdW1lcih0aGlzLmlkKTtcbiAgfVxuXG4gIGFzeW5jIF93YWl0Rm9yTmV4dEl0ZW0odGltZW91dCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLl9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgIGxldCB0aW1lb3V0SWQ7XG4gICAgICBpZiAodGltZW91dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vIENyZWF0ZSB0aGUgZXJyb3Igb2JqZWN0IGluIHRoZSBvdXRlciBzY29wZSBpbiBvcmRlclxuICAgICAgICAvLyB0byBnZXQgdGhlIGZ1bGwgc3RhY2sgdHJhY2UuXG4gICAgICAgIGxldCBlcnJvciA9IG5ldyBFcnJvcignU3RyZWFtIGNvbnN1bWVyIGl0ZXJhdGlvbiB0aW1lZCBvdXQnKTtcbiAgICAgICAgKGFzeW5jICgpID0+IHtcbiAgICAgICAgICBsZXQgZGVsYXkgPSB3YWl0KHRpbWVvdXQpO1xuICAgICAgICAgIHRpbWVvdXRJZCA9IGRlbGF5LnRpbWVvdXRJZDtcbiAgICAgICAgICBhd2FpdCBkZWxheS5wcm9taXNlO1xuICAgICAgICAgIGVycm9yLm5hbWUgPSAnVGltZW91dEVycm9yJztcbiAgICAgICAgICBkZWxldGUgdGhpcy5fcmVzb2x2ZTtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9KSgpO1xuICAgICAgfVxuICAgICAgdGhpcy5fdGltZW91dElkID0gdGltZW91dElkO1xuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgbmV4dCgpIHtcbiAgICB0aGlzLnN0cmVhbS5zZXRDb25zdW1lcih0aGlzLmlkLCB0aGlzKTtcblxuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICBpZiAoIXRoaXMuY3VycmVudE5vZGUubmV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGF3YWl0IHRoaXMuX3dhaXRGb3JOZXh0SXRlbSh0aGlzLnRpbWVvdXQpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIHRoaXMuX2Rlc3Ryb3koKTtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHRoaXMuX2tpbGxQYWNrZXQpIHtcbiAgICAgICAgdGhpcy5fZGVzdHJveSgpO1xuICAgICAgICBsZXQga2lsbFBhY2tldCA9IHRoaXMuX2tpbGxQYWNrZXQ7XG4gICAgICAgIGRlbGV0ZSB0aGlzLl9raWxsUGFja2V0O1xuXG4gICAgICAgIHJldHVybiBraWxsUGFja2V0O1xuICAgICAgfVxuXG4gICAgICB0aGlzLmN1cnJlbnROb2RlID0gdGhpcy5jdXJyZW50Tm9kZS5uZXh0O1xuICAgICAgdGhpcy5yZWxlYXNlQmFja3ByZXNzdXJlKHRoaXMuY3VycmVudE5vZGUuZGF0YSk7XG5cbiAgICAgIGlmICh0aGlzLmN1cnJlbnROb2RlLmNvbnN1bWVySWQgJiYgdGhpcy5jdXJyZW50Tm9kZS5jb25zdW1lcklkICE9PSB0aGlzLmlkKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5jdXJyZW50Tm9kZS5kYXRhLmRvbmUpIHtcbiAgICAgICAgdGhpcy5fZGVzdHJveSgpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jdXJyZW50Tm9kZS5kYXRhO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybigpIHtcbiAgICBkZWxldGUgdGhpcy5jdXJyZW50Tm9kZTtcbiAgICB0aGlzLl9kZXN0cm95KCk7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5mdW5jdGlvbiB3YWl0KHRpbWVvdXQpIHtcbiAgbGV0IHRpbWVvdXRJZDtcbiAgbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZW91dCk7XG4gIH0pO1xuICByZXR1cm4ge3RpbWVvdXRJZCwgcHJvbWlzZX07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ29uc3VtZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/writable-consumable-stream/consumer.js\n");

/***/ }),

/***/ "./node_modules/writable-consumable-stream/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/writable-consumable-stream/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ConsumableStream = __webpack_require__(/*! consumable-stream */ \"./node_modules/consumable-stream/index.js\");\nconst Consumer = __webpack_require__(/*! ./consumer */ \"./node_modules/writable-consumable-stream/consumer.js\");\n\nclass WritableConsumableStream extends ConsumableStream {\n  constructor() {\n    super();\n    this.nextConsumerId = 1;\n    this._consumers = new Map();\n\n    // Tail node of a singly linked list.\n    this._tailNode = {\n      next: null,\n      data: {\n        value: undefined,\n        done: false\n      }\n    };\n  }\n\n  _write(value, done, consumerId) {\n    let dataNode = {\n      data: {value, done},\n      next: null\n    };\n    if (consumerId) {\n      dataNode.consumerId = consumerId;\n    }\n    this._tailNode.next = dataNode;\n    this._tailNode = dataNode;\n\n    for (let consumer of this._consumers.values()) {\n      consumer.write(dataNode.data);\n    }\n  }\n\n  write(value) {\n    this._write(value, false);\n  }\n\n  close(value) {\n    this._write(value, true);\n  }\n\n  writeToConsumer(consumerId, value) {\n    this._write(value, false, consumerId);\n  }\n\n  closeConsumer(consumerId, value) {\n    this._write(value, true, consumerId);\n  }\n\n  kill(value) {\n    for (let consumerId of this._consumers.keys()) {\n      this.killConsumer(consumerId, value);\n    }\n  }\n\n  killConsumer(consumerId, value) {\n    let consumer = this._consumers.get(consumerId);\n    if (!consumer) {\n      return;\n    }\n    consumer.kill(value);\n  }\n\n  getBackpressure() {\n    let maxBackpressure = 0;\n    for (let consumer of this._consumers.values()) {\n      let backpressure = consumer.getBackpressure();\n      if (backpressure > maxBackpressure) {\n        maxBackpressure = backpressure;\n      }\n    }\n    return maxBackpressure;\n  }\n\n  getConsumerBackpressure(consumerId) {\n    let consumer = this._consumers.get(consumerId);\n    if (consumer) {\n      return consumer.getBackpressure();\n    }\n    return 0;\n  }\n\n  hasConsumer(consumerId) {\n    return this._consumers.has(consumerId);\n  }\n\n  setConsumer(consumerId, consumer) {\n    this._consumers.set(consumerId, consumer);\n    if (!consumer.currentNode) {\n      consumer.currentNode = this._tailNode;\n    }\n  }\n\n  removeConsumer(consumerId) {\n    return this._consumers.delete(consumerId);\n  }\n\n  getConsumerStats(consumerId) {\n    let consumer = this._consumers.get(consumerId);\n    if (consumer) {\n      return consumer.getStats();\n    }\n    return undefined;\n  }\n\n  getConsumerStatsList() {\n    let consumerStats = [];\n    for (let consumer of this._consumers.values()) {\n      consumerStats.push(consumer.getStats());\n    }\n    return consumerStats;\n  }\n\n  createConsumer(timeout) {\n    return new Consumer(this, this.nextConsumerId++, this._tailNode, timeout);\n  }\n\n  getConsumerList() {\n    return [...this._consumers.values()];\n  }\n\n  getConsumerCount() {\n    return this._consumers.size;\n  }\n}\n\nmodule.exports = WritableConsumableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd3JpdGFibGUtY29uc3VtYWJsZS1zdHJlYW0vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEseUJBQXlCLG1CQUFPLENBQUMsb0VBQW1CO0FBQ3BELGlCQUFpQixtQkFBTyxDQUFDLHlFQUFZOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QVUJRLy4vbm9kZV9tb2R1bGVzL3dyaXRhYmxlLWNvbnN1bWFibGUtc3RyZWFtL2luZGV4LmpzPzg1YmYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ29uc3VtYWJsZVN0cmVhbSA9IHJlcXVpcmUoJ2NvbnN1bWFibGUtc3RyZWFtJyk7XG5jb25zdCBDb25zdW1lciA9IHJlcXVpcmUoJy4vY29uc3VtZXInKTtcblxuY2xhc3MgV3JpdGFibGVDb25zdW1hYmxlU3RyZWFtIGV4dGVuZHMgQ29uc3VtYWJsZVN0cmVhbSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5uZXh0Q29uc3VtZXJJZCA9IDE7XG4gICAgdGhpcy5fY29uc3VtZXJzID0gbmV3IE1hcCgpO1xuXG4gICAgLy8gVGFpbCBub2RlIG9mIGEgc2luZ2x5IGxpbmtlZCBsaXN0LlxuICAgIHRoaXMuX3RhaWxOb2RlID0ge1xuICAgICAgbmV4dDogbnVsbCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgZG9uZTogZmFsc2VcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgX3dyaXRlKHZhbHVlLCBkb25lLCBjb25zdW1lcklkKSB7XG4gICAgbGV0IGRhdGFOb2RlID0ge1xuICAgICAgZGF0YToge3ZhbHVlLCBkb25lfSxcbiAgICAgIG5leHQ6IG51bGxcbiAgICB9O1xuICAgIGlmIChjb25zdW1lcklkKSB7XG4gICAgICBkYXRhTm9kZS5jb25zdW1lcklkID0gY29uc3VtZXJJZDtcbiAgICB9XG4gICAgdGhpcy5fdGFpbE5vZGUubmV4dCA9IGRhdGFOb2RlO1xuICAgIHRoaXMuX3RhaWxOb2RlID0gZGF0YU5vZGU7XG5cbiAgICBmb3IgKGxldCBjb25zdW1lciBvZiB0aGlzLl9jb25zdW1lcnMudmFsdWVzKCkpIHtcbiAgICAgIGNvbnN1bWVyLndyaXRlKGRhdGFOb2RlLmRhdGEpO1xuICAgIH1cbiAgfVxuXG4gIHdyaXRlKHZhbHVlKSB7XG4gICAgdGhpcy5fd3JpdGUodmFsdWUsIGZhbHNlKTtcbiAgfVxuXG4gIGNsb3NlKHZhbHVlKSB7XG4gICAgdGhpcy5fd3JpdGUodmFsdWUsIHRydWUpO1xuICB9XG5cbiAgd3JpdGVUb0NvbnN1bWVyKGNvbnN1bWVySWQsIHZhbHVlKSB7XG4gICAgdGhpcy5fd3JpdGUodmFsdWUsIGZhbHNlLCBjb25zdW1lcklkKTtcbiAgfVxuXG4gIGNsb3NlQ29uc3VtZXIoY29uc3VtZXJJZCwgdmFsdWUpIHtcbiAgICB0aGlzLl93cml0ZSh2YWx1ZSwgdHJ1ZSwgY29uc3VtZXJJZCk7XG4gIH1cblxuICBraWxsKHZhbHVlKSB7XG4gICAgZm9yIChsZXQgY29uc3VtZXJJZCBvZiB0aGlzLl9jb25zdW1lcnMua2V5cygpKSB7XG4gICAgICB0aGlzLmtpbGxDb25zdW1lcihjb25zdW1lcklkLCB2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAga2lsbENvbnN1bWVyKGNvbnN1bWVySWQsIHZhbHVlKSB7XG4gICAgbGV0IGNvbnN1bWVyID0gdGhpcy5fY29uc3VtZXJzLmdldChjb25zdW1lcklkKTtcbiAgICBpZiAoIWNvbnN1bWVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN1bWVyLmtpbGwodmFsdWUpO1xuICB9XG5cbiAgZ2V0QmFja3ByZXNzdXJlKCkge1xuICAgIGxldCBtYXhCYWNrcHJlc3N1cmUgPSAwO1xuICAgIGZvciAobGV0IGNvbnN1bWVyIG9mIHRoaXMuX2NvbnN1bWVycy52YWx1ZXMoKSkge1xuICAgICAgbGV0IGJhY2twcmVzc3VyZSA9IGNvbnN1bWVyLmdldEJhY2twcmVzc3VyZSgpO1xuICAgICAgaWYgKGJhY2twcmVzc3VyZSA+IG1heEJhY2twcmVzc3VyZSkge1xuICAgICAgICBtYXhCYWNrcHJlc3N1cmUgPSBiYWNrcHJlc3N1cmU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtYXhCYWNrcHJlc3N1cmU7XG4gIH1cblxuICBnZXRDb25zdW1lckJhY2twcmVzc3VyZShjb25zdW1lcklkKSB7XG4gICAgbGV0IGNvbnN1bWVyID0gdGhpcy5fY29uc3VtZXJzLmdldChjb25zdW1lcklkKTtcbiAgICBpZiAoY29uc3VtZXIpIHtcbiAgICAgIHJldHVybiBjb25zdW1lci5nZXRCYWNrcHJlc3N1cmUoKTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBoYXNDb25zdW1lcihjb25zdW1lcklkKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbnN1bWVycy5oYXMoY29uc3VtZXJJZCk7XG4gIH1cblxuICBzZXRDb25zdW1lcihjb25zdW1lcklkLCBjb25zdW1lcikge1xuICAgIHRoaXMuX2NvbnN1bWVycy5zZXQoY29uc3VtZXJJZCwgY29uc3VtZXIpO1xuICAgIGlmICghY29uc3VtZXIuY3VycmVudE5vZGUpIHtcbiAgICAgIGNvbnN1bWVyLmN1cnJlbnROb2RlID0gdGhpcy5fdGFpbE5vZGU7XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlQ29uc3VtZXIoY29uc3VtZXJJZCkge1xuICAgIHJldHVybiB0aGlzLl9jb25zdW1lcnMuZGVsZXRlKGNvbnN1bWVySWQpO1xuICB9XG5cbiAgZ2V0Q29uc3VtZXJTdGF0cyhjb25zdW1lcklkKSB7XG4gICAgbGV0IGNvbnN1bWVyID0gdGhpcy5fY29uc3VtZXJzLmdldChjb25zdW1lcklkKTtcbiAgICBpZiAoY29uc3VtZXIpIHtcbiAgICAgIHJldHVybiBjb25zdW1lci5nZXRTdGF0cygpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0Q29uc3VtZXJTdGF0c0xpc3QoKSB7XG4gICAgbGV0IGNvbnN1bWVyU3RhdHMgPSBbXTtcbiAgICBmb3IgKGxldCBjb25zdW1lciBvZiB0aGlzLl9jb25zdW1lcnMudmFsdWVzKCkpIHtcbiAgICAgIGNvbnN1bWVyU3RhdHMucHVzaChjb25zdW1lci5nZXRTdGF0cygpKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnN1bWVyU3RhdHM7XG4gIH1cblxuICBjcmVhdGVDb25zdW1lcih0aW1lb3V0KSB7XG4gICAgcmV0dXJuIG5ldyBDb25zdW1lcih0aGlzLCB0aGlzLm5leHRDb25zdW1lcklkKyssIHRoaXMuX3RhaWxOb2RlLCB0aW1lb3V0KTtcbiAgfVxuXG4gIGdldENvbnN1bWVyTGlzdCgpIHtcbiAgICByZXR1cm4gWy4uLnRoaXMuX2NvbnN1bWVycy52YWx1ZXMoKV07XG4gIH1cblxuICBnZXRDb25zdW1lckNvdW50KCkge1xuICAgIHJldHVybiB0aGlzLl9jb25zdW1lcnMuc2l6ZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFdyaXRhYmxlQ29uc3VtYWJsZVN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/writable-consumable-stream/index.js\n");

/***/ }),

/***/ "./node_modules/axios/dist/browser/axios.cjs":
/*!***************************************************!*\
  !*** ./node_modules/axios/dist/browser/axios.cjs ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Axios v1.6.2 Copyright (c) 2023 Matt Zabriskie and contributors\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : __webpack_require__.g)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils$1.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders$1.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils$1.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nconst VERSION = \"1.6.2\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/dist/browser/axios.cjs\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/pubq.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});